<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PengeSoft.Core</name>
    </assembly>
    <members>
        <member name="T:PengeSoft.Logging.LogSetting">
            <summary>
            日志配置数据类
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.LogSetting.#ctor(System.Type,System.Collections.Specialized.NameValueCollection)">
            <summary>
            构造函数
            </summary>
            <param name="factoryAdapterType">日志类工厂适配器类型</param>
            <param name="properties">属性表</param>
        </member>
        <member name="P:PengeSoft.Logging.LogSetting.FactoryAdapterType">
            <summary>
            日志类工厂适配器类型
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.LogSetting.Properties">
            <summary>
            属性表
            </summary>
        </member>
        <member name="T:PengeSoft.IM.IMMsgRec">
            <summary>
            IMMsgRec 的摘要说明。
            </summary>
        </member>
        <member name="T:PengeSoft.Data.DataPacket">
            <summary>
            所有数据类的基类，实现同Delphi程序的兼容。
            </summary>
        </member>
        <member name="T:PengeSoft.Data.BinSerial">
            <summary>
            BinSerial, 二进制序列化对象的基类
            </summary>
        </member>
        <member name="T:PengeSoft.Data.IBinSerial">
            <summary>
            对象binary序列化处理接口，用于繁杂类型处理，只能用序列化为元素。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.IBinSerial.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.IBinSerial.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.BinSerial.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.BinSerial.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.BinSerial.WriteToStreamStrFmt(System.IO.Stream,System.Byte[])">
            <summary>
            将二进制数据 byte[] 以 Delphi String 格式存储到流中
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:PengeSoft.Data.BinSerial.ReadFromStreamStrFmt(System.IO.Stream,System.Byte[]@)">
            <summary>
            将流中以 Delphi String 格式存储的二进制数据读到 byte[]
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="T:PengeSoft.Data.IJsonSerializer">
            <summary>
            对象Json序列化处理接口，用于繁杂类型处理，只能用序列化为元素。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.IJsonSerializer.JsonEncode(Newtonsoft.Json.JsonWriter)">
            <summary>
            将对象写入Json节点
            </summary>
            <param name="node">Json节点</param>
        </member>
        <member name="M:PengeSoft.Data.IJsonSerializer.JsonDecode(Newtonsoft.Json.JsonReader)">
            <summary>
            从Json节点中读出对象
            </summary>
            <param name="node">Json节点</param>
        </member>
        <member name="F:PengeSoft.Data.DataPacket.PS_DATANODE_ID">
            <summary>
            DataPacket序列化时的节点名称
            </summary>
        </member>
        <member name="F:PengeSoft.Data.DataPacket.StringArraySplit">
            <summary>
            StringArray序列化时的分隔符 (char)10
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.EncodeDataStrA(System.String,System.String,System.Text.StringBuilder,System.Int32,System.Boolean)">
            <summary>
            对指定字符串编码
            </summary>
            <param name="key"></param>
            <param name="str"></param>
            <param name="outStr"></param>
            <param name="nSize"></param>
            <param name="Comperss"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.DecodeDataStrA(System.String,System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            对指定字符串编解码
            </summary>
            <param name="key"></param>
            <param name="str"></param>
            <param name="outStr"></param>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.IdEncoder64A(System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="outStr"></param>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.IdDecoder64A(System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="outStr"></param>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.EncodeDataStrW(System.String,System.String,System.Text.StringBuilder,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="str"></param>
            <param name="outStr"></param>
            <param name="nSize"></param>
            <param name="Comperss"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.DecodeDataStrW(System.String,System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="str"></param>
            <param name="outStr"></param>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.IdEncoder64W(System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="outStr"></param>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.IdDecoder64W(System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="outStr"></param>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.EncodeStrA(System.String,System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            对指定字符串编码
            </summary>
            <param name="key"></param>
            <param name="str"></param>
            <param name="outStr"></param>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.DecodeStrA(System.String,System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            对指定字符串编解码
            </summary>
            <param name="key"></param>
            <param name="str"></param>
            <param name="outStr"></param>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.EncodeStrW(System.String,System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="str"></param>
            <param name="outStr"></param>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.DecodeStrW(System.String,System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="str"></param>
            <param name="outStr"></param>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.EncodeStr(System.String,System.String)">
            <summary>
            字符串加码
            </summary>
            <param name="Key"></param>
            <param name="Str"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.DecodeStr(System.String,System.String)">
            <summary>
            字符串解码
            </summary>
            <param name="Key"></param>
            <param name="Str"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.EncodeBase64(System.String)">
            <summary>
            Base64加码
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.DecodeBase64(System.String)">
            <summary>
            Base64解码
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.EncodeDataStr(System.String,System.String,System.Boolean)">
            <summary>
            字符串加码
            </summary>
            <param name="Key"></param>
            <param name="Str"></param>
            <param name="Compress"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.EncodeDataStr(System.String,System.String)">
            <summary>
            字符串加码
            </summary>
            <param name="Key"></param>
            <param name="Str"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.DecodeDataStr(System.String,System.String)">
            <summary>
            字符串解码
            </summary>
            <param name="Key"></param>
            <param name="Str"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.IdEncoder64(System.String)">
            <summary>
            与Delphi兼容的Base64(IdEncoder64)编码
            </summary>
            <param name="Str"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.IdDecoder64(System.String)">
            <summary>
            与Delphi兼容的Base64(IdDecoder64)解码
            </summary>
            <param name="Str"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.#ctor">
            <summary>
            创建 DataPacket 实例
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.SelectChildNode(System.Xml.XmlNode,System.String)">
            <summary>
            返回子节点
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttribStr(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            写属性值到Xml节点
            </summary>
            <param name="node">Xml节点</param>
            <param name="atrName">属性名称</param>
            <param name="Value">属性值</param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttribStr(System.Xml.XmlNode,System.String)">
            <summary>
            从Xml节点读出属性值
            </summary>
            <param name="node">Xml节点</param>
            <param name="atrName">属性名称</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            写属性值到Xml节点, string 类型值, 缺省值为空串。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.String@)">
            <summary>
            从Xml节点读出属性值, string 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,PengeSoft.Data.StringList)">
            <summary>
            写属性值到Xml节点, <see cref="T:PengeSoft.Data.StringList"/> 类型值, 将StringList.Text属性用Base64编码后保存,缺省值为空表。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,PengeSoft.Data.StringList@)">
            <summary>
            从Xml节点读出属性值, <see cref="T:PengeSoft.Data.StringList"/> 类型值, 用Base64解码后赋与StringList.Text属性。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.Int16)">
            <summary>
            写属性值到Xml节点, short 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.Int16@)">
            <summary>
            从Xml节点读出属性值, short 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.UInt16)">
            <summary>
            写属性值到Xml节点, ushort 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.UInt16@)">
            <summary>
            从Xml节点读出属性值, ushort 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.Int32)">
            <summary>
            写属性值到Xml节点, int 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.Int32@)">
            <summary>
            从Xml节点读出属性值, int 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.UInt32)">
            <summary>
            写属性值到Xml节点, uint 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.UInt32@)">
            <summary>
            从Xml节点读出属性值, uint 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.Int64)">
            <summary>
            写属性值到Xml节点, long 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.Int64@)">
            <summary>
            从Xml节点读出属性值, long 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.Boolean)">
            <summary>
            写属性值到Xml节点, bool 类型值, 缺省值为 false 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.Boolean@)">
            <summary>
            从Xml节点读出属性值, bool 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.Double)">
            <summary>
            写属性值到Xml节点, double 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.Double@)">
            <summary>
            从Xml节点读出属性值, double 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.Decimal)">
            <summary>
            写值到Xml节点属性, decimal 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.Decimal@)">
            <summary>
            从Xml节点读出属性值, decimal 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.Guid)">
            <summary>
            写值到Xml节点属性, Guid 类型值, 缺省值为 00000000-0000-0000-0000-000000000000 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.Guid@)">
            <summary>
            从Xml节点读出属性值, Guid 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.DateTime)">
            <summary>
            写属性值到Xml节点, DateTime 类型值, 缺省值为最小日期 DateTime.MinValue 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.DateTime@)">
            <summary>
            从Xml节点读出属性值, DateTime 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.Byte[])">
            <summary>
            写属性值到Xml节点, byte[] 类型值, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.Byte[]@)">
            <summary>
            从Xml节点读出属性值, byte[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.Int32[])">
            <summary>
            写属性值到Xml节点, int[] 类型值, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.Int32[]@)">
            <summary>
            从Xml节点读出属性值, int[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.UInt16[])">
            <summary>
            写属性值到Xml节点, ushort[] 类型值, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.UInt16[]@)">
            <summary>
            从Xml节点读出属性值, ushort[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.Int16[])">
            <summary>
            写属性值到Xml节点, short[] 类型值, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.Int16[]@)">
            <summary>
            从Xml节点读出属性值, short[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.Int64[])">
            <summary>
            写属性值到Xml节点, long[] 类型, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.Int64[]@)">
            <summary>
            从Xml节点读出属性值, long[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.Double[])">
            <summary>
            写属性值到Xml节点, double[] 类型, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.Double[]@)">
            <summary>
            从Xml节点读出属性值, double[] 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.Decimal[])">
            <summary>
            写属性值到Xml节点, decimal[] 类型, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.Decimal[]@)">
            <summary>
            从Xml节点读出属性值, decimal[] 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValue(System.Xml.XmlNode,System.String,System.String[])">
            <summary>
            写属性值到Xml节点, string[] 类型, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以 (char)10 分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValue(System.Xml.XmlNode,System.String,System.String[]@)">
            <summary>
            从Xml节点读出属性值, string[] 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLStr(System.Xml.XmlNode,System.String)">
            <summary>
            从Xml子节点读出子节点字符串
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <returns>字符串</returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLStr(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            写字符串到子节点
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value">字符串</param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.NewXmlChildNode(System.Xml.XmlNode,System.String)">
            <summary>
            创建子节点
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <returns>子节点</returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            写值到Xml子节点, string 类型值, 缺省值为空串。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.String@)">
            <summary>
            从Xml子节点读出值, string 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,PengeSoft.Data.StringList)">
            <summary>
            写值到Xml子节点, <see cref="T:PengeSoft.Data.StringList"/> 类型值, 将StringList.Text用Base64编码后保存,缺省值为空表。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,PengeSoft.Data.StringList@)">
            <summary>
            从Xml子节点读出值, <see cref="T:PengeSoft.Data.StringList"/> 类型值, 用Base64解码后赋与StringList.Text。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Int16)">
            <summary>
            写值到Xml子节点, short 类型值, 缺省值为0。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Int16@)">
            <summary>
            从Xml子节点读出值, short 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.UInt16)">
            <summary>
            写值到Xml子节点, ushort 类型值, 缺省值为0。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.UInt16@)">
            <summary>
            从Xml子节点读出值, ushort 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Int32)">
            <summary>
            写值到Xml子节点, int 类型值, 缺省值为0。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Int32@)">
            <summary>
            从Xml子节点读出值, int 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.UInt32)">
            <summary>
            写值到Xml子节点, uint 类型值, 缺省值为0。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.UInt32@)">
            <summary>
            从Xml子节点读出值, uint 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Int64)">
            <summary>
            写值到Xml子节点, long 类型值, 缺省值为0。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Int64@)">
            <summary>
            从Xml子节点读出值, long 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Boolean)">
            <summary>
            写值到Xml子节点, bool 类型值, 缺省值为 false 。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Boolean@)">
            <summary>
            从Xml子节点读出值, bool 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Double)">
            <summary>
            写值到Xml子节点, double 类型值, 缺省值为0。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Double@)">
            <summary>
            从Xml子节点读出值, double 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Decimal)">
            <summary>
            写值到Xml子节点, decimal 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Decimal@)">
            <summary>
            从Xml子节点读出值, decimal 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Guid)">
            <summary>
            写值到Xml子节点, Guid 类型值, 缺省值为 00000000-0000-0000-0000-000000000000 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Guid@)">
            <summary>
            从Xml子节点读出值, Guid 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.DateTime)">
            <summary>
            写值到Xml子节点, DateTime 类型值, 缺省值为最小日期 DateTime.MinValue 。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.DateTime@)">
            <summary>
            从Xml子节点读出值, DateTime 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Object)">
            <summary>
            写值到Xml子节点, 变体类型值，支持int,word,int64,double,date,boolean,string, 非以上类型保存为unknown。
            </summary>
            <remarks>
            string类型做为缺省类型不需type属性
            </remarks>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Object@)">
            <summary>
            从Xml子节点读出值, 变体类型值，支持int,word,int64,double,date,boolean,string,datetime,char,decimal 。
            unknown类型按string读出。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Object[])">
            <summary>
            写值到Xml子节点, object[] 类型值, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Object[]@)">
            <summary>
            从Xml子节点读出值, object[] 类型
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Byte[])">
            <summary>
            写值到Xml子节点, byte[] 类型值, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Byte[]@)">
            <summary>
            从Xml子节点读出值, byte[] 类型
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Int32[])">
            <summary>
            写值到Xml子节点, int[] 类型值, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Int32[]@)">
            <summary>
            从Xml子节点读出值, int[] 类型
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.UInt16[])">
            <summary>
            写值到Xml子节点, ushort[] 类型值, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.UInt16[]@)">
            <summary>
            从Xml子节点读出值, ushort[] 类型
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Int16[])">
            <summary>
            写值到Xml子节点, short[] 类型值, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Int16[]@)">
            <summary>
            从Xml子节点读出值, short[] 类型
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Int64[])">
            <summary>
            写值到Xml子节点, long[] 类型, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Int64[]@)">
            <summary>
            从Xml子节点读出值, long[] 类型
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Double[])">
            <summary>
            写值到Xml子节点, double[] 类型, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Double[]@)">
            <summary>
            从Xml子节点读出值, double[] 类型。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Decimal[])">
            <summary>
            写值到Xml子节点, decimal[] 类型, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Decimal[]@)">
            <summary>
            从Xml子节点读出值, decimal[] 类型。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.String[])">
            <summary>
            写值到Xml子节点, string[] 类型, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以 (char)10 分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.String[]@)">
            <summary>
            从Xml子节点读出值, string[] 类型。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,PengeSoft.Data.DataPacket)">
            <summary>
            写值到Xml子节点, <see cref="T:PengeSoft.Data.DataPacket"/>对象, 缺省值为null。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,PengeSoft.Data.DataPacket)">
            <summary>
            从Xml子节点读出 <see cref="T:PengeSoft.Data.DataPacket"/>对象。需与写入对象一致。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,PengeSoft.Data.IXmlSerial)">
            <summary>
            写值到Xml子节点, <see cref="T:PengeSoft.Data.IXmlSerial"/>对象。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,PengeSoft.Data.IXmlSerial)">
            <summary>
            从Xml子节点读出 <see cref="T:PengeSoft.Data.IXmlSerial"/>对象。需与写入对象一致。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,PengeSoft.Data.ObjList)">
            <summary>
            写值到Xml子节点, <see cref="T:PengeSoft.Data.ObjList"/>对象, 缺省值为null。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,PengeSoft.Data.ObjList)">
            <summary>
            从Xml子节点读出 <see cref="T:PengeSoft.Data.ObjList"/>对象。需与写入对象一致。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,PengeSoft.Data.ObjList,System.Type)">
            <summary>
            从Xml子节点读出 <see cref="T:PengeSoft.Data.ObjList"/>对象。指定项目数据类型,必须为<see cref="T:PengeSoft.Data.DataPacket"/>的派生类型。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="itemType">项目数据类型</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValue(System.Xml.XmlNode,System.String,System.Collections.IDictionary)">
            <summary>
            写值到Xml子节点, IDictionary 类型, IDictionary 的Key需为字符串类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValue(System.Xml.XmlNode,System.String,System.Collections.IDictionary)">
            <summary>
            从Xml节子点读出值, IDictionary 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeStr(System.Xml.XmlNode)">
            <summary>
            从Xml节点读出字符串值
            </summary>
            <param name="node">Xml节点</param>
            <returns>读出的字符串,空串用null表达</returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeStr(System.Xml.XmlNode,System.String)">
            <summary>
            写字符串值到Xml节点
            </summary>
            <param name="node">Xml节点</param>
            <param name="Value">字符串值</param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            写值到Xml节点, string 类型值, 缺省值为空串。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.String@)">
            <summary>
            从Xml节点读出值, string 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,PengeSoft.Data.StringList)">
            <summary>
            写值到Xml节点, <see cref="T:PengeSoft.Data.StringList"/> 类型值, 将StringList.Text用Base64编码后保存,缺省值为空表。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,PengeSoft.Data.StringList@)">
            <summary>
            从Xml节点读出值, <see cref="T:PengeSoft.Data.StringList"/> 类型值, 用Base64解码后赋与StringList.Text。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Int16)">
            <summary>
            写值到Xml节点, short 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Int16@)">
            <summary>
            从Xml节点读出值, short 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.UInt16)">
            <summary>
            写值到Xml节点, ushort 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.UInt16@)">
            <summary>
            从Xml节点读出值, ushort 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Int32)">
            <summary>
            写值到Xml节点, int 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Int32@)">
            <summary>
            从Xml节点读出值, int 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.UInt32)">
            <summary>
            写值到Xml节点, uint 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.UInt32@)">
            <summary>
            从Xml节点读出值, uint 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Int64)">
            <summary>
            写值到Xml节点, long 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Int64@)">
            <summary>
            从Xml节点读出值, long 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Boolean)">
            <summary>
            写值到Xml节点, bool 类型值, 缺省值为 false 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Boolean@)">
            <summary>
            从Xml节点读出值, bool 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Double)">
            <summary>
            写值到Xml节点, double 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Double@)">
            <summary>
            从Xml节点读出值, double 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Decimal)">
            <summary>
            写值到Xml节点, decimal 类型值, 缺省值为0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Decimal@)">
            <summary>
            从Xml节点读出值, decimal 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Guid)">
            <summary>
            写值到Xml节点, Guid 类型值, 缺省值为 00000000-0000-0000-0000-000000000000 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Guid@)">
            <summary>
            从Xml节点读出值, Guid 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.DateTime)">
            <summary>
            写值到Xml节点, DateTime 类型值, 缺省值为最小日期 DateTime.MinValue 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.DateTime@)">
            <summary>
            从Xml节点读出值, DateTime 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Object)">
            <summary>
            写值到Xml节点, 变体类型值，支持int,word,int64,double,date,boolean,string, 非以上类型保存为unknown。
            </summary>
            <remarks>
            string类型做为缺省类型不需type属性
            </remarks>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Object@)">
            <summary>
            从Xml节点读出值, 变体类型值，支持int,word,int64,double,date,boolean,string 。
            unknown类型按string读出。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Byte[])">
            <summary>
            写值到Xml节点, byte[] 类型值, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Byte[]@)">
            <summary>
            从Xml节点读出值, byte[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Int32[])">
            <summary>
            写值到Xml节点, int[] 类型值, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Int32[]@)">
            <summary>
            从Xml节点读出值, int[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.UInt16[])">
            <summary>
            写值到Xml节点, ushort[] 类型值, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.UInt16[]@)">
            <summary>
            从Xml节点读出值, ushort[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Int16[])">
            <summary>
            写值到Xml节点, short[] 类型值, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Int16[]@)">
            <summary>
            从Xml节点读出值, short[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Int64[])">
            <summary>
            写值到Xml节点, long[] 类型, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Int64[]@)">
            <summary>
            从Xml节点读出值, long[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Double[])">
            <summary>
            写值到Xml节点, double[] 类型, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Double[]@)">
            <summary>
            从Xml节点读出值, double[] 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.Decimal[])">
            <summary>
            写值到Xml节点, decimal[] 类型, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.Decimal[]@)">
            <summary>
            从Xml节点读出值, decimal[] 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,System.String[])">
            <summary>
            写值到Xml节点, string[] 类型, 缺省值为空数组。
            以数组长度开头，然后是各下标数据，以 (char)10 分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,System.String[]@)">
            <summary>
            从Xml节点读出值, string[] 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,PengeSoft.Data.ObjList)">
            <summary>
            写值到Xml节点, <see cref="T:PengeSoft.Data.ObjList"/>对象, 缺省值为null。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,PengeSoft.Data.ObjList)">
            <summary>
            从Xml节点读出 <see cref="T:PengeSoft.Data.ObjList"/>对象。需与写入对象一致。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValue(System.Xml.XmlNode,System.String,PengeSoft.Data.IXmlSerial)">
            <summary>
            写值到Xml子节点, <see cref="T:PengeSoft.Data.IXmlSerial"/>对象。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValue(System.Xml.XmlNode,System.String,PengeSoft.Data.IXmlSerial)">
            <summary>
            从Xml子节点读出 <see cref="T:PengeSoft.Data.IXmlSerial"/>对象。需与写入对象一致。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttribStrA(System.Xml.XmlNode,System.String)">
            <summary>
            从Xml节点读出属性值
            </summary>
            <param name="node">Xml节点</param>
            <param name="atrName">属性名称</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            写属性值到Xml节点, string 类型值, 无缺省值空串。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.String@)">
            <summary>
            从Xml节点读出属性值, string 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.StringList)">
            <summary>
            写属性值到Xml节点, <see cref="T:PengeSoft.Data.StringList"/> 类型值, 将StringList.Text属性用Base64编码后保存,无缺省值空表。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.StringList@)">
            <summary>
            从Xml节点读出属性值, <see cref="T:PengeSoft.Data.StringList"/> 类型值, 用Base64解码后赋与StringList.Text属性。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.Int16)">
            <summary>
            写属性值到Xml节点, short 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.Int16@)">
            <summary>
            从Xml节点读出属性值, short 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.UInt16)">
            <summary>
            写属性值到Xml节点, ushort 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.UInt16@)">
            <summary>
            从Xml节点读出属性值, ushort 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.Int32)">
            <summary>
            写属性值到Xml节点, int 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.Int32@)">
            <summary>
            从Xml节点读出属性值, int 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.UInt32)">
            <summary>
            写属性值到Xml节点, uint 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.UInt32@)">
            <summary>
            从Xml节点读出属性值, uint 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.Int64)">
            <summary>
            写属性值到Xml节点, long 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.Int64@)">
            <summary>
            从Xml节点读出属性值, long 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.Boolean)">
            <summary>
            写属性值到Xml节点, bool 类型值, 无缺省值 false 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.Boolean@)">
            <summary>
            从Xml节点读出属性值, bool 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.Double)">
            <summary>
            写属性值到Xml节点, double 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.Double@)">
            <summary>
            从Xml节点读出属性值, double 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.Decimal)">
            <summary>
            写值到Xml节点属性, decimal 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.Decimal@)">
            <summary>
            从Xml节点读出属性值, decimal 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.Guid)">
            <summary>
            写值到Xml节点属性, Guid 类型值, 无缺省值 00000000-0000-0000-0000-000000000000 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.Guid@)">
            <summary>
            从Xml节点读出属性值, Guid 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.DateTime)">
            <summary>
            写属性值到Xml节点, DateTime 类型值, 无缺省值最小日期 DateTime.MinValue 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.DateTime@)">
            <summary>
            从Xml节点读出属性值, DateTime 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.Byte[])">
            <summary>
            写属性值到Xml节点, byte[] 类型值, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.Byte[]@)">
            <summary>
            从Xml节点读出属性值, byte[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.Int32[])">
            <summary>
            写属性值到Xml节点, int[] 类型值, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.Int32[]@)">
            <summary>
            从Xml节点读出属性值, int[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.UInt16[])">
            <summary>
            写属性值到Xml节点, ushort[] 类型值, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.UInt16[]@)">
            <summary>
            从Xml节点读出属性值, ushort[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.Int16[])">
            <summary>
            写属性值到Xml节点, short[] 类型值, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.Int16[]@)">
            <summary>
            从Xml节点读出属性值, short[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.Int64[])">
            <summary>
            写属性值到Xml节点, long[] 类型, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.Int64[]@)">
            <summary>
            从Xml节点读出属性值, long[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.Double[])">
            <summary>
            写属性值到Xml节点, double[] 类型, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.Double[]@)">
            <summary>
            从Xml节点读出属性值, double[] 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.Decimal[])">
            <summary>
            写属性值到Xml节点, decimal[] 类型, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.Decimal[]@)">
            <summary>
            从Xml节点读出属性值, decimal[] 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlAttrValueA(System.Xml.XmlNode,System.String,System.String[])">
            <summary>
            写属性值到Xml节点, string[] 类型, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以 (char)10 分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlAttrValueA(System.Xml.XmlNode,System.String,System.String[]@)">
            <summary>
            从Xml节点读出属性值, string[] 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLStrA(System.Xml.XmlNode,System.String)">
            <summary>
            从Xml子节点读出子节点字符串
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <returns>字符串</returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            写值到Xml子节点, string 类型值, 无缺省值空串。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.String@)">
            <summary>
            从Xml子节点读出值, string 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.StringList)">
            <summary>
            写值到Xml子节点, <see cref="T:PengeSoft.Data.StringList"/> 类型值, 将StringList.Text用Base64编码后保存,无缺省值空表。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.StringList@)">
            <summary>
            从Xml子节点读出值, <see cref="T:PengeSoft.Data.StringList"/> 类型值, 用Base64解码后赋与StringList.Text。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Int16)">
            <summary>
            写值到Xml子节点, short 类型值, 无缺省值0。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Int16@)">
            <summary>
            从Xml子节点读出值, short 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.UInt16)">
            <summary>
            写值到Xml子节点, ushort 类型值, 无缺省值0。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.UInt16@)">
            <summary>
            从Xml子节点读出值, ushort 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Int32)">
            <summary>
            写值到Xml子节点, int 类型值, 无缺省值0。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Int32@)">
            <summary>
            从Xml子节点读出值, int 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.UInt32)">
            <summary>
            写值到Xml子节点, uint 类型值, 无缺省值0。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.UInt32@)">
            <summary>
            从Xml子节点读出值, uint 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Int64)">
            <summary>
            写值到Xml子节点, long 类型值, 无缺省值0。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Int64@)">
            <summary>
            从Xml子节点读出值, long 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Boolean)">
            <summary>
            写值到Xml子节点, bool 类型值, 无缺省值 false 。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Boolean@)">
            <summary>
            从Xml子节点读出值, bool 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Double)">
            <summary>
            写值到Xml子节点, double 类型值, 无缺省值0。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Double@)">
            <summary>
            从Xml子节点读出值, double 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Decimal)">
            <summary>
            写值到Xml子节点, decimal 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Decimal@)">
            <summary>
            从Xml子节点读出值, decimal 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Guid)">
            <summary>
            写值到Xml子节点, Guid 类型值, 无缺省值 00000000-0000-0000-0000-000000000000 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Guid@)">
            <summary>
            从Xml子节点读出值, Guid 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.DateTime)">
            <summary>
            写值到Xml子节点, DateTime 类型值, 无缺省值最小日期 DateTime.MinValue 。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.DateTime@)">
            <summary>
            从Xml子节点读出值, DateTime 类型值
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Object)">
            <summary>
            写值到Xml子节点, 变体类型值，支持int,word,int64,double,date,boolean,string, 非以上类型保存为unknown。
            </summary>
            <remarks>
            string类型做为缺省类型不需type属性
            </remarks>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Object@)">
            <summary>
            从Xml子节点读出值, 变体类型值，支持int,word,int64,double,date,boolean,string,datetime,char,decimal 。
            unknown类型按string读出。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Object[])">
            <summary>
            写值到Xml子节点, object[] 类型值, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Object[]@)">
            <summary>
            从Xml子节点读出值, object[] 类型
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Byte[])">
            <summary>
            写值到Xml子节点, byte[] 类型值, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Byte[]@)">
            <summary>
            从Xml子节点读出值, byte[] 类型
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Int32[])">
            <summary>
            写值到Xml子节点, int[] 类型值, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Int32[]@)">
            <summary>
            从Xml子节点读出值, int[] 类型
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.UInt16[])">
            <summary>
            写值到Xml子节点, ushort[] 类型值, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.UInt16[]@)">
            <summary>
            从Xml子节点读出值, ushort[] 类型
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Int16[])">
            <summary>
            写值到Xml子节点, short[] 类型值, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Int16[]@)">
            <summary>
            从Xml子节点读出值, short[] 类型
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Int64[])">
            <summary>
            写值到Xml子节点, long[] 类型, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Int64[]@)">
            <summary>
            从Xml子节点读出值, long[] 类型
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Double[])">
            <summary>
            写值到Xml子节点, double[] 类型, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Double[]@)">
            <summary>
            从Xml子节点读出值, double[] 类型。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Decimal[])">
            <summary>
            写值到Xml子节点, decimal[] 类型, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Decimal[]@)">
            <summary>
            从Xml子节点读出值, decimal[] 类型。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.String[])">
            <summary>
            写值到Xml子节点, string[] 类型, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以 (char)10 分开。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.String[]@)">
            <summary>
            从Xml子节点读出值, string[] 类型。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.DataPacket)">
            <summary>
            写值到Xml子节点, <see cref="T:PengeSoft.Data.DataPacket"/>对象, 无缺省值null。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.DataPacket)">
            <summary>
            从Xml子节点读出 <see cref="T:PengeSoft.Data.DataPacket"/>对象。需与写入对象一致。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.IXmlSerial)">
            <summary>
            写值到Xml子节点, <see cref="T:PengeSoft.Data.IXmlSerial"/>对象。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.IXmlSerial)">
            <summary>
            从Xml子节点读出 <see cref="T:PengeSoft.Data.IXmlSerial"/>对象。需与写入对象一致。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.ObjList)">
            <summary>
            写值到Xml子节点, <see cref="T:PengeSoft.Data.ObjList"/>对象, 无缺省值null。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.ObjList)">
            <summary>
            从Xml子节点读出 <see cref="T:PengeSoft.Data.ObjList"/>对象。需与写入对象一致。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.ObjList,System.Type)">
            <summary>
            从Xml子节点读出 <see cref="T:PengeSoft.Data.ObjList"/>对象。指定项目数据类型,必须为<see cref="T:PengeSoft.Data.DataPacket"/>的派生类型。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="itemType">项目数据类型</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXMLValueA(System.Xml.XmlNode,System.String,System.Collections.IDictionary)">
            <summary>
            写值到Xml子节点, IDictionary 类型, IDictionary 的Key需为字符串类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXMLValueA(System.Xml.XmlNode,System.String,System.Collections.IDictionary)">
            <summary>
            从Xml节子点读出值, IDictionary 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeStrA(System.Xml.XmlNode)">
            <summary>
            从Xml节点读出字符串值
            </summary>
            <param name="node">Xml节点</param>
            <returns>读出的字符串,空串用null表达</returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            写值到Xml节点, string 类型值, 无缺省值空串。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.String@)">
            <summary>
            从Xml节点读出值, string 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.StringList)">
            <summary>
            写值到Xml节点, <see cref="T:PengeSoft.Data.StringList"/> 类型值, 将StringList.Text用Base64编码后保存,无缺省值空表。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.StringList@)">
            <summary>
            从Xml节点读出值, <see cref="T:PengeSoft.Data.StringList"/> 类型值, 用Base64解码后赋与StringList.Text。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Int16)">
            <summary>
            写值到Xml节点, short 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Int16@)">
            <summary>
            从Xml节点读出值, short 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.UInt16)">
            <summary>
            写值到Xml节点, ushort 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.UInt16@)">
            <summary>
            从Xml节点读出值, ushort 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Int32)">
            <summary>
            写值到Xml节点, int 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Int32@)">
            <summary>
            从Xml节点读出值, int 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.UInt32)">
            <summary>
            写值到Xml节点, uint 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.UInt32@)">
            <summary>
            从Xml节点读出值, uint 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Int64)">
            <summary>
            写值到Xml节点, long 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Int64@)">
            <summary>
            从Xml节点读出值, long 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Boolean)">
            <summary>
            写值到Xml节点, bool 类型值, 无缺省值 false 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Boolean@)">
            <summary>
            从Xml节点读出值, bool 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Double)">
            <summary>
            写值到Xml节点, double 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Double@)">
            <summary>
            从Xml节点读出值, double 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Decimal)">
            <summary>
            写值到Xml节点, decimal 类型值, 无缺省值0。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Decimal@)">
            <summary>
            从Xml节点读出值, decimal 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Guid)">
            <summary>
            写值到Xml节点, Guid 类型值, 无缺省值 00000000-0000-0000-0000-000000000000 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Guid@)">
            <summary>
            从Xml节点读出值, Guid 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.DateTime)">
            <summary>
            写值到Xml节点, DateTime 类型值, 无缺省值最小日期 DateTime.MinValue 。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.DateTime@)">
            <summary>
            从Xml节点读出值, DateTime 类型值
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Object)">
            <summary>
            写值到Xml节点, 变体类型值，支持int,word,int64,double,date,boolean,string, 非以上类型保存为unknown。
            </summary>
            <remarks>
            string类型做为缺省类型不需type属性
            </remarks>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Object@)">
            <summary>
            从Xml节点读出值, 变体类型值，支持int,word,int64,double,date,boolean,string 。
            unknown类型按string读出。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Byte[])">
            <summary>
            写值到Xml节点, byte[] 类型值, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Byte[]@)">
            <summary>
            从Xml节点读出值, byte[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Int32[])">
            <summary>
            写值到Xml节点, int[] 类型值, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Int32[]@)">
            <summary>
            从Xml节点读出值, int[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.UInt16[])">
            <summary>
            写值到Xml节点, ushort[] 类型值, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.UInt16[]@)">
            <summary>
            从Xml节点读出值, ushort[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Int16[])">
            <summary>
            写值到Xml节点, short[] 类型值, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Int16[]@)">
            <summary>
            从Xml节点读出值, short[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Int64[])">
            <summary>
            写值到Xml节点, long[] 类型, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Int64[]@)">
            <summary>
            从Xml节点读出值, long[] 类型
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Double[])">
            <summary>
            写值到Xml节点, double[] 类型, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Double[]@)">
            <summary>
            从Xml节点读出值, double[] 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.Decimal[])">
            <summary>
            写值到Xml节点, decimal[] 类型, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以‘，’分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.Decimal[]@)">
            <summary>
            从Xml节点读出值, decimal[] 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,System.String[])">
            <summary>
            写值到Xml节点, string[] 类型, 无缺省值空数组。
            以数组长度开头，然后是各下标数据，以 (char)10 分开。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,System.String[]@)">
            <summary>
            从Xml节点读出值, string[] 类型。
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.ObjList)">
            <summary>
            写值到Xml节点, <see cref="T:PengeSoft.Data.ObjList"/>对象, 无缺省值null。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.ObjList)">
            <summary>
            从Xml节点读出 <see cref="T:PengeSoft.Data.ObjList"/>对象。需与写入对象一致。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteXmlNodeValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.IXmlSerial)">
            <summary>
            写值到Xml子节点, <see cref="T:PengeSoft.Data.IXmlSerial"/>对象。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.ReadXmlNodeValueA(System.Xml.XmlNode,System.String,PengeSoft.Data.IXmlSerial)">
            <summary>
            从Xml子节点读出 <see cref="T:PengeSoft.Data.IXmlSerial"/>对象。需与写入对象一致。
            </summary>
            <param name="node">Xml节点</param>
            <param name="mc">子节点名称</param>
            <param name="Value"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.GetTypeName">
            <summary>
            取类型短名称
            </summary>
            <returns>类型短名称</returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.Clear">
            <summary>
            初始化所有字段
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.XMLEncode(System.Xml.XmlNode)">
            <summary>
            将对象写入XML节点
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.XMLDecode(System.Xml.XmlNode)">
            <summary>
            从XML节点中读出对象
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteToXmlFile(System.String)">
            <summary>
            将对象写到Xml文件
            </summary>
            <param name="FileName">文件名称</param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.WriteToXmlFile(System.String,System.Text.Encoding)">
            <summary>
            将对象写到Xml文件
            </summary>
            <param name="FileName">文件名称</param>
            <param name="encoding">文件编码</param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.LoadFromXmlFile(System.String)">
            <summary>
            从Xml文件中读出对象
            </summary>
            <param name="FileName">文件名称</param>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.GetDataStatusSet(System.Int32)">
            <summary>
            获取对象的状态字的位状态
            </summary>
            <param name="n">位置0-31</param>
            <returns>状态值</returns>
        </member>
        <member name="M:PengeSoft.Data.DataPacket.SetDataStatusSet(System.Int32,System.Boolean)">
            <summary>
            设置对象的状态字的位状态
            </summary>
            <param name="n">位置0-31</param>
            <param name="v">状态值</param>
        </member>
        <member name="P:PengeSoft.Data.DataPacket.XMLText">
            <summary>
            设置或获取对象的Xml序列。
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPacket.Version">
            <summary>
            设置或获取对象的版本号
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPacket.LoadVersion">
            <summary>
            二进制调入时的版本号
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPacket.RID">
            <summary>
            设置或获取对象的序列号(整型数)
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPacket.UniqueID">
            <summary>
            设置或获取对象的Guid
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPacket.UniqueIDStr">
            <summary>
            设置或获取对象的字符串格式的Guid
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPacket.DataStatus">
            <summary>
            设置或获取对象的状态字
            </summary>
        </member>
        <member name="M:PengeSoft.IM.IMMsgRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.IM.IMMsgRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.IM.IMMsgRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.IM.IMMsgRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.IM.IMMsgRec.TypeID">
            <summary>
            消息类别 
            </summary>
        </member>
        <member name="P:PengeSoft.IM.IMMsgRec.FromID">
            <summary>
            发信人ID 
            </summary>
        </member>
        <member name="P:PengeSoft.IM.IMMsgRec.ToID">
            <summary>
            收信人ID 
            </summary>
        </member>
        <member name="P:PengeSoft.IM.IMMsgRec.Msg">
            <summary>
            消息正文 
            </summary>
        </member>
        <member name="P:PengeSoft.IM.IMMsgRec.SendTime">
            <summary>
            发送时间 
            </summary>
        </member>
        <member name="T:PengeSoft.IM.IMSendFileRec">
            <summary>
            IMSendFileRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.IM.IMSendFileRec.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.IM.IMSendFileRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.IM.IMSendFileRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.IM.IMSendFileRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.IM.IMSendFileRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.IM.IMSendFileRec.Msg">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:PengeSoft.IM.IMSendFileRec.Files">
            <summary>
            文件路径列表 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.GroupTree">
            <summary>
            GroupTree 的摘要说明。
            </summary>
        </member>
        <member name="T:PengeSoft.Data.GroupBase">
            <summary>
            GroupBase 的摘要说明。
            </summary>
            <remarks>
            需手工修改Stream,Assign相关代码 
            </remarks>
        </member>
        <member name="T:PengeSoft.Data.TrunTable">
            <summary>
            TrunTable 的摘要说明。
            </summary>
        </member>
        <member name="T:PengeSoft.Data.DataPageBase">
            <summary>
            DataPageBase 的摘要说明。
            </summary>
        </member>
        <member name="T:PengeSoft.Data.DataBase">
            <summary>
            DataBase 数据类，为与 Delphi 的 TDataBase 兼容。
            </summary>
        </member>
        <member name="F:PengeSoft.Data.DataBase.PS_TableNode_ID">
            <summary>
            DataBase序列化时的节点名称
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataBase.XMLText">
            <summary>
            设置或获取对象的Xml序列。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DataPageBase.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DataPageBase.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DataPageBase.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.DataPageBase.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.DataPageBase.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.DataPageBase.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.DataPageBase.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.DataPageBase.FileID">
            <summary>
            表格标识 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPageBase.Name">
            <summary>
            名称 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPageBase.Attrib">
            <summary>
            属性 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPageBase.TableName">
            <summary>
            表格名称 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPageBase.TableType">
            <summary>
            表格类型 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPageBase.TableTypeSub">
            <summary>
            表格子类型 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPageBase.PrintFile">
            <summary>
            打印定义文件 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPageBase.PrintNum">
            <summary>
            打印定义号 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPageBase.MacroList">
            <summary>
            表格宏 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPageBase.Tag">
            <summary>
            表格Tag 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataPageBase.Attribs">
            <summary>
            表格属性表 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.TrunTable.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.TrunTable.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.TrunTable.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.TrunTable.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.TrunTable.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.TrunTable.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.TrunTable.CurTableName">
            <summary>
            当前表格名称 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GroupBase.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GroupBase.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GroupBase.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GroupBase.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GroupBase.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.GroupBase.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.GroupBase.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.GroupBase.TableList">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GroupBase.RemI">
            <summary>
             
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GroupTree.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GroupTree.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GroupTree.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GroupTree.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.GroupTree.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.GroupTree.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.GroupTree.TreeWidth">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GroupTree.RemI2">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.WorkFlow.ConfigureHandler">
            <summary>
            Represents the method that handles calls from Configure.
            </summary>
            <remarks>
            obj is a null object in a DaoManager context.
            obj is the reconfigured sqlMap in a SqlMap context.
            </remarks>
        </member>
        <member name="T:PengeSoft.WorkFlow.StateConfig">
            <summary>
            
            </summary>
        </member>
        <member name="F:PengeSoft.WorkFlow.StateConfig.FileName">
            <summary>
            Master Config File name.
            </summary>
        </member>
        <member name="F:PengeSoft.WorkFlow.StateConfig.ConfigureHandler">
            <summary>
            Delegate called when a file is changed, use it to rebuild.
            </summary>
        </member>
        <member name="T:PengeSoft.WorkFlow.ConfigWatcherHandler">
            <summary>
            Class used to watch config files.
            </summary>
            <remarks>
            Uses the <see cref="T:System.IO.FileSystemWatcher"/> to monitor
            changes to a specified file. Because multiple change notifications
            may be raised when the file is modified, a timer is used to
            compress the notifications into a single event. The timer
            waits for <see cref="F:PengeSoft.WorkFlow.ConfigWatcherHandler.TimoutMillis"/> time before delivering
            the event notification. If any further <see cref="T:System.IO.FileSystemWatcher"/>
            change notifications arrive while the timer is waiting it
            is reset and waits again for <see cref="F:PengeSoft.WorkFlow.ConfigWatcherHandler.TimoutMillis"/> to
            elaps.
            </remarks>
        </member>
        <member name="F:PengeSoft.WorkFlow.ConfigWatcherHandler.TimoutMillis">
            <summary>
            The default amount of time to wait after receiving notification
            before reloading the config file.
            </summary>
        </member>
        <member name="F:PengeSoft.WorkFlow.ConfigWatcherHandler._timer">
            <summary>
            The timer used to compress the notification events.
            </summary>
        </member>
        <member name="F:PengeSoft.WorkFlow.ConfigWatcherHandler._filesToWatch">
            <summary>
            A list of configuration files to watch.
            </summary>
        </member>
        <member name="F:PengeSoft.WorkFlow.ConfigWatcherHandler._filesWatcher">
            <summary>
            The list of FileSystemWatcher.
            </summary>
        </member>
        <member name="M:PengeSoft.WorkFlow.ConfigWatcherHandler.#ctor(System.Threading.TimerCallback,PengeSoft.WorkFlow.StateConfig)">
             <summary>
            -
             </summary>
             <param name="state">
             Represent the call context of the SqlMap or DaoManager ConfigureAndWatch method call.
             </param>
             <param name="onWhatchedFileChange"></param>
        </member>
        <member name="M:PengeSoft.WorkFlow.ConfigWatcherHandler.AddFileToWatch(System.IO.FileInfo)">
            <summary>
            Add a file to be monitored.
            </summary>
            <param name="configFile"></param>
        </member>
        <member name="M:PengeSoft.WorkFlow.ConfigWatcherHandler.ClearFilesMonitored">
            <summary>
            Reset the list of files being monitored.
            </summary>
        </member>
        <member name="M:PengeSoft.WorkFlow.ConfigWatcherHandler.OnConfigFileChange(System.Object)">
            <summary>
            Called when the configuration has been updated. 
            </summary>
            <param name="obj">The state config.</param>
        </member>
        <member name="M:PengeSoft.WorkFlow.ConfigWatcherHandler.NewWatchInstance(System.String,PengeSoft.WorkFlow.ConfigureHandler)">
            <summary>
            
            </summary>
            <param name="resource"></param>
            <param name="configureDelegate"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.WorkFlow.ConfigWatcherHandler.GetFileInfo(System.String)">
            <summary>
            
            </summary>
            <param name="resourcePath"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.WorkFlow.ConfigWatcherHandler.ConfigWatcherHandler_OnChanged(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Event handler used by <see cref="T:PengeSoft.WorkFlow.ConfigWatcherHandler"/>.
            </summary>
            <param name="source">The <see cref="T:System.IO.FileSystemWatcher"/> firing the event.</param>
            <param name="e">The argument indicates the file that caused the event to be fired.</param>
            <remarks>
            This handler reloads the configuration from the file when the event is fired.
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkFlow.ConfigWatcherHandler.ConfigWatcherHandler_OnRenamed(System.Object,System.IO.RenamedEventArgs)">
            <summary>
            Event handler used by <see cref="T:PengeSoft.WorkFlow.ConfigWatcherHandler"/>.
            </summary>
            <param name="source">The <see cref="T:System.IO.FileSystemWatcher"/> firing the event.</param>
            <param name="e">The argument indicates the file that caused the event to be fired.</param>
            <remarks>
            This handler reloads the configuration from the file when the event is fired.
            </remarks>
        </member>
        <member name="T:PengeSoft.Net.CommunicationBase">
            <summary>
            通讯客户端基类
            </summary>
        </member>
        <member name="T:PengeSoft.Net.TcpCommunication">
            <summary>
            一次性连接方式的TCP通讯客户端实现类
            </summary>
        </member>
        <member name="T:PengeSoft.Net.UdpCommunication">
            <summary>
            单数据包的UDP通讯客户端类,数据必须包小于8K
            </summary>
        </member>
        <member name="T:PengeSoft.Logging.LogManager">
            <summary>
            LogManager对<see cref="T:PengeSoft.Logging.ILoggerFactoryAdapter"/>类工厂适配器进行管理，ILoggerFactoryAdapter在配置文件的"PengeSoft/logging"节中配置,
            缺省适置器为日志控制台输出(<see cref="T:PengeSoft.Logging.Impl.ConsoleOutLoggerFA"/>)。其他内置适配器还包括文件日志(<see cref="T:PengeSoft.Logging.Impl.FileLoggerFA"/>),
            空日志(<see cref="T:PengeSoft.Logging.Impl.NoOpLoggerFA"/>)和<see cref="T:PengeSoft.Logging.Impl.TraceLoggerFA"/>。
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.LogManager.#ctor">
            <summary>
            初始化<see cref="T:PengeSoft.Logging.LogManager"/>实例。 
            </summary>
            <remarks>
            指定为么有，不能直接用new实例化。
            </remarks>
        </member>
        <member name="M:PengeSoft.Logging.LogManager.GetLogger(System.Type)">
            <summary>
            根据被记录类类型取日志管理器。
            </summary>
            <param name="type">类型</param>
            <returns>日志管理器<see cref="T:PengeSoft.Logging.ILog"/></returns>
        </member>
        <member name="M:PengeSoft.Logging.LogManager.GetLogger(System.String)">
            <summary>
            根据日志名称取日志管理器。
            </summary>
            <param name="name">日志名称</param>
            <returns>日志管理器</returns>
        </member>
        <member name="M:PengeSoft.Logging.LogManager.BuildLoggerFactoryAdapter">
            <summary>
            从配置中得到日志类工厂适配器。
            </summary>
            <returns>适配器</returns>
        </member>
        <member name="M:PengeSoft.Logging.LogManager.BuildDefaultLoggerFactoryAdapter">
            <summary>
            形成缺省的日志适配器
            </summary>
            <returns></returns>
        </member>
        <member name="P:PengeSoft.Logging.LogManager.Adapter">
            <summary>
            取ILoggerFactoryAdapter适配器。
            </summary>
            <value>适配器实例</value>
        </member>
        <member name="T:PengeSoft.Data.TableContainer">
            <summary>
            TableContainer 的摘要说明。
            </summary>
            <remarks>
            表格容器,需手工修改 
            </remarks>
        </member>
        <member name="M:PengeSoft.Data.TableContainer.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.TableContainer.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.TableContainer.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.TableContainer.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.TableContainer.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.TableContainer.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.TableContainer.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.TableContainer.Table">
            <summary>
            表格数据 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.SimpleMailRec">
            <summary>
            SimpleMailRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SimpleMailRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SimpleMailRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SimpleMailRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SimpleMailRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SimpleMailRec.From">
            <summary>
            发件人 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SimpleMailRec.ReplyTo">
            <summary>
            回复到 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SimpleMailRec.ToAds">
            <summary>
            收件人 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SimpleMailRec.CC">
            <summary>
            抄送 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SimpleMailRec.Subject">
            <summary>
            主题 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SimpleMailRec.body">
            <summary>
            内容 
            </summary>
        </member>
        <member name="T:PengeSoft.WebService.WebSrvMethodDef">
            <summary>
            WebService方法定义, 分析服务WebService元数据用。
            </summary>
        </member>
        <member name="M:PengeSoft.WebService.WebSrvMethodDef.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PengeSoft.WebService.WebSrvMethodDef.#ctor(System.Reflection.MethodInfo)">
            <summary>
            构造函数
            </summary>
            <param name="Meth">服务类成员<see cref="T:System.Reflection.MethodInfo"/></param>
        </member>
        <member name="M:PengeSoft.WebService.WebSrvMethodDef.AddAttrib(PengeSoft.WebService.WebSrvMethodAttribute)">
            <summary>
            添加一个方法属性
            </summary>
            <param name="matr">属性定义<see cref="!:WebSrvMethod"/></param>
        </member>
        <member name="M:PengeSoft.WebService.WebSrvMethodDef.ClearAttribs">
            <summary>
            清除属性定义
            </summary>
        </member>
        <member name="P:PengeSoft.WebService.WebSrvMethodDef.Method">
            <summary>
            WebService方法对应的服务类成员。
            </summary>
        </member>
        <member name="P:PengeSoft.WebService.WebSrvMethodDef.Attribs">
            <summary>
            WebService方法对应的服务类成员的属性定义<see cref="!:WebSrvMethod"/>表。
            </summary>
        </member>
        <member name="T:PengeSoft.WebService.WebServiceDef">
            <summary>
            WebService定义
            </summary>
        </member>
        <member name="M:PengeSoft.WebService.WebServiceDef.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PengeSoft.WebService.WebServiceDef.#ctor(System.Type,PengeSoft.WebService.WebSrvNameAttribute)">
            <summary>
            构造函数有参数
            </summary>
        </member>
        <member name="M:PengeSoft.WebService.WebServiceDef.AddMethod(PengeSoft.WebService.WebSrvMethodDef)">
            <summary>
            添加方法
            </summary>
        </member>
        <member name="M:PengeSoft.WebService.WebServiceDef.ClearMethods">
            <summary>
            清除方法表
            </summary>
        </member>
        <member name="M:PengeSoft.WebService.WebServiceDef.GetMethDefsFrom(System.Type)">
            <summary>
            从类类型中取方法定义
            </summary>
            <param name="t">类类型</param>
        </member>
        <member name="P:PengeSoft.WebService.WebServiceDef.WSClassType">
            <summary>
            输出WebService的服务类类型
            </summary>
        </member>
        <member name="P:PengeSoft.WebService.WebServiceDef.WSAttrib">
            <summary>
            输出WebService的服务类属性<see cref="!:WebSrvName"/>
            </summary>
        </member>
        <member name="P:PengeSoft.WebService.WebServiceDef.Methods">
            <summary>
            方法表
            </summary>
        </member>
        <member name="T:PengeSoft.WebService.WebServiceDefs">
            <summary>
            WebService定义数据表
            </summary>
        </member>
        <member name="M:PengeSoft.WebService.WebServiceDefs.#ctor">
            <summary>
            创建定义表实例
            </summary>
        </member>
        <member name="M:PengeSoft.WebService.WebServiceDefs.#ctor(System.String)">
            <summary>
            创建定义表实例，并从指定程序集中取出所有定义
            </summary>
            <param name="assemblyFile">程序集名称</param>
        </member>
        <member name="M:PengeSoft.WebService.WebServiceDefs.#ctor(System.Reflection.Assembly)">
            <summary>
            创建定义表实例，并从指定程序集中取出所有定义
            </summary>
            <param name="asm">程序集对象</param>
        </member>
        <member name="M:PengeSoft.WebService.WebServiceDefs.GetDefsFrom(System.String)">
            <summary>
            从程序集中取出WebService定义
            </summary>
            <param name="assemblyFile">程序集文件名</param>
        </member>
        <member name="M:PengeSoft.WebService.WebServiceDefs.GetDefsFrom(System.Reflection.Assembly)">
            <summary>
            从程序集中取出WebService定义
            </summary>
            <param name="asm">程序集对象</param>
        </member>
        <member name="T:PengeSoft.Logging.Impl.BaseLoggerFA">
            <summary>
            日志类工厂适配器实现基类，不能直接使用，需继承，并实现CreateNewLogger()。
            </summary>
        </member>
        <member name="T:PengeSoft.Logging.ILoggerFactoryAdapter">
            <summary>
            日志对象类工厂接口，所有日志对像均由其相应的类工厂产生实例。
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.ILoggerFactoryAdapter.GetLogger(System.Type)">
            <summary>
            根据日志服务对象类型取得实例。日志名称由对象类型决定。
            </summary>
            <param name="type">日志服务对象类型</param>
            <returns>日志服务对象实例</returns>
        </member>
        <member name="M:PengeSoft.Logging.ILoggerFactoryAdapter.GetLogger(System.String)">
            <summary>
            取得日志服务对实例，并赋与给定名称。
            </summary>
            <param name="name">日志名称</param>
            <returns>日志服务对象实例</returns>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLoggerFA.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLoggerFA.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            构造函数, 并传入参数。
            </summary>
            <param name="properties">属性表，属性有level,showDateTime,showLogName,dateTimeFormat</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLoggerFA.GetLogger(System.Type)">
            <summary>
            按类型取得日志处理接口。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLoggerFA.GetLogger(System.String)">
            <summary>
            按名称取得日志处理接口。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLoggerFA.CreateNewLogger(System.String,PengeSoft.Logging.LogLevel,System.Boolean,System.Boolean,System.String)">
            <summary>
            创建新的日志接口。
            </summary>
            <param name="logName">日志名称</param>
            <param name="logLevel">日志级别</param>
            <param name="showDateTime">是否在日志中显示时间</param>
            <param name="showLogName">是否在日志中显示日志名称</param>
            <param name="dateTimeFormat">日期格式</param>
            <returns>日志实例接口</returns>
        </member>
        <member name="T:PengeSoft.Logging.Impl.BaseLogger">
            <summary>
            日志接口实现基类,派生类需实现OutputLog(string message)
            </summary>
        </member>
        <member name="T:PengeSoft.Logging.ILog">
            <summary>
            日志接口定义
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.ILog.Debug(System.Object)">
            <summary>
            输出Debug类信息 <see cref="F:PengeSoft.Logging.LogLevel.Debug"/>
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:PengeSoft.Logging.ILog.Debug(System.Object,System.Exception)">
            <summary>
            输出Debug类信息 <see cref="F:PengeSoft.Logging.LogLevel.Debug"/>， 并接收异常做为参数。
            </summary>
            <param name="message">信息</param>
            <param name="exception">发生的异常</param>
        </member>
        <member name="M:PengeSoft.Logging.ILog.Error(System.Object)">
            <summary>
            输出Error类信息 <see cref="F:PengeSoft.Logging.LogLevel.Error"/>
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:PengeSoft.Logging.ILog.Error(System.Object,System.Exception)">
            <summary>
            输出Error类信息 <see cref="F:PengeSoft.Logging.LogLevel.Error"/>， 并接收异常做为参数。
            </summary>
            <param name="message">信息</param>
            <param name="exception">发生的异常</param>
        </member>
        <member name="M:PengeSoft.Logging.ILog.Fatal(System.Object)">
            <summary>
            输出Fatal类信息 <see cref="F:PengeSoft.Logging.LogLevel.Fatal"/>
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:PengeSoft.Logging.ILog.Fatal(System.Object,System.Exception)">
            <summary>
            输出Fatal类信息 <see cref="F:PengeSoft.Logging.LogLevel.Fatal"/>， 并接收异常做为参数。
            </summary>
            <param name="message">信息</param>
            <param name="exception">发生的异常</param>
        </member>
        <member name="M:PengeSoft.Logging.ILog.Info(System.Object)">
            <summary>
            输出Info类信息 <see cref="F:PengeSoft.Logging.LogLevel.Info"/>
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:PengeSoft.Logging.ILog.Info(System.Object,System.Exception)">
            <summary>
            输出Info类信息 <see cref="F:PengeSoft.Logging.LogLevel.Info"/>， 并接收异常做为参数。
            </summary>
            <param name="message">信息</param>
            <param name="exception">发生的异常</param>
        </member>
        <member name="M:PengeSoft.Logging.ILog.Warn(System.Object)">
            <summary>
            输出Warn类信息 <see cref="F:PengeSoft.Logging.LogLevel.Warn"/>
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:PengeSoft.Logging.ILog.Warn(System.Object,System.Exception)">
            <summary>
            输出Warn类信息 <see cref="F:PengeSoft.Logging.LogLevel.Warn"/>， 并接收异常做为参数。
            </summary>
            <param name="message">信息</param>
            <param name="exception">发生的异常</param>
        </member>
        <member name="M:PengeSoft.Logging.ILog.LevelWrite(PengeSoft.Logging.LogLevel,System.Object)">
            <summary>
            输出指定级别的日志信息
            </summary>
            <param name="message">信息</param>
            <param name="level">日志级别<see cref="T:PengeSoft.Logging.LogLevel"/></param>
        </member>
        <member name="M:PengeSoft.Logging.ILog.LevelWrite(PengeSoft.Logging.LogLevel,System.Object,System.Exception)">
            <summary>
            输出指定级别的日志信息， 并接收异常做为参数。
            </summary>
            <param name="message">信息</param>
            <param name="level">日志级别<see cref="T:PengeSoft.Logging.LogLevel"/></param>
            <param name="exception">发生的异常</param>
        </member>
        <member name="M:PengeSoft.Logging.ILog.IsLevelEnabled(PengeSoft.Logging.LogLevel)">
            <summary>
            检查当前日志对象是否允许输出指定级别的信息。
            </summary>
            <param name="level">日志级别<see cref="T:PengeSoft.Logging.LogLevel"/></param>
            <returns>允许true, 不允许false</returns>
        </member>
        <member name="P:PengeSoft.Logging.ILog.IsDebugEnabled">
            <summary>
            检查当前日志对象是否允许输出Debug信息。<see cref="F:PengeSoft.Logging.LogLevel.Debug"/> 
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.ILog.IsErrorEnabled">
            <summary>
            检查当前日志对象是否允许输出Error信息。<see cref="F:PengeSoft.Logging.LogLevel.Error"/> 
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.ILog.IsFatalEnabled">
            <summary>
            检查当前日志对象是否允许输出Fatal信息。 <see cref="F:PengeSoft.Logging.LogLevel.Fatal"/> 
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.ILog.IsInfoEnabled">
            <summary>
            检查当前日志对象是否允许输出Info信息。 <see cref="F:PengeSoft.Logging.LogLevel.Info"/> 
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.ILog.IsWarnEnabled">
            <summary>
            检查当前日志对象是否允许输出Warn信息。 <see cref="F:PengeSoft.Logging.LogLevel.Warn"/> 
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.#ctor(System.String,PengeSoft.Logging.LogLevel,System.Boolean,System.Boolean,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="logName">日志名称</param>
            <param name="logLevel">日志级别</param>
            <param name="showDateTime">在日志中包括当前时间</param>
            <param name="showLogName">在日志中包括当前日志名称</param>
            <param name="dateTimeFormat">日志中的日期时间格式</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.Write(PengeSoft.Logging.LogLevel,System.Object,System.Exception)">
            <summary>
            执行实际的日志写入
            </summary>
            <param name="level">日志级别</param>
            <param name="message">日志信息</param>
            <param name="e">需日志的异常实例</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.OutputLog(System.String)">
            <summary>
            执行实际的日志写入，此为虚函数，需由派生类实现。
            已处理logLevel,showDateTime,showLogName,dateTimeFormat选项,派生类不需处理。
            </summary>
            <param name="message">日志信息</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.IsLevelEnabled(PengeSoft.Logging.LogLevel)">
            <summary>
            检查当前日志对象是否允许输出指定级别的信息。
            </summary>
            <param name="level">日志级别<see cref="T:PengeSoft.Logging.LogLevel"/></param>
            <returns>允许true, 不允许false</returns>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.LevelWrite(PengeSoft.Logging.LogLevel,System.Object)">
            <summary>
            输出指定级别的日志信息
            </summary>
            <param name="message">信息</param>
            <param name="level">日志级别<see cref="T:PengeSoft.Logging.LogLevel"/></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.LevelWrite(PengeSoft.Logging.LogLevel,System.Object,System.Exception)">
            <summary>
            输出指定级别的日志信息， 并接收异常做为参数。
            </summary>
            <param name="message">信息</param>
            <param name="level">日志级别<see cref="T:PengeSoft.Logging.LogLevel"/></param>
            <param name="e">发生的异常</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.Debug(System.Object)">
            <summary>
            输出Debug类信息 <see cref="F:PengeSoft.Logging.LogLevel.Debug"/>
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.Debug(System.Object,System.Exception)">
            <summary>
            输出Debug类信息 <see cref="F:PengeSoft.Logging.LogLevel.Debug"/>， 并接收异常做为参数。
            </summary>
            <param name="message">信息</param>
            <param name="e">发生的异常</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.Error(System.Object)">
            <summary>
            输出Error类信息 <see cref="F:PengeSoft.Logging.LogLevel.Error"/>
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.Error(System.Object,System.Exception)">
            <summary>
            输出Error类信息 <see cref="F:PengeSoft.Logging.LogLevel.Error"/>， 并接收异常做为参数。
            </summary>
            <param name="message">信息</param>
            <param name="e">发生的异常</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.Fatal(System.Object)">
            <summary>
            输出Fatal类信息 <see cref="F:PengeSoft.Logging.LogLevel.Fatal"/>
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.Fatal(System.Object,System.Exception)">
            <summary>
            输出Fatal类信息 <see cref="F:PengeSoft.Logging.LogLevel.Fatal"/>， 并接收异常做为参数。
            </summary>
            <param name="message">信息</param>
            <param name="e">发生的异常</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.Info(System.Object)">
            <summary>
            输出Info类信息 <see cref="F:PengeSoft.Logging.LogLevel.Info"/>
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.Info(System.Object,System.Exception)">
            <summary>
            输出Info类信息 <see cref="F:PengeSoft.Logging.LogLevel.Info"/>， 并接收异常做为参数。
            </summary>
            <param name="message">信息</param>
            <param name="e">发生的异常</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.Warn(System.Object)">
            <summary>
            输出Warn类信息 <see cref="F:PengeSoft.Logging.LogLevel.Warn"/>
            </summary>
            <param name="message">信息</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.BaseLogger.Warn(System.Object,System.Exception)">
            <summary>
            输出Warn类信息 <see cref="F:PengeSoft.Logging.LogLevel.Warn"/>， 并接收异常做为参数。
            </summary>
            <param name="message">信息</param>
            <param name="e">发生的异常</param>
        </member>
        <member name="P:PengeSoft.Logging.Impl.BaseLogger.ShowDateTime">
            <summary>记录日期时间</summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.BaseLogger.ShowLogName">
            <summary>记录日志名称</summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.BaseLogger.LogName">
            <summary>日志名称</summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.BaseLogger.CurrentLogLevel">
            <summary>当前日志级别</summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.BaseLogger.DateTimeFormat">
            <summary>日期时间格式</summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.BaseLogger.HasDateTimeFormat">
            <summary>指定了日期时间格式</summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.BaseLogger.IsDebugEnabled">
            <summary>
            检查当前日志对象是否允许输出Debug信息。<see cref="F:PengeSoft.Logging.LogLevel.Debug"/> 
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.BaseLogger.IsErrorEnabled">
            <summary>
            检查当前日志对象是否允许输出Error信息。<see cref="F:PengeSoft.Logging.LogLevel.Error"/> 
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.BaseLogger.IsFatalEnabled">
            <summary>
            检查当前日志对象是否允许输出Fatal信息。 <see cref="F:PengeSoft.Logging.LogLevel.Fatal"/> 
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.BaseLogger.IsInfoEnabled">
            <summary>
            检查当前日志对象是否允许输出Info信息。 <see cref="F:PengeSoft.Logging.LogLevel.Info"/> 
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.BaseLogger.IsWarnEnabled">
            <summary>
            检查当前日志对象是否允许输出Warn信息。 <see cref="F:PengeSoft.Logging.LogLevel.Warn"/> 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.AddAttribRec">
            <summary>
            AddAttribRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.AddAttribRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.AddAttribRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.AddAttribRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.AddAttribRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.AddAttribRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.AddAttribRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.AddAttribRec.Status">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AddAttribRec.RType">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AddAttribRec.Memo">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AddAttribRec.Bz">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.ServerDefRec">
            <summary>
            ServerDefRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ServerDefRec.Get_OptionSet(System.Int32)">
            <summary>
            设位集: 选项 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ServerDefRec.Set_OptionSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 选项 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ServerDefRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ServerDefRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ServerDefRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ServerDefRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.Owner">
            <summary>
            所有者 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.Name">
            <summary>
            服务名称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.TypeName">
            <summary>
            服务类型 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.SubType">
            <summary>
            服务子类型 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.Mode">
            <summary>
            工作模式 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.Option">
            <summary>
            选项 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.Detail">
            <summary>
            描述 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.URL">
            <summary>
            位置 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.Act">
            <summary>
            权限码 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.ActID">
            <summary>
            权限名称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.SMSCmd">
            <summary>
            SMS命令标记 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.EMailCmd">
            <summary>
            EMail命令标记 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.Attribs">
            <summary>
            属性 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ServerDefRec.RegTime">
            <summary>
            注册时间 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.AppActionRec">
            <summary>
            AppActionRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppActionRec.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppActionRec.Get_OptionSet(System.Int32)">
            <summary>
            设位集: 选项 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppActionRec.Set_OptionSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 选项 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppActionRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppActionRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppActionRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppActionRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AppActionRec.ActName">
            <summary>
            名称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AppActionRec.FullName">
            <summary>
            全名 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AppActionRec.Option">
            <summary>
            选项 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AppActionRec.Attribs">
            <summary>
            属性 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AppActionRec.Description">
            <summary>
            描述 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AppActionRec.Params">
            <summary>
            参数表 
            </summary>
        </member>
        <!-- 对于成员“T:PengeSoft.WorkZoneData.AppActionList”忽略有格式错误的 XML 注释 -->
        <member name="T:PengeSoft.Data.NorDataList">
            <summary>
            DataList 的 ArrayList 实现。
            </summary>
        </member>
        <member name="T:PengeSoft.Data.DataList">
            <summary>
            从DataPacket派生，实现数据集合管理。此类为虚类，不能实例化。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DataList.Clear">
            <summary>
            清除DataList中所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DataList.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            将一个 PengeSoft.Data.DataList 中元素附本复制到现有集合, 元素必须是 DataPacket 。
            </summary>
            <param name="sou">被复制的 PengeSoft.Data.DataList</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点名称序列化整个 PengeSoft.Data.DataList。
            </summary>
            <param name="node">用于序列化 PengeSoft.Data.DataList 的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.XMLDecode(System.Xml.XmlNode)">
            <summary>
            指定节点中反序列化整个 PengeSoft.Data.ObjList。需指定 ItemType, 如 ItemType 为 null, 
            则试图从子节点的 ItemType 属性中建立 ItemType。 
            </summary>
            <param name="node">反序列化 PengeSoft.Data.ObjList 的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.Add(PengeSoft.Data.DataPacket)">
            <summary>
            将元素添加到 PengeSoft.Data.DataList 中。如果 AutoGenID 属性为 true, 则产生RID,并自动增加。
            </summary>
            <param name="item">要添加到集合的 DataPacket 元素</param>
            <returns>新元素的插入位置</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.AddNew">
            <summary>
            创建一个 ItemType 指定的新元素并添加到 PengeSoft.Data.ObjList 中， 要求 ItemType 必须不为 null。
            如果 AutoGenID 属性为 true, 则产生RID,并自动增加。
            </summary>
            <returns>新元素的插入位置</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.Insert(System.Int32,PengeSoft.Data.DataPacket)">
            <summary>
             将一个新元素插入指定索引处的 PengeSoft.Data.DataList。
            如果 AutoGenID 属性为 true, 则产生RID,并自动增加。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="item">要插入 PengeSoft.Data.DataList 中的 DataPacket 元素。</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.AddFrom(System.Collections.ICollection)">
            <summary>
            从一个集合中添加元素引用，并不复制元素。要求元素必须是 DataPacket
            </summary>
            <param name="c">源集合</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.AddCopyFrom(System.Collections.ICollection)">
            <summary>
            从一个集合中添加元素附本(复制元素)。要求元素必须是 DataPacket
            </summary>
            <param name="c">源集合</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.FindItemByID(System.Int32)">
            <summary>
            按RID查找 PengeSoft.Data.DataList 的项。
            </summary>
            <param name="ID">查找的ID</param>
            <returns>找到的 DataPacket 项，没找到返回 null</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.Sort(System.Collections.IComparer)">
            <summary>
            使用指定的比较器对整个 PengeSoft.Data.DataList 中的字符串进行排序。
            </summary>
            <param name="comparer">比较元素时要使用的 System.Collections.IComparer 实现。若为 null，则使用则使用每个元素的 System.IComparable</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            使用指定的比较器对 PengeSoft.Data.DataList 中某个范围内的元素进行排序。
            </summary>
            <param name="index">要排序的范围的从零开始的起始索引。</param>
            <param name="count">要排序的范围的长度。</param>
            <param name="comparer">比较元素时要使用的 System.Collections.IComparer 实现。若为 null，则使用则使用每个元素的 System.IComparable</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.CreateNewItem">
            <summary>
            根据ItemType创建一个新 DataPacket 元素
            </summary>
            <returns>新 DataPacket 元素, 如果 ItemType 为 null 则返回 null。</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.GetItemType">
            <summary>
            取得ItemType的虚函数, 如果未设ItemType且有元素存在，则取第一个元素类型
            </summary>
            <returns>ItemType</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.GetItems(System.Int32)">
            <summary>
             获取指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的 DataPacket 元素。</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.SetItems(System.Int32,PengeSoft.Data.DataPacket)">
            <summary>
             设置指定索引处的元素。
            </summary>
            <param name="Index">要获得或设置的元素从零开始的索引。</param>
            <param name="value">指定的 DataPacket 元素。</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.GetCount">
            <summary>
            获取 PengeSoft.Data.DataList 中实际包含的元素数。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DataList.ClearItems">
            <summary>
            清除 PengeSoft.Data.DataList 中的所有元素。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DataList.AddItem(PengeSoft.Data.DataPacket)">
            <summary>
            将元素添加到 PengeSoft.Data.DataList 中。
            </summary>
            <param name="item">要添加到集合的 DataPacket 元素</param>
            <returns>新元素的插入位置</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.InsertItem(System.Int32,PengeSoft.Data.DataPacket)">
            <summary>
             将一个新元素插入指定索引处的 PengeSoft.Data.DataList。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="item">要插入 PengeSoft.Data.DataList 中的 DataPacket 元素。</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.Delete(System.Int32)">
            <summary>
            移除指定索引处的 PengeSoft.Data.DataList 项。
            </summary>
            <param name="index">从零开始的索引（属于要移除的项）。</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.UpdateItem(PengeSoft.Data.DataPacket)">
            <summary>
             更新 PengeSoft.Data.DataList 中的元素。如元素不存在，则添加新元素(Add方式)。
            </summary>
            <param name="item">要更新的 DataPacket 元素。</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.IndexOf(PengeSoft.Data.DataPacket)">
            <summary>
            确定 PengeSoft.Data.DataList 中特定元素的索引。
            </summary>
            <param name="item">要在 PengeSoft.Data.DataList 中查找的 DataPacket 元素。</param>
            <returns>如果在列表中找到，则为 item 的索引；否则为 -1。</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.Move(System.Int32,System.Int32)">
            <summary>
            移动指定索引处的 PengeSoft.Data.DataList 项到新位置。
            </summary>
            <param name="CurIndex">从零开始的索引（要移动的项）。</param>
            <param name="NewIndex">从零开始的索引（新位置）。</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.Remove(PengeSoft.Data.DataPacket)">
            <summary>
            从 PengeSoft.Data.DataList 中移除特定元素的第一个匹配项。
            </summary>
            <param name="item">要从 PengeSoft.Data.DataList 移除的 DataPacket 元素。</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.GetEnumerator">
            <summary>
            返回一个循环访问集合的枚举数。
            </summary>
            <returns>可用于循环访问集合的 System.Collections.IEnumerator 对象。</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.Add(System.Object)">
            <summary>
            IList成员，将某项添加到 DataList 中。
            </summary>
            <param name="value">要添加到 DataList 的 System.Object。必须从 DataPacket 继承</param>
            <returns>新元素的插入位置。</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.Contains(System.Object)">
            <summary>
            IList成员，确定 DataList 是否包含特定值。
            </summary>
            <param name="value">要在 DataList 中查找的 System.Object。</param>
            <returns>如果在 DataList 中找到 System.Object，则为 true；否则为 false。</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.IndexOf(System.Object)">
            <summary>
            IList成员，确定 DataList 中特定项的索引。
            </summary>
            <param name="value">要在 DataList 中查找的 System.Object。</param>
            <returns>如果在列表中找到，则为 value 的索引；否则为 -1。</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.Insert(System.Int32,System.Object)">
            <summary>
            IList成员，将一个项插入指定索引处的 DataList。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 value。</param>
            <param name="value">要插入 DataList 中的 System.Object。</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.Remove(System.Object)">
            <summary>
            IList成员，从 DataList 中移除特定对象的第一个匹配项。
            </summary>
            <param name="value">要从 DataList 移除的 System.Object。</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.RemoveAt(System.Int32)">
            <summary>
            IList成员，移除指定索引处的 DataList 项。
            </summary>
            <param name="index">从零开始的索引（属于要移除的项）。</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.DoCopyTo(System.Array,System.Int32)">
            <summary>
            用于实现ICollection.CopyTo()的虚函数，需重载。
            </summary>
            <param name="array">作为从 System.Collections.ICollection 复制的元素的目标位置的一维 System.Array。System.Array 必须具有从零开始的索引。</param>
            <param name="index">array 中从零开始的索引，从此处开始复制。</param>
        </member>
        <member name="M:PengeSoft.Data.DataList.GetIsSynchronized">
            <summary>
            用于实现ICollection.IsSynchronized的虚函数，需重载。
            </summary>
            <returns>如果对 System.Collections.ICollection 的访问是同步的（线程安全），则为 true；否则为 false。</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.GetSyncRoot">
            <summary>
            用于实现ICollection.SyncRoot的虚函数，需重载。
            </summary>
            <returns>可用于同步对 System.Collections.ICollection 的访问的对象。</returns>
        </member>
        <member name="M:PengeSoft.Data.DataList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            ICollection 成员,从特定的 System.Array 索引处开始，将 System.Collections.ICollection 的元素复制到一个 System.Array 中。
            </summary>
            <param name="array">作为从 System.Collections.ICollection 复制的元素的目标位置的一维 System.Array。System.Array 必须具有从零开始的索引。</param>
            <param name="index">array 中从零开始的索引，从此处开始复制。</param>
        </member>
        <member name="P:PengeSoft.Data.DataList.AutoGenID">
            <summary>
            设置或获取自动管理对象ID属性
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataList.MaxID">
            <summary>
            设置或获取对象最大ID, 如果给定最大ID小于已有元素ID，则最大ID为已有元素最大ID。
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataList.Item(System.Int32)">
            <summary>
             获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:PengeSoft.Data.DataList.Count">
            <summary>
            获取 PengeSoft.Data.DataList 中实际包含的元素数。
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataList.ItemType">
            <summary>
            设置或获取被管理元素的缺省类型，可以为 null。如果要从Xml中恢复，必须指定该属性。
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataList.IsFixedSize">
            <summary>
            IList成员，获取一个值，该值指示 DataList 是否具有固定大小。
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataList.IsReadOnly">
            <summary>
            IList成员，获取一个值，该值指示 DataList 是否为只读。
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataList.System#Collections#IList#Item(System.Int32)">
            <summary>
            IList成员，获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:PengeSoft.Data.DataList.System#Collections#ICollection#IsSynchronized">
            <summary>
            ICollection 成员,获取一个值，该值指示是否同步对 System.Collections.ICollection 的访问（线程安全）。
            <remarks>如果对 System.Collections.ICollection 的访问是同步的（线程安全），则为 true；否则为 false。</remarks>
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DataList.System#Collections#ICollection#SyncRoot">
            <summary>
            ICollection 成员,获取可用于同步 System.Collections.ICollection 访问的对象。
            <remarks>返回可用于同步对 System.Collections.ICollection 的访问的对象。</remarks>
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.#ctor">
            <summary>
            初始化 PengeSoft.Data.NorDataList 类的新实例，该实例为空并且具有默认初始容量。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.#ctor(System.Int32)">
            <summary>
            初始化 System.Collections.ArrayList 类的新实例，该实例为空并且具有指定的初始容量。
            </summary>
            <param name="capacity">新列表最初可以存储的元素数。</param>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.#ctor(System.Collections.ICollection)">
            <summary>
            初始化 PengeSoft.Data.NorDataList 类的新实例，该实例包含从指定集合复制的元素并且具有与所复制的元素数相同的初始容量。
            </summary>
            <param name="c">System.Collections.ICollection，它的元素被复制到新列表中。该表中元素必须是 DataPacket 的派生类。</param>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.GetItems(System.Int32)">
            <summary>
            DataList虚函数实现
            </summary>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.SetItems(System.Int32,PengeSoft.Data.DataPacket)">
            <summary>
            DataList虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.GetCount">
            <summary>
            DataList虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.ClearItems">
            <summary>
            DataList虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.AddItem(PengeSoft.Data.DataPacket)">
            <summary>
            DataList虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.InsertItem(System.Int32,PengeSoft.Data.DataPacket)">
            <summary>
            DataList虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.Delete(System.Int32)">
            <summary>
            DataList虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.UpdateItem(PengeSoft.Data.DataPacket)">
            <summary>
            DataList虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.IndexOf(PengeSoft.Data.DataPacket)">
            <summary>
            DataList虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.Move(System.Int32,System.Int32)">
            <summary>
            DataList虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.Remove(PengeSoft.Data.DataPacket)">
            <summary>
            DataList虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.DoCopyTo(System.Array,System.Int32)">
            <summary>
            DataList虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.GetIsSynchronized">
            <summary>
            DataList虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.GetSyncRoot">
            <summary>
            DataList虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.Sort(System.Collections.IComparer)">
            <summary>
            使用指定的比较器对整个 PengeSoft.Data.DataList 中的字符串进行排序。
            </summary>
            <param name="comparer">比较元素时要使用的 System.Collections.IComparer 实现。若为 null，则使用则使用每个元素的 System.IComparable</param>
        </member>
        <member name="M:PengeSoft.Data.NorDataList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            使用指定的比较器对 PengeSoft.Data.DataList 中某个范围内的元素进行排序。
            </summary>
            <param name="index">要排序的范围的从零开始的起始索引。</param>
            <param name="count">要排序的范围的长度。</param>
            <param name="comparer">比较元素时要使用的 System.Collections.IComparer 实现。若为 null，则使用则使用每个元素的 System.IComparable</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppActionList.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppActionList.AddNewAction(System.String,System.String,System.String)">
            <summary>
            添加新操作
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.AppAttribBaseRec">
            <summary>
            AppAttribBaseRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppAttribBaseRec.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppAttribBaseRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppAttribBaseRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppAttribBaseRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AppAttribBaseRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AppAttribBaseRec.Verbs">
            <summary>
            动做表 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AppAttribBaseRec.Detail">
            <summary>
            详细描述 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.AttribQueryRec">
            <summary>
            AttribQueryRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AttribQueryRec.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AttribQueryRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AttribQueryRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AttribQueryRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AttribQueryRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AttribQueryRec.Params">
            <summary>
            查询参数表 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AttribQueryRec.RetVals">
            <summary>
            返回列表 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.AttribRptRec">
            <summary>
            AttribRptRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AttribRptRec.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AttribRptRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AttribRptRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AttribRptRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AttribRptRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AttribRptRec.Params">
            <summary>
            报表参数表 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.DataMemberList">
            <summary>
            DataMemberList 的摘要说明。
            </summary>
            <remarks>
            生成模型添加了新方法 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataMemberList.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataMemberList.#ctor(System.Collections.ICollection)">
            <summary>
            初始化新实例，该实例包含从指定集合复制的元素并且具有与所复制的元素数相同的初始容量。
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataMemberList.AddNewMember(System.String,System.String,System.Int32)">
            <summary>
            添加新成员
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataMemberList.AddNewMember(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            添加新成员
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.DataTagRec">
            <summary>
            DataTagRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataTagRec.Get_ModiStatusSet(System.Int32)">
            <summary>
            设位集:  
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataTagRec.Set_ModiStatusSet(System.Int32,System.Boolean)">
            <summary>
            取位集:  
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataTagRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataTagRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataTagRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataTagRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.DataTagRec.LastUpdate">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.DataTagRec.VerCount">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.DataTagRec.ModiStatus">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.DataTagRec.LockUserID">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.FuncParams">
            <summary>
            FuncParams 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.FuncParams.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.FuncParams.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.FuncParams.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.FuncParams.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.FuncParams.Values">
            <summary>
            参数值 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.FuncValue">
            <summary>
            FuncValue 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.FuncValue.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.FuncValue.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.FuncValue.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.FuncValue.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.FuncValue.Value">
            <summary>
            参数值 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.IXmlSerial">
            <summary>
            对象Xml序列化处理接口，用于繁杂类型处理，只能用序列化为元素。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.IXmlSerial.XmlEncode(System.Xml.XmlNode)">
            <summary>
            将对象写入Xml节点
            </summary>
            <param name="node">Xml节点</param>
        </member>
        <member name="M:PengeSoft.Data.IXmlSerial.XmlDecode(System.Xml.XmlNode)">
            <summary>
            从Xml节点中读出对象
            </summary>
            <param name="node">Xml节点</param>
        </member>
        <member name="M:PengeSoft.Data.IXmlSerial.Clear">
            <summary>
            清除数数据，恢复缺省值
            </summary>
        </member>
        <member name="P:PengeSoft.Data.IXmlSerial.XmlText">
            <summary>
            设置或获取对象的Xml序列。
            </summary>
        </member>
        <member name="T:PengeSoft.Data.StringList">
            <summary>
            StringList 类型, 用于与Delphi兼容
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StringList.#ctor">
            <summary>
            创建 StringList 实例
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StringList.#ctor(System.String)">
            <summary>
            根据字符串创建 StringList 实例
            </summary>
            <param name="str">输入字符串, 字符串行间用"\r\n"隔开</param>
        </member>
        <member name="M:PengeSoft.Data.StringList.GetArray">
            <summary>
            复制到数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.StringList.Add(System.String)">
            <summary>
            将字符串添加到 PengeSoft.Data.StringList 中。
            </summary>
            <param name="item">要添加到集合的字符串</param>
            <returns>新元素的插入位置</returns>
        </member>
        <member name="M:PengeSoft.Data.StringList.Insert(System.Int32,System.String)">
            <summary>
             将一个符串插入指定索引处的 PengeSoft.Data.StringList。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="item">要插入 PengeSoft.Data.StringList 中的字符串。</param>
        </member>
        <member name="M:PengeSoft.Data.StringList.IndexOf(System.String)">
            <summary>
            确定 PengeSoft.Data.StringList 中特定字符串的索引。
            </summary>
            <param name="item">要在 PengeSoft.Data.StringList 中查找的字符串。</param>
            <returns>如果在列表中找到，则为 item 的索引；否则为 -1。</returns>
        </member>
        <member name="M:PengeSoft.Data.StringList.Remove(System.String)">
            <summary>
            从 PengeSoft.Data.StringList 中移除特定字符串的第一个匹配项。
            </summary>
            <param name="item">要从 PengeSoft.Data.StringList 移除的字符串。</param>
        </member>
        <member name="M:PengeSoft.Data.StringList.Delete(System.Int32)">
            <summary>
            移除指定索引处的 PengeSoft.Data.StringList 项。
            </summary>
            <param name="index">从零开始的索引（属于要移除的项）。</param>
        </member>
        <member name="M:PengeSoft.Data.StringList.Assign(PengeSoft.Data.StringList)">
            <summary>
            从一个 PengeSoft.Data.StringList 中复制字符串。
            </summary>
            <param name="list">被复制的 PengeSoft.Data.StringList</param>
        </member>
        <member name="M:PengeSoft.Data.StringList.AppendFrom(PengeSoft.Data.StringList)">
            <summary>
            将一个 PengeSoft.Data.StringList 中字符串添加到现有集合。
            </summary>
            <param name="list">被复制的 PengeSoft.Data.StringList</param>
        </member>
        <member name="M:PengeSoft.Data.StringList.Sort">
            <summary>
            对整个 PengeSoft.Data.StringList 中的字符串进行排序。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StringList.Sort(System.Collections.IComparer)">
            <summary>
            使用指定的比较器对整个 PengeSoft.Data.StringList 中的字符串进行排序。
            </summary>
            <param name="comparer">比较元素时要使用的 System.Collections.IComparer 实现。若为 null，则使用缺省的 IComparer</param>
        </member>
        <member name="M:PengeSoft.Data.StringList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            使用指定的比较器对 PengeSoft.Data.StringList 中某个范围内的元素进行排序。
            </summary>
            <param name="index">要排序的范围的从零开始的起始索引。</param>
            <param name="count">要排序的范围的长度。</param>
            <param name="comparer">比较元素时要使用的 System.Collections.IComparer 实现。若为 null，则使用缺省的 IComparer</param>
        </member>
        <member name="P:PengeSoft.Data.StringList.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的字符串。
            </summary>
            <param name="index">要获得或设置的字符串从零开始的索引。</param>
            <returns>指定索引处的字符串。</returns>
        </member>
        <member name="P:PengeSoft.Data.StringList.Text">
            <summary>
            获取或设置 PengeSoft.Data.StringList 的文本值，字符串间用"\r\n"隔开。设置的值字符串间可只用"\n"隔开。
            </summary>
        </member>
        <member name="T:PengeSoft.Data.ObjList">
            <summary>
            ObjList 类型, 用于与Delphi兼容, 元素对象必须是 DataPacket 的派生类。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.ObjList.#ctor">
            <summary>
            初始化 PengeSoft.Data.ObjList 类的新实例，该实例为空并且具有默认初始容量。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.ObjList.#ctor(System.Int32)">
            <summary>
            初始化 System.Collections.ArrayList 类的新实例，该实例为空并且具有指定的初始容量。
            </summary>
            <param name="capacity">新列表最初可以存储的元素数。</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.#ctor(System.Collections.ICollection)">
            <summary>
            初始化 PengeSoft.Data.ObjList 类的新实例，该实例包含从指定集合复制的元素并且具有与所复制的元素数相同的初始容量。
            </summary>
            <param name="c">System.Collections.ICollection，它的元素被复制到新列表中。该表中元素必须是 DataPacket 的派生类。</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.CreateNewItem">
            <summary>
            根据ItemType创建一个新 DataPacket 元素
            </summary>
            <returns>新 DataPacket 元素, 如果 ItemType 为 null 则产抛出异常。</returns>
        </member>
        <member name="M:PengeSoft.Data.ObjList.GetItemType">
            <summary>
            取得ItemType的虚函数, 如果未设ItemType且有元素存在，则取第一个元素类型
            </summary>
            <returns>ItemType</returns>
        </member>
        <member name="M:PengeSoft.Data.ObjList.Clear">
            <summary>
            从 ObjList 实例移除所有对象。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.ObjList.AddFrom(System.Collections.ICollection)">
            <summary>
            将一个 System.Collections.ICollection 中元素添加到集合中，并不复制元素附本。要求元素必须是 DataPacket
            </summary>
            <param name="c">源集合System.Collections.ICollection，它的元素被复制到新列表中。该表中元素必须是 DataPacket 的派生类。</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.AddCopyFrom(System.Collections.ICollection)">
            <summary>
            将一个 System.Collections.ICollection 中元素附本添加到集合中。要求元素必须是 DataPacket
            </summary>
            <param name="c">源集合System.Collections.ICollection，它的元素被复制到新列表中。该表中元素必须是 DataPacket 的派生类。</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.Add(PengeSoft.Data.DataPacket)">
            <summary>
            将元素添加到 PengeSoft.Data.ObjList 中。
            </summary>
            <param name="item">要添加到集合的 DataPacket 元素</param>
            <returns>新元素的插入位置</returns>
        </member>
        <member name="M:PengeSoft.Data.ObjList.AddNew">
            <summary>
            创建一个 ItemType 指定的新元素并添加到 PengeSoft.Data.ObjList 中， 要求 ItemType 必须不为 null。
            </summary>
            <returns>添加的新元素</returns>
        </member>
        <member name="M:PengeSoft.Data.ObjList.Insert(System.Int32,PengeSoft.Data.DataPacket)">
            <summary>
             将一个新元素插入指定索引处的 PengeSoft.Data.ObjList。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="item">要插入 PengeSoft.Data.ObjList 中的 DataPacket 元素。</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.IndexOf(PengeSoft.Data.DataPacket)">
            <summary>
            确定 PengeSoft.Data.ObjList 中特定元素的索引。
            </summary>
            <param name="item">要在 PengeSoft.Data.StringList 中查找的 DataPacket 元素。</param>
            <returns>如果在列表中找到，则为 item 的索引；否则为 -1。</returns>
        </member>
        <member name="M:PengeSoft.Data.ObjList.Remove(PengeSoft.Data.DataPacket)">
            <summary>
            从 PengeSoft.Data.ObjList 中移除特定元素的第一个匹配项。
            </summary>
            <param name="item">要从 PengeSoft.Data.ObjList 移除的 DataPacket 元素。</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.Delete(System.Int32)">
            <summary>
            移除指定索引处的 PengeSoft.Data.ObjList 项。
            </summary>
            <param name="index">从零开始的索引（属于要移除的项）。</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.AssignFrom(PengeSoft.Data.ObjList)">
            <summary>
            将一个 PengeSoft.Data.ObjList 中元素附本复制到现有集合, 元素必须是 DataPacket 。
            </summary>
            <param name="list">被复制的 PengeSoft.Data.ObjList</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.XMLEncode(System.Xml.XmlNode)">
            <summary>
            在指定Xml节点序列化 <see cref="T:PengeSoft.Data.ObjList"/> 的属性和字段。
            </summary>
            <param name="node">用于序列化 PengeSoft.Data.ObjList 属性和字段的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.XMLDecode(System.Xml.XmlNode)">
            <summary>
            从Xml节点中反序列化 <see cref="T:PengeSoft.Data.ObjList"/> 的属性和字段。
            </summary>
            <param name="node">反序列化 PengeSoft.Data.ObjList 属性和字段的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.XmlNodeEncode(System.Xml.XmlNode,System.String)">
            <summary>
            在指定节序列化整个 <see cref="T:PengeSoft.Data.ObjList"/> 的子元素。ObjList 的元素必须有相同类型，
            如果元素Xml节点名称为null，则用元素的类型名称做为元素Xml节点名称。
            </summary>
            <param name="node">用于序列化 PengeSoft.Data.ObjList 的 XmlNode 节点。</param>
            <param name="nodeName">元素Xml节点名称</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.XmlEncode(System.Xml.XmlNode,System.String)">
            <summary>
            用指定子节点名称序列化整个 <see cref="T:PengeSoft.Data.ObjList"/> 的子元素, 与Delphi兼容。
            </summary>
            <remarks>
            Xml元素为指定节点的全部子节点，与Delphi兼容，可以将一个类的数据读到别一个类，如它的派生类。
            但在该节点不能有字段数据，可以有属性（ItemType属性除外）。 
            </remarks>
            <param name="node">用于序列化 PengeSoft.Data.ObjList 的 XmlNode 父节点。</param>
            <param name="mc">指定子节点名称</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.XmlNodeDecode(System.Xml.XmlNode,System.String)">
            <summary>
            从Xml节点中反序列化整个 <see cref="T:PengeSoft.Data.ObjList"/> 。必指定 ItemType, 如 ItemType 为 null 会抛出异常。
            如果元素Xml节点名称为null，则Xml元素名称用Item的类名称(ItemType.Name)，此时因此不能将一个类的数据读到别一个类，如它的派生类。
            </summary>
            <param name="node">反序列化 PengeSoft.Data.ObjList 的 XmlNode 节点。</param>
            <param name="nodeName">元素Xml节点名称</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.XmlDecode(System.Xml.XmlNode,System.String)">
            <summary>
            指定子节点中反序列化整个 <see cref="T:PengeSoft.Data.ObjList"/>, 与Delphi兼容。
            需指定 ItemType, 如 ItemType 为 null, 则试图从子节点的 ItemType 属性中建立 ItemType。
            </summary>
            <remarks>
            Xml元素为指定节点的全部子节点，与Delphi兼容，可以将一个类的数据读到别一个类，如它的派生类。
            但在该节点不能有字段数据，可以有属性（ItemType属性除外）。 
            </remarks>
            <param name="node">反序列化 PengeSoft.Data.ObjList 的 XmlNode 父节点。</param>
            <param name="mc">节点名称</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.Sort(System.Collections.IComparer)">
            <summary>
            使用指定的比较器对整个 PengeSoft.Data.ObjList 中的字符串进行排序。
            </summary>
            <param name="comparer">比较元素时要使用的 System.Collections.IComparer 实现。若为 null，则使用则使用每个元素的 System.IComparable</param>
        </member>
        <member name="M:PengeSoft.Data.ObjList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            使用指定的比较器对 PengeSoft.Data.ObjList 中某个范围内的元素进行排序。
            </summary>
            <param name="index">要排序的范围的从零开始的起始索引。</param>
            <param name="count">要排序的范围的长度。</param>
            <param name="comparer">比较元素时要使用的 System.Collections.IComparer 实现。若为 null，则使用则使用每个元素的 System.IComparable</param>
        </member>
        <member name="P:PengeSoft.Data.ObjList.ItemType">
            <summary>
            设置或获取被管理元素的缺省类型，可以为 null。如果要从Xml中恢复，必须指定该属性。
            </summary>
        </member>
        <member name="P:PengeSoft.Data.ObjList.XMLText">
            <summary>
            设置或获取对象的Xml序列
            </summary>
        </member>
        <member name="P:PengeSoft.Data.ObjList.Item(System.Int32)">
            <summary>
             获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="T:BlowfishNET.BlowfishECB">
            <summary>Blowfish ECB implementation.</summary>
            <remarks>Use this class to encrypt or decrypt byte arrays or a single
            block with Blowfish in the ECB (Electronic Code Book) mode. The key
            length can be flexible from zero up to 56 bytes.</remarks>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.MAX_KEY_LENGTH">
            <summary>The maximum and recommended key size in bytes.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.BLOCK_SIZE">
            <summary>The block size in bytes.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.pbox">
            <summary>Runtime p-box.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.sbox1">
            <summary>Runtime s-box #1.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.sbox2">
            <summary>Runtime s-box #2.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.sbox3">
            <summary>Runtime s-box #3.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.sbox4">
            <summary>Runtime s-box #4.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.block">
            <summary>Single block cache.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.isWeakKey">
            <summary>1 if a weak key was detected, 0 if not and -1 if it hasn't
            been determined yet.</summary>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.Initialize(System.Byte[],System.Int32,System.Int32)">
            <summary>Resets the instance with new or initial key material. Allows the switch of
            keys at runtime without any new internal object allocation.</summary>
            <param name="key">The buffer with the key material.</param>
            <param name="ofs">Position at which the key material starts in the buffer.</param>
            <param name="len">Size of the key material, up to MAX_KEY_LENGTH bytes.</param>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.#ctor">
            <summary>Zero constructor, properly initializes an instance. Initialize afterwards
            to set up a valid key!</summary>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <see cref="M:BlowfishNET.BlowfishECB.Initialize(System.Byte[],System.Int32,System.Int32)"/>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.#ctor(System.Byte[],System.Boolean)">
            <see cref="M:BlowfishNET.BlowfishECB.Initialize(System.Byte[],System.Int32,System.Int32)"/>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.Invalidate">
            <summary> Deletes all internal data structures and invalidates this instance.</summary>
            <remarks>Call this method as soon as the work with a particular instance is done,
            so no sensitive translated key material remains. The instance is invalid after this
            call and usage can lead to unexpected results!</remarks> 
        </member>
        <member name="M:BlowfishNET.BlowfishECB.RunSelfTest">
            <summary>To execute a selftest.</summary>
            <remarks>Call this method to make sure that the implemenation is able to produce
            valid output according to the specification. This should usually be done at process
            startup time, before the usage of this class and its inherited variants.</remarks>
            <returns>True if the selftest passed or false is it failed. In such a case you must
            not use the cipher to avoid data corruption!</returns>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.EncryptBlock(System.UInt32,System.UInt32,System.UInt32@,System.UInt32@)">
            <summary>Encrypts a single block.</summary>
            <param name="hi">The high 32bit word of the block.</param>
            <param name="lo">The low 32bit word of the block.</param>
            <param name="outHi">Where to put the encrypted high word.</param>
            <param name="outLo">Where to put the encrypted low word.</param>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.DecryptBlock(System.UInt32,System.UInt32,System.UInt32@,System.UInt32@)">
            <summary>Decrypts a single block.</summary>
            <param name="hi">The high 32bit word of the block.</param>
            <param name="lo">The low 32bit word of the block.</param>
            <param name="outHi">Where to put the decrypted high word.</param>
            <param name="outLo">Where to put the decrypted low word.</param>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.Encrypt(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>Encrypts byte buffers.</summary>
            <remarks>Use this method to encrypt bytes from one array to another one. You can also 
            use the same array for input and output. Note that the number of bytes must be adjusted
            to the block size of the algorithm. Overlapping bytes will not be encrypted. No check for
            buffer overflows are made.</remarks>
            <param name="dataIn">The input buffer.</param>
            <param name="posIn">Where to start reading in the input buffer.</param>
            <param name="dataOut">The output buffer.</param>
            <param name="posOut">Where to start writing to the output buffer.</param>
            <param name="count">The number ob bytes to encrypt.</param>
            <returns>The number of bytes processed.</returns>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.Decrypt(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>Decrypts single bytes.</summary>
            <remarks>Use this method to decrypt bytes from one array to another one. You can also use
            the same array for input and output. Note that the number of bytes must be adjusted to the
            block size of the algorithm. Overlapping bytes will not be decrypted. No check for buffer
            overflows are made.</remarks>
            <param name="dataIn">The input buffer.</param>
            <param name="posIn">Where to start reading in the input buffer.</param>
            <param name="dataOut">The output buffer.</param>
            <param name="posOut">Where to start writing to the output buffer.</param>
            <param name="count">Number ob bytes to decrypt.</param>
            <returns>The number of bytes processed.</returns>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.Clone">
            <remarks>Cloning can be very useful if you need multiple instances all using
            the same key, since the expensive cipher setup will be bypassed.</remarks>
            <see cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.PBOX_INIT">
            <summary>The P-box initialization data.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.SBOX_INIT_1">
            <summary>The first S-box initialization data.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.SBOX_INIT_2">
            <summary>The second S-box initialization data.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.SBOX_INIT_3">
            <summary>The third S-box initialization data.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.SBOX_INIT_4">
            <summary>The fourth S-box initialization data.</summary>
        </member>
        <member name="P:BlowfishNET.BlowfishECB.IsWeakKey">
            <summary>To check if the key used is weak.</summary>
            <remarks>If a key is weak it means that eventually an attack is easier to apply than
            just a simple brute force on keys. Due to the randomness in the key setup process
            such a case however is unlikely to happen, yet checking after each setup might still
            be the preferred way. In the case of a weak key detected a simple recreation with a
            different key (or just a different salt value) is the recommended solution. For
            performance reasons we don't do the weak key check during the initialization, but on
            demand only, and then only once to determine the flag.</remarks>
        </member>
        <member name="T:ExpertLib.IO.StgElementType">
            <summary>
            节点类型
            </summary>
        </member>
        <member name="F:ExpertLib.IO.StgElementType.Storage">
            <summary>
            Indicates that the storage element is a storage object.
            </summary>
        </member>
        <member name="F:ExpertLib.IO.StgElementType.Stream">
            <summary>
            Indicates that the storage element is a stream object.
            </summary>
        </member>
        <member name="F:ExpertLib.IO.StgElementType.LockBytes">
            <summary>
            Indicates that the storage element is a byte-array object.
            </summary>
        </member>
        <member name="F:ExpertLib.IO.StgElementType.Property">
            <summary>
            Indicates that the storage element is a property storage object.
            </summary>
        </member>
        <member name="T:ExpertLib.IO.StgElementInfo">
            <summary>
            本类是用一个类来包装 System.Runtime.InteropServices.ComTypes中的STATSTG结构，便于使用
            </summary>
        </member>
        <member name="P:ExpertLib.IO.StgElementInfo.StgType">
            <summary>
            节点类型
            </summary>
        </member>
        <member name="P:ExpertLib.IO.StgElementInfo.Name">
            <summary>
            节点对象名称
            </summary>
        </member>
        <member name="P:ExpertLib.IO.StgElementInfo.CLSID">
            <summary>
            返回存储对象的类标识符
            </summary>
        </member>
        <member name="P:ExpertLib.IO.StgElementInfo.Size">
            <summary>
            指定流的大小
            </summary>
        </member>
        <member name="P:ExpertLib.IO.StgElementInfo.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:ExpertLib.IO.StgElementInfo.LastAccessTime">
            <summary>
            最后访问时间
            </summary>
        </member>
        <member name="P:ExpertLib.IO.StgElementInfo.LastModifyTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="T:PengeSoft.Net.NetClientBase">
            <summary>
            网络客户端基类,须重载CreateCmdMsg() 或设 CmdMsgType 属性
            </summary>
        </member>
        <member name="M:PengeSoft.Net.NetClientBase.Get_StatusSet(System.Int32)">
            <summary>
            设位集:  
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.Net.NetClientBase.Set_StatusSet(System.Int32,System.Boolean)">
            <summary>
            取位集:  
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.Net.NetClientBase.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PengeSoft.Net.NetClientBase.#ctor(PengeSoft.Net.ICommunication)">
            <summary>
            构造函数, 指定通讯接口
            </summary>
            <param name="comm"></param>
        </member>
        <member name="M:PengeSoft.Net.NetClientBase.#ctor(PengeSoft.Net.ICommunication,System.Type)">
            <summary>
            构造函数, 指定通讯接口和数据包
            </summary>
            <param name="comm"></param>
            <param name="msgType"></param>
        </member>
        <member name="M:PengeSoft.Net.NetClientBase.SendCommand(PengeSoft.Net.ICmdMessage)">
            <summary>
            发送命令消息，并接收返回消息
            </summary>
            <param name="CmdMsg"></param>
            <returns></returns>
        </member>
        <member name="T:PengeSoft.Net.NetClientBaseTCP">
            <summary>
            Tcp网络客户端基类
            </summary>
        </member>
        <member name="M:PengeSoft.Net.NetClientBaseTCP.#ctor(System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="port"></param>
        </member>
        <member name="T:PengeSoft.Net.NetClientBaseUDP">
            <summary>
            Udp网络客户端基类
            </summary>
        </member>
        <member name="M:PengeSoft.Net.NetClientBaseUDP.#ctor(System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="port"></param>
        </member>
        <member name="T:PengeSoft.WorkZoneData.UserActionList">
            <summary>
            UserActionList 用户操作记录表的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActionList.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActionList.#ctor(System.Collections.ICollection)">
            <summary>
            初始化新实例，该实例包含从指定集合复制的元素并且具有与所复制的元素数相同的初始容量。
            </summary>
            <param name="c"></param>
        </member>
        <member name="T:PengeSoft.Data.DataCompressType">
            <summary>
            数据压缩方式 
            </summary>
        </member>
        <member name="F:PengeSoft.Data.DataCompressType.CPT_NONE">
            <summary>不压缩</summary>
        </member>
        <member name="F:PengeSoft.Data.DataCompressType.CPT_ZIPFAST">
            <summary>快速Zip，与Delphi对应</summary>
        </member>
        <member name="T:PengeSoft.Data.DataEnCodeType">
            <summary>
            数据加密方式
            </summary>
        </member>
        <member name="T:PengeSoft.Data.DataEncodingType">
            <summary>
            字符串数据编码方式
            </summary>
        </member>
        <member name="T:PengeSoft.Data.XmlAttribAttribute">
            <summary>
            IXmlSerializer 属性定义。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.XmlAttribAttribute.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:PengeSoft.Data.NoXmlSerialAttribute">
            <summary>
            IXmlSerializer 属性定义。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.NoXmlSerialAttribute.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:PengeSoft.Data.IXmlSerializer">
            <summary>
            对象Xml序列化处理接口，用于繁杂类型处理，只能用序列化为元素。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.IXmlSerializer.XmlEncode(System.Xml.XmlWriter)">
            <summary>
            将对象写入Xml节点
            </summary>
            <param name="node">Xml节点</param>
        </member>
        <member name="M:PengeSoft.Data.IXmlSerializer.XmlDecode(System.Xml.XmlReader)">
            <summary>
            从Xml节点中读出对象
            </summary>
            <param name="node">Xml节点</param>
        </member>
        <member name="M:PengeSoft.Data.IXmlSerializer.Clear">
            <summary>
            清除数数据，恢复缺省值
            </summary>
        </member>
        <member name="T:PengeSoft.db.IBaseDao">
            <summary>
            
            </summary>
        </member>
        <member name="M:PengeSoft.db.IBaseDao.ExcuteQuery(System.String,System.Object)">
            <summary>
            运行查询, 指定 sqlMap 映射语句及参数
            </summary>
            <param name="statementName">sqlMap 映射语句</param>
            <param name="para">数据对象</param>
            <returns>返回对象</returns>
        </member>
        <member name="T:PengeSoft.db.IDataProvider">
            <summary>
            推荐的数据提供接口定义，此接口从 <see cref="T:PengeSoft.db.IPagedDataProvider"/> 继承，
            可与<see cref="T:PengeSoft.db.PagedDataList"/>配合使用，实现分页。
            </summary>
        </member>
        <member name="T:PengeSoft.db.IPagedDataProvider">
            <summary>
            数据查询接口，用 Hashtable 传入查询条件，可与<see cref="T:PengeSoft.db.PagedDataList"/>配合使用。
            </summary>
            <remarks>
            条件表中如有日期范围字段应表达为两个值 '属性名称_S' 开始日期 , '属性名称_E' 结束日期。
            缺省排序字段会存到'_OrderBy'中，注意不要重名。
            </remarks>
            <example>
            <code>
               Hashtable para = new Hashtable();
               
               if (GenDate != DateTime.MinValue)
               {
                   if (EndDate != DateTime.MinValue)
                   {
                       para.Add("GenDate_S", GenDate);
                       para.Add("GenDate_E", EndDate);
                   }
                   else
                   {
                       para.Add("GenDate", GenDate);
                   }
               }
               if (!string.IsNullOrEmpty(Order))
               {
                   para.Add("_OrderBy", Order);
               }
            </code>
            </example>
        </member>
        <member name="M:PengeSoft.db.IPagedDataProvider.QueryCount(System.Collections.Hashtable)">
            <summary>
            根据数据查询条件取记录总数
            </summary>
            <param name="queryPara">查询条件对象</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.db.IPagedDataProvider.QueryList(System.Collections.Hashtable,System.Int32,System.Int32)">
            <summary>
            根据数据查询条件取记录列表
            </summary>
            <param name="queryPara">查询条件对象</param>
            <param name="Start">起始记录号</param>
            <param name="PageSize">页面长度</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.db.IDataProvider.GetCount">
            <summary>
            取记录数
            </summary>
            <returns>记录数</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProvider.GetList(System.Int32,System.Int32,System.String)">
            <summary>
            取数据列表
            </summary>
            <param name="Start">起始记录</param>
            <param name="PageSize">页长度</param>
            <param name="OrderByField">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.db.IDataProvider.QueryCount(PengeSoft.Data.DataPacket)">
            <summary>
            查询记录数
            </summary>
            <param name="Data">条件对象</param>
            <returns>记录数</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProvider.QueryList(PengeSoft.Data.DataPacket,System.Int32,System.Int32,System.String)">
            <summary>
            查询列表
            </summary>
            <param name="Data">条件对象</param>
            <param name="Start">起始记录</param>
            <param name="PageSize">页长度</param>
            <returns>列表</returns>
            <param name="OrderByField">排序字段</param>
        </member>
        <member name="M:PengeSoft.db.IDataProvider.Insert(PengeSoft.Data.DataPacket)">
            <summary>
            添加新记录
            </summary>
            <param name="Data">数据对象</param>
            <returns>返回对象</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProvider.Insert(System.String,PengeSoft.Data.DataPacket)">
            <summary>
            添加新记录, 指定 sqlMap 映射语句
            </summary>
            <param name="statementName">sqlMap 映射语句</param>
            <param name="Data">数据对象</param>
            <returns>返回对象</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProvider.Update(PengeSoft.Data.DataPacket)">
            <summary>
            更新记录
            </summary>
            <param name="Data">数据对象</param>
            <returns>更新记录数</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProvider.Update(System.String,PengeSoft.Data.DataPacket)">
            <summary>
            更新记录, 指定 sqlMap 映射语句
            </summary>
            <param name="statementName">sqlMap 映射语句</param>
            <param name="Data">数据对象</param>
            <returns>更新记录数</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProvider.GetDetail(PengeSoft.Data.DataPacket)">
            <summary>
            取记录详细数据
            </summary>
            <param name="Data">条件对象</param>
            <returns>数据对象</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProvider.Delete(PengeSoft.Data.DataPacket)">
            <summary>
            删除记录
            </summary>
            <param name="Data">条件对象</param>
        </member>
        <member name="T:PengeSoft.db.IDataProviderEx">
            <summary>
            扩展的数据提供接口定义，此接口从 <see cref="!:IDateProvider"/> 继承
            </summary>
        </member>
        <member name="M:PengeSoft.db.IDataProviderEx.QueryCount(System.String,System.Collections.Hashtable)">
            <summary>
            查询记录数
            </summary>
            <param name="statementName">sqlMap 映射语句</param>
            <param name="queryPara">查询条件对象</param>
            <returns>记录数</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProviderEx.QueryList(System.String,System.Collections.Hashtable,System.Int32,System.Int32)">
            <summary>
            查询列表
            </summary>
            <param name="statementName">sqlMap 映射语句</param>
            <param name="queryPara">查询条件对象</param>
            <param name="Start">起始记录</param>
            <param name="PageSize">页长度</param>
            <returns>列表</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProviderEx.QueryList(System.Collections.Hashtable,System.Int32,System.Int32,System.Boolean)">
            <summary>
            查询列表
            </summary>
            <param name="queryPara">查询条件对象</param>
            <param name="Start">起始记录</param>
            <param name="PageSize">页长度</param>
            <param name="detail">取明细数据</param>
            <returns>列表</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProviderEx.Update(PengeSoft.Data.DataPacket,System.Boolean)">
            <summary>
            更新记录
            </summary>
            <param name="Data">数据对象</param>
            <param name="detail">更新明细数据</param>
            <returns>无</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProviderEx.Update(System.String,PengeSoft.Data.DataPacket,System.Boolean)">
            <param name="detail">取明细数据</param>
            <summary>
            更新记录, 指定 sqlMap 映射语句
            </summary>
            <param name="statementName">sqlMap 映射语句</param>
            <param name="Data">数据对象</param>
            <param name="detail">更新明细数据</param>
            <returns>更新记录数</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProviderEx.Insert(System.String,PengeSoft.Data.DataPacket)">
            <summary>
            添加新记录
            </summary>
            <param name="statementName">sqlMap 映射语句</param>
            <param name="Data">数据对象</param>
            <returns>返回对象</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProviderEx.GetDetail(System.String,PengeSoft.Data.DataPacket)">
            <summary>
            取数据
            </summary>
            <param name="statementName">sqlMap 映射语句</param>
            <param name="data">条件对象</param>
            <returns>数据对象</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProviderEx.GetDetail(PengeSoft.Data.DataPacket,System.Boolean)">
            <summary>
            取数据
            </summary>
            <param name="data">条件对象</param>
            <param name="detail">取明细数据</param>
            <returns>数据对象</returns>
        </member>
        <member name="M:PengeSoft.db.IDataProviderEx.Delete(System.String,PengeSoft.Data.DataPacket)">
            <summary>
            删除记录
            </summary>
            <param name="statementName">sqlMap 映射语句</param>
            <param name="Data">条件对象</param>
        </member>
        <member name="T:PengeSoft.Data.GcinfoBase">
            <summary>
            GcinfoBase 的摘要说明。
            </summary>
        </member>
        <member name="T:PengeSoft.Data.InfoSet">
            <summary>
            InfoSet 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.InfoSet.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.InfoSet.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.InfoSet.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.InfoSet.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.InfoSet.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.InfoSet.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.InfoSet.Values">
            <summary>
             
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GcinfoBase.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GcinfoBase.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GcinfoBase.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GcinfoBase.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GcinfoBase.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.GcinfoBase.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.GcinfoBase.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.GcinfoBase.Bzsm">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GcinfoBase.Defsm">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.Data.FrameTabSheet">
            <summary>
            FrameTabSheet 的摘要说明。
            </summary>
        </member>
        <member name="T:PengeSoft.Data.FrameViewBase">
            <summary>
            FrameViewBase 的摘要说明。
            </summary>
            <remarks>
            需手工修改Stream,Assign相关代码 
            </remarks>
        </member>
        <member name="T:PengeSoft.Data.FrameBase">
            <summary>
            FrameBase 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.FrameBase.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.FrameBase.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.FrameBase.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.FrameBase.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.FrameBase.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.FrameBase.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.FrameBase.CurTableName">
            <summary>
            当前表格名称 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.FrameViewBase.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.FrameViewBase.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.FrameViewBase.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.FrameViewBase.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.FrameViewBase.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.FrameViewBase.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.FrameViewBase.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.FrameViewBase.TableList">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.FrameViewBase.RemI">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.FrameViewBase.Tables">
            <summary>
             
            </summary>
        </member>
        <member name="M:PengeSoft.Data.FrameTabSheet.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.FrameTabSheet.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.FrameTabSheet.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.FrameTabSheet.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.FrameTabSheet.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.FrameTabSheet.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.FrameTabSheet.TreeWidth">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.FrameTabSheet.TabStyle">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.Data.UI.IUITemplateManager">
            <summary>
            数据据显示模板管理，UIViewModel 模板, 和 UIViewData 模板管理
            </summary>
        </member>
        <member name="T:PengeSoft.Data.UI.UICell">
            <summary>
            UICell 的摘要说明。
            </summary>
            <remarks>
            UI部件定义 
            </remarks>
        </member>
        <member name="M:PengeSoft.Data.UI.UICell.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.UI.UICell.CreateNewItem">
            <summary>
            根据创建一个新 <see cref="T:PengeSoft.Data.UI.UICell"/> 元素实例
            </summary>
            <returns>元素实例</returns>
        </member>
        <member name="M:PengeSoft.Data.UI.UICell.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.UI.UICell.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.UI.UICell.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.UI.UICell.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.Data.UI.UICell.Title">
            <summary>
            标签 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.UI.UICell.Id">
            <summary>
            名称 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.UI.UICell.DataType">
            <summary>
            数据类型 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.UI.UICell.DataSource">
            <summary>
            数据源 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.UI.UICell.PosX">
            <summary>
            位置X 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.UI.UICell.PosY">
            <summary>
            位置Y 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.UI.UICell.Witdth">
            <summary>
            宽度 
            绝对值和百分比 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.UI.UICell.Height">
            <summary>
            高度 
            绝对值和百分比 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.UI.UICell.Style">
            <summary>
            显示风格 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.UI.UICell.BorderStyle">
            <summary>
            边框属性 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.UI.UICell.Layout">
            <summary>
            子部件布局 
            横向、纵向 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.UI.UICell.Validator">
            <summary>
            有效性验证 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.UI.UICell.Access">
            <summary>
            访问特性表 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.UI.UIValidator">
            <summary>
            UIValidator 的摘要说明。
            </summary>
            <remarks>
            有效性验证器 
            </remarks>
        </member>
        <member name="M:PengeSoft.Data.UI.UIValidator.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.UI.UIValidator.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.UI.UIValidator.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.UI.UIValidator.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.Data.UI.UIValidator.Type">
            <summary>
            类型 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.UI.UIValidator.Regx">
            <summary>
            表达式 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.UI.UIViewData">
            <summary>
            ViewData 的摘要说明。
            </summary>
            <remarks>
            视图数据 
            </remarks>
        </member>
        <member name="M:PengeSoft.Data.UI.UIViewData.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.UI.UIViewData.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.UI.UIViewData.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.UI.UIViewData.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.UI.UIViewData.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.Data.UI.UIViewData.Values">
            <summary>
            值表 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.UI.UIViewModel">
            <summary>
            UIViewModel 的摘要说明。
            </summary>
            <remarks>
            视图模型数据 
            </remarks>
        </member>
        <member name="M:PengeSoft.Data.UI.UIViewModel.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.UI.UIViewModel.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.UI.UIViewModel.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.UI.UIViewModel.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <!-- 对于成员“P:PengeSoft.Data.UI.UIViewModel.Name”忽略有格式错误的 XML 注释 -->
        <member name="P:PengeSoft.Data.UI.UIViewModel.Detail">
            <summary>
            说明 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.PersonRecList">
            <summary>
            PersonRecList 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.PersonRecList.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.PersonRecList.#ctor(System.Collections.ICollection)">
            <summary>
            初始化新实例，该实例包含从指定集合复制的元素并且具有与所复制的元素数相同的初始容量。
            </summary>
            <param name="c"></param>
        </member>
        <member name="T:PengeSoft.WorkZoneData.PersonRec">
            <summary>
            PersonRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.PersonRec.Get_TagsSet(System.Int32)">
            <summary>
            设位集: 标记位 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.WorkZoneData.PersonRec.Set_TagsSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 标记位 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.PersonRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.PersonRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.PersonRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.PersonRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.UniqID">
            <summary>
            唯一标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.IDCard">
            <summary>
            身份证号 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.NickName">
            <summary>
            呢称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.FullName">
            <summary>
            全名 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Detail">
            <summary>
            描述 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Unit">
            <summary>
            单位名称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Dept">
            <summary>
            部门 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Job">
            <summary>
            职务 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Addr">
            <summary>
            地址 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Zip">
            <summary>
            邮编 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Chief">
            <summary>
            负责人 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Contact">
            <summary>
            联系人 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Tel1">
            <summary>
            电话1 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Tel2">
            <summary>
            电话2 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Fax">
            <summary>
            传真 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Mob1">
            <summary>
            手机1 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Mob2">
            <summary>
            手机2 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.EMail">
            <summary>
            EMail 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.IMCode">
            <summary>
            IM地址(QQ,MSN,Skype等) 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.WebURL">
            <summary>
            网页地址 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Memo">
            <summary>
            备注 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.ExtParm">
            <summary>
            扩展参数 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.PersonRec.Tags">
            <summary>
            标记位 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.SimPersonRec">
            <summary>
            SimPersonRec 简化的个人信息。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SimPersonRec.Get_TagsSet(System.Int32)">
            <summary>
            设位集: 标记位 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SimPersonRec.Set_TagsSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 标记位 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SimPersonRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SimPersonRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SimPersonRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SimPersonRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SimPersonRec.UniqID">
            <summary>
            唯一标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SimPersonRec.NickName">
            <summary>
            呢称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SimPersonRec.FullName">
            <summary>
            全名 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SimPersonRec.Tags">
            <summary>
            标记位 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.ActionRec">
            <summary>
            ActionRec 权限信息，包括具有权限的用户和组。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ActionRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ActionRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ActionRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ActionRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ActionRec.ActName">
            <summary>
            操作名称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ActionRec.Detail">
            <summary>
            描述 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ActionRec.ActID">
            <summary>
            操作代码 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ActionRec.Users">
            <summary>
            具有限的用户SID表 
            SID可为用户和组 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ActionRec.IncludeGroup">
            <summary>
            包括组数据 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.GroupRec">
            <summary>
            GroupRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.GroupRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.GroupRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.GroupRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.GroupRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.GroupRec.LoginID">
            <summary>
            组登录名 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.GroupRec.Detail">
            <summary>
            描述 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.GroupRec.Users">
            <summary>
            组用户SID表 
            SID为用户唯一标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.GroupRec.UserIDs">
            <summary>
            用户标识表 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.RightAutherRec">
            <summary>
            RightAutherRec 用于存贮用户登录后的有关信息。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.RightAutherRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.RightAutherRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.RightAutherRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.RightAutherRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.RightAutherRec.Host">
            <summary>
            主机地址 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.RightAutherRec.LoginID">
            <summary>
            登录名 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.RightAutherRec.DesKey">
            <summary>
            通讯加密字 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.RightAutherRec.DTag">
            <summary>
            用户安全标记 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.RightAutherRec.UserUniqID">
            <summary>
            用户唯一标识 
            为Guid字符串 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.RightAutherRec.ServerID">
            <summary>
            认证服务器标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.RightAutherRec.KeySN">
            <summary>
            用户端锁号 
            用于用户认证 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.RightAutherRec.KeyUDef">
            <summary>
            用户端自定义标识 
            用于用户认证 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.RightAutherRec.KeyMac">
            <summary>
            用户端网卡Mac地址 
            用于用户认证 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.RightAutherRec.KeyHDD">
            <summary>
            用户端HDD序列号 
            用于用户认证 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.BoardMsg">
            <summary>
            BoardMsg 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.BoardMsg.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.BoardMsg.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.BoardMsg.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.BoardMsg.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.BoardMsg.MsgID">
            <summary>
            消息标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.BoardMsg.BoardID">
            <summary>
            公告牌标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.BoardMsg.Msg">
            <summary>
            消息 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.BoardMsg.UserID">
            <summary>
            创建用户 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.BoardMsg.PubDate">
            <summary>
            创建时间 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.UserRole">
            <summary>
            UserRole 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRole.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRole.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRole.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRole.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRole.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRole.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRole.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRole.LoginID">
            <summary>
            登录名称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRole.FullName">
            <summary>
            全名 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRole.Detail">
            <summary>
            描述 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRole.Deep">
            <summary>
            树级次 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRole.Type">
            <summary>
            类别 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRole.Status">
            <summary>
            状态 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRole.GroupID">
            <summary>
            分组号 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRole.UserList">
            <summary>
            用户ID列表 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRole.UserIDs">
            <summary>
            用户名称表 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRole.Attrib">
            <summary>
            属性 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.UserRoles">
            <summary>
            UserRoles 的摘要说明。
            </summary>
            <remarks>
            UserRole列表 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRoles.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.LimitsRec">
            <summary>
            LimitsRec 的摘要说明。
            </summary>
            <remarks>
            用户安全选项 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LimitsRec.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LimitsRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LimitsRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LimitsRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LimitsRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LimitsRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LimitsRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LimitsRec.IP">
            <summary>
            IP限制 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LimitsRec.IPRange">
            <summary>
            IP范围 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LimitsRec.DateTime">
            <summary>
            有效日期 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LimitsRec.Mac">
            <summary>
            Mac地址 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LimitsRec.CPU">
            <summary>
            CPU标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LimitsRec.SN">
            <summary>
            锁号 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LimitsRec.HddSN">
            <summary>
            硬盘序列号 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LimitsRec.UserDef">
            <summary>
            用户自定义标识 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.AccountRec">
            <summary>
            AccountRec 的摘要说明。
            </summary>
            <remarks>
            一个用户可以有多个帐户,计次和余额帐户可设缺省帐户,表示为这一类的总帐,消费记录另行存放 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AccountRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AccountRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AccountRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AccountRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AccountRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.AccountRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AccountRec.ActID">
            <summary>
            记帐权限标识 
            此项为0表示的缺省帐户 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AccountRec.Detail">
            <summary>
            描述 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AccountRec.Type">
            <summary>
            类型 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AccountRec.Price">
            <summary>
            价格 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AccountRec.Value">
            <summary>
            余额 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AccountRec.Date">
            <summary>
            日期限制 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.AccountRec.AddAttrib">
            <summary>
            附加属性 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.UserRec">
            <summary>
            UserRec 的摘要说明。
            </summary>
            <remarks>
            用户信息 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRec.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRec.Get_UStatusSet(System.Int32)">
            <summary>
            设位集: 用户状态 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRec.Set_UStatusSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 用户状态 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRec.SID">
            <summary>
            安全标识,用的是DataPacket的ID 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRec.SecLevel">
            <summary>
            安全级别 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRec.Password">
            <summary>
            口令的 MD5 值 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRec.UType">
            <summary>
            用户类型 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRec.UStatus">
            <summary>
            用户状态 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRec.GUID">
            <summary>
            特殊用户的接口GUID 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRec.Para">
            <summary>
            特殊用户的接口参数 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRec.AddAttrib">
            <summary>
            附加属性 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRec.Logins">
            <summary>
            多机登陆 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRec.Limits">
            <summary>
            安全选项 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRec.AccountList">
            <summary>
            记帐数据 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRec.GroupID">
            <summary>
            成组ID 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.Users">
            <summary>
            Users 的摘要说明。
            </summary>
            <remarks>
            用户信息表 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.Users.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.UserGroupRec">
            <summary>
            UserGroupRec 的摘要说明。
            </summary>
            <remarks>
            用户组信息, 本模型生成的代码需修改才能与Delphi兼容 
            </remarks>
        </member>
        <member name="T:PengeSoft.Data.AdvStrRec">
            <summary>
            AdvStrRec 的摘要说明。
            </summary>
        </member>
        <member name="T:PengeSoft.Data.StrRec">
            <summary>
            StrRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StrRec.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StrRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StrRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.StrRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.StrRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.StrRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.StrRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.StrRec.status">
            <summary>
            状态 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.StrRec.rtype">
            <summary>
            数据类型 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.StrRec.row">
            <summary>
            行号 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.StrRec.deep">
            <summary>
            级次 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.StrRec.HideCnt">
            <summary>
            隐藏记数 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.StrRec.Childs">
            <summary>
            子数据 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.AdvStrRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.AdvStrRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.AdvStrRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.AdvStrRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.AdvStrRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.AdvStrRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.AdvStrRec.ImageIndex">
            <summary>
            图标号 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AdvStrRec.CheckBox">
            <summary>
            有无选中框 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupRec.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupRec.Get_GStatusSet(System.Int32)">
            <summary>
            设位集: 组状态 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupRec.Set_GStatusSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 组状态 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupRec.LoginID">
            <summary>
            登录标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupRec.FullName">
            <summary>
            全名 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupRec.Detail">
            <summary>
            描述 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupRec.SID">
            <summary>
            安全标识,用的是DataPacket的ID 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupRec.SecLevel">
            <summary>
            安全级别 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupRec.GType">
            <summary>
            组类型 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupRec.GStatus">
            <summary>
            组状态 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupRec.AddAttrib">
            <summary>
            附加属性 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupRec.UserList">
            <summary>
            组用户表 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupRec.UserIds">
            <summary>
            组用户loginId表 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupRec.Limits">
            <summary>
            安全选项 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupRec.GroupID">
            <summary>
            成组ID 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.UserGroups">
            <summary>
            UserGroups 的摘要说明。
            </summary>
            <remarks>
            用户组信息表 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroups.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.SubActionRec">
            <summary>
            SubActionRec 的摘要说明。
            </summary>
            <remarks>
            子权限定义 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SubActionRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SubActionRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SubActionRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SubActionRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SubActionRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SubActionRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SubActionRec.RightName">
            <summary>
            权限名称 
            暂未用,用的是DataPacket的ID 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SubActionRec.Detail">
            <summary>
            描述 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SubActionRec.AddAttrib">
            <summary>
            附加属性 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.LoginUserRec">
            <summary>
            LoginUserRec 的摘要说明。
            </summary>
            <remarks>
            登录信息,使用时时间需按OleDate转换 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginUserRec.Get_LStatusSet(System.Int32)">
            <summary>
            设位集: 用户状态 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginUserRec.Set_LStatusSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 用户状态 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginUserRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginUserRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginUserRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginUserRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginUserRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginUserRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginUserRec.UID">
            <summary>
            用户ID 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginUserRec.LoginTime">
            <summary>
            登录时间 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginUserRec.ExpTime">
            <summary>
            过期时间 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginUserRec.LStatus">
            <summary>
            用户状态 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginUserRec.DTag">
            <summary>
            用户数字签名 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginUserRec.USID">
            <summary>
            用户安全标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginUserRec.UIP">
            <summary>
            用户IP 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginUserRec.PUBLICKEY">
            <summary>
            DES 密匙 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginUserRec.AppKey">
            <summary>
            第三方应用密码 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginUserRec.AppTag">
            <summary>
            第三方应用标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginUserRec.PeerIP">
            <summary>
            用户连接IP 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginUserRec.PeerPort">
            <summary>
            用户连接UDP端口 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.UserActRec">
            <summary>
            UserActRec 的摘要说明。
            </summary>
            <remarks>
            用户权限定义 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserActRec.ActID">
            <summary>
            权限标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserActRec.ActName">
            <summary>
            权限名称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserActRec.ActMask">
            <summary>
            权限掩码 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.UserActs">
            <summary>
            UserActs 的摘要说明。
            </summary>
            <remarks>
            用户权限表 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActs.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.UserRightRec">
            <summary>
            UserRightRec 的摘要说明。
            </summary>
            <remarks>
            权限定义记录 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRightRec.Get_AStatusSet(System.Int32)">
            <summary>
            设位集: 权限状态 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRightRec.Set_AStatusSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 权限状态 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRightRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRightRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRightRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRightRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRightRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserRightRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRightRec.Deep">
            <summary>
            级次 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRightRec.ActName">
            <summary>
            权限名称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRightRec.Detail">
            <summary>
            权限描述 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRightRec.ActID">
            <summary>
            权限标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRightRec.GroupID">
            <summary>
            成组标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserRightRec.AStatus">
            <summary>
            权限状态 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.RightDefRec">
            <summary>
            RightDefRec 的摘要说明。
            </summary>
            <remarks>
            权限中用户/组安权限定义记录 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.RightDefRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.RightDefRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.RightDefRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.RightDefRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.RightDefRec.SID">
            <summary>
            用户/组安全标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.RightDefRec.Mask">
            <summary>
            权限掩码 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.RightDefs">
            <summary>
            RightDefs 的摘要说明。
            </summary>
            <remarks>
            权限中用户/组安权限定义记录表 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.RightDefs.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.UserActionRec">
            <summary>
            UserActionRec 的摘要说明。
            </summary>
            <remarks>
            用户权限定义记录，生成代码需修改才能与Delphi兼容 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActionRec.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActionRec.Get_AStatusSet(System.Int32)">
            <summary>
            设位集: 状态 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActionRec.Set_AStatusSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 状态 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActionRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActionRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActionRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActionRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActionRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserActionRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserActionRec.ActName">
            <summary>
            权限名称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserActionRec.Detail">
            <summary>
            描述 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserActionRec.ActID">
            <summary>
            权限标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserActionRec.AddAttrib">
            <summary>
            附加属性 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserActionRec.DisInherited">
            <summary>
            中断继承 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserActionRec.Account">
            <summary>
            计帐信息 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserActionRec.UserRights">
            <summary>
            用户/组权限表 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserActionRec.GroupID">
            <summary>
            成组标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserActionRec.AStatus">
            <summary>
            状态 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserActionRec.Parameter">
            <summary>
            参数 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.ActRightRec">
            <summary>
            ActRightRec 的摘要说明。
            </summary>
            <remarks>
            权限项(Action)的权限(Mask)定义记录 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ActRightRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ActRightRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ActRightRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ActRightRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ActRightRec.ActID">
            <summary>
            权限标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ActRightRec.Mask">
            <summary>
            权限掩码 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.ActRights">
            <summary>
            ActRights 的摘要说明。
            </summary>
            <remarks>
            权限项(Action)的权限(Mask)定义记录 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ActRights.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.UserGroupDefRec">
            <summary>
            UserGroupDefRec 的摘要说明。
            </summary>
            <remarks>
            用户所属组定义记录 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupDefRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupDefRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupDefRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupDefRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupDefRec.GroupId">
            <summary>
            组标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupDefRec.GroupName">
            <summary>
            组名称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserGroupDefRec.Action">
            <summary>
            动做 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.UserGroupDefs">
            <summary>
            UserGroupDefs 的摘要说明。
            </summary>
            <remarks>
            用户所属组定义记录表 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserGroupDefs.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="T:PengeSoft.db.GetCountDelegate">
            <summary>
            根据数据查询条件取记录总数
            </summary>
            <param name="queryPara">查询条件对象</param>
            <returns></returns>
        </member>
        <member name="T:PengeSoft.db.QueryListDelegate">
            <summary>
            根据数据查询条件取记录列表
            </summary>
            <param name="queryPara">查询条件对象</param>
            <param name="Start">起始记录号</param>
            <param name="PageSize">页面长度</param>
            <returns></returns>
        </member>
        <member name="T:PengeSoft.db.PagedList">
            <summary>
            处理数据分页基类,不能直接使用，派生类需实现GetTotalSize()和GetDataList(int Start, int localPageSize)。
            本类虽实现在IList接口，但仅仅为读取使用，对IList元素的修改不会反应到原始数据中去。不要去做修改！
            </summary>
        </member>
        <member name="T:PengeSoft.db.IPagedList">
            <summary>
            IPagedList接口，用于实现分页
            </summary>
        </member>
        <member name="M:PengeSoft.db.IPagedList.NextPage">
            <summary>
            移到下一页，如果当前页是最后一页，移到第一页。
            </summary>
            <returns>操作成功返回true,否则为false</returns>
        </member>
        <member name="M:PengeSoft.db.IPagedList.PreviousPage">
            <summary>
            移到上一页，如果当前页是第一页，移到最后一页。
            </summary>
            <returns>操作成功返回true,否则为false</returns>
        </member>
        <member name="M:PengeSoft.db.IPagedList.GotoPage(System.Int32)">
            <summary>
            移到指定页,如果页号大于最后一页，移到第一页，如果页号小于第一页，移到最后一页。
            </summary>
            <param name="pageIndex">指定页号</param>
        </member>
        <member name="P:PengeSoft.db.IPagedList.TotalSize">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:PengeSoft.db.IPagedList.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:PengeSoft.db.IPagedList.PageSize">
            <summary>
            每页记录数
            </summary>
        </member>
        <member name="P:PengeSoft.db.IPagedList.IsFirstPage">
            <summary>
            当前页是否为第一页
            </summary>
        </member>
        <member name="P:PengeSoft.db.IPagedList.IsMiddlePage">
            <summary>
            当前页是否为中间页（只有一页时总是返回false）
            </summary>
        </member>
        <member name="P:PengeSoft.db.IPagedList.IsLastPage">
            <summary>
            当前页是否为最后一页。（只有一页时总是返回true）
            </summary>
        </member>
        <member name="P:PengeSoft.db.IPagedList.IsNextPageAvailable">
            <summary>
            当前页是否有下一页
            </summary>
        </member>
        <member name="P:PengeSoft.db.IPagedList.IsPreviousPageAvailable">
            <summary>
            当前页是否有上一页
            </summary>
        </member>
        <member name="P:PengeSoft.db.IPagedList.PageIndex">
            <summary>
            返回当前页号。
            </summary>
        </member>
        <member name="F:PengeSoft.db.PagedList.DefaultPageSize">
            <summary>
            缺省页面大小
            </summary>
        </member>
        <member name="M:PengeSoft.db.PagedList.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">初始页号</param>
        </member>
        <member name="M:PengeSoft.db.PagedList.PageForward">
            <summary>
            
            </summary>
        </member>
        <member name="M:PengeSoft.db.PagedList.PageBack">
            <summary>
            
            </summary>
        </member>
        <member name="M:PengeSoft.db.PagedList.SubList(System.Collections.IList,System.Int32,System.Int32)">
            <summary>
            Provides a view of the IList pramaeter 
            from the specified position <paramref name="fromIndex"/> 
            to the specified position <paramref name="toIndex"/>. 
            </summary>
            <param name="list">The IList elements.</param>
            <param name="fromIndex">Starting position for the view of elements. </param>
            <param name="toIndex">Ending position for the view of elements. </param>
            <returns> A view of list.
            </returns>
            <remarks>
            The list that is returned is just a view, it is still backed
            by the orignal list.  Any changes you make to it will be 
            reflected in the orignal list.
            </remarks>
        </member>
        <member name="M:PengeSoft.db.PagedList.SafePageTo(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:PengeSoft.db.PagedList.GetTotalSize">
            <summary>
            取数据记录数,需要重载
            </summary>
        </member>
        <member name="M:PengeSoft.db.PagedList.GetDataList(System.Int32,System.Int32)">
            <summary>
            取数据列表
            </summary>
            <param name="Start">起始位置</param>
            <param name="localPageSize">取出数据记录数</param>
            <returns>结果IList</returns>
        </member>
        <member name="M:PengeSoft.db.PagedList.PageTo(System.Int32)">
            <summary>
            移到指定页，未做异常处理。
            </summary>
            <param name="index">页号</param>
        </member>
        <member name="M:PengeSoft.db.PagedList.GotoPage(System.Int32)">
            <summary>
            移到指定页，做异常处理。
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:PengeSoft.db.PagedList.NextPage">
            <summary>
            移到下一页。
            </summary>
            <returns>操作成功返回true,否则为false</returns>
        </member>
        <member name="M:PengeSoft.db.PagedList.PreviousPage">
            <summary>
            移到上一页。
            </summary>
            <returns>操作成功返回true,否则为false</returns>
        </member>
        <member name="M:PengeSoft.db.PagedList.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:PengeSoft.db.PagedList.Insert(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:PengeSoft.db.PagedList.Remove(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PengeSoft.db.PagedList.Contains(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.db.PagedList.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:PengeSoft.db.PagedList.IndexOf(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.db.PagedList.Add(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.db.PagedList.CopyTo(System.Array,System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:PengeSoft.db.PagedList.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:PengeSoft.db.PagedList.IsEmpty">
            <summary>
            当前页面是否为空。
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.TotalSize">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.PageIndex">
            <summary>
            返回当前页号。
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.IsPreviousPageAvailable">
            <summary>
            当前页是否有上一页
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.IsFirstPage">
            <summary>
            当前页是否为第一页
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.PageSize">
            <summary>
            每页记录数
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.IsMiddlePage">
            <summary>
            当前页是否为中间页（只有一页时总是返回false）
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.IsNextPageAvailable">
            <summary>
            当前页是否有下一页
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.IsLastPage">
            <summary>
            当前页是否为最后一页。（只有一页时总是返回true）
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.IsFixedSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.IsSynchronized">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PagedList.SyncRoot">
            <summary>
            
            </summary>
        </member>
        <member name="T:PengeSoft.db.PagedDataList">
            <summary>
            处理数据库分页的数据接口, 使用 GetCountDelegate() 和 QueryListDelegate() 委托，或 <see cref="T:PengeSoft.db.IPagedDataProvider"/> 接口。
            </summary>
        </member>
        <member name="M:PengeSoft.db.PagedDataList.#ctor(PengeSoft.db.QueryListDelegate,PengeSoft.db.GetCountDelegate,System.Collections.Hashtable,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="QueryMethod"></param>
            <param name="GetCountMethod"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="parameterObject"></param>
        </member>
        <member name="M:PengeSoft.db.PagedDataList.#ctor(PengeSoft.db.QueryListDelegate,PengeSoft.db.GetCountDelegate,System.Collections.Hashtable,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="QueryMethod"></param>
            <param name="GetCountMethod"></param>
            <param name="pageSize"></param>
            <param name="parameterObject"></param>
        </member>
        <member name="M:PengeSoft.db.PagedDataList.#ctor(PengeSoft.db.IPagedDataProvider,System.Collections.Hashtable,System.Int32,System.Int32)">
            <summary>
            构造函数, 使用 <see cref="T:PengeSoft.db.IPagedDataProvider"/> 接口
            </summary>
            <param name="service"></param>
            <param name="parameterObject"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
        </member>
        <member name="M:PengeSoft.db.PagedDataList.#ctor(PengeSoft.db.IPagedDataProvider,System.Collections.Hashtable,System.Int32)">
            <summary>
            构造函数, 使用 <see cref="T:PengeSoft.db.IPagedDataProvider"/> 接口
            </summary>
            <param name="service"></param>
            <param name="parameterObject"></param>
            <param name="pageSize"></param>
        </member>
        <member name="M:PengeSoft.db.PagedDataList.GetTotalSize">
            <summary>
            取数据记录数
            </summary>
        </member>
        <member name="M:PengeSoft.db.PagedDataList.GetDataList(System.Int32,System.Int32)">
            <summary>
            取数据列表
            </summary>
            <param name="Start">起始位置</param>
            <param name="localPageSize">取出数据记录数</param>
            <returns>结果IList</returns>
        </member>
        <member name="T:PengeSoft.Data.IndexRec">
            <summary>
            IndexRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.IndexRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.IndexRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.IndexRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.IndexRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.IndexRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.IndexRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.IndexRec.FileID">
            <summary>
            文件标识 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.IndexRec.Name">
            <summary>
            名称 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.IndexRec.Memo">
            <summary>
            备注 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.PsStorageFile.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.PsStorageFile.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="T:PengeSoft.Data.FrameTree">
            <summary>
            FrameTree 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.FrameTree.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.FrameTree.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.FrameTree.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.FrameTree.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.FrameTree.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.FrameTree.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.FrameTree.TreeWidth">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.FrameTree.RemI2">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.Data.CmpTableBase">
            <summary>
            CmpTableBase 的摘要说明。
            </summary>
            <remarks>
            需在派生类中手工修改CompareBase的初始化 
            </remarks>
        </member>
        <member name="M:PengeSoft.Data.CmpTableBase.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.CmpTableBase.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.CmpTableBase.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.CmpTableBase.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.CmpTableBase.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.CmpTableBase.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.CmpTableBase.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.CmpTableBase.MaterTblTypeName">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.CmpTableBase.DzTableName">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.CmpTableBase.SpSize">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.CmpTableBase.SpAlign">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.CmpTableBase.Sizeable">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.CmpTableBase.CompareBase">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.CmpTableBase.MasterTable">
            <summary>
             
            </summary>
        </member>
        <member name="M:PengeSoft.Utils.GdiPlus.CreateDibStream(System.String,System.IntPtr)">
            <summary>
            创建Windows Dib图像的数据流
            </summary>
            <param name="picFormat">*.bmp ， *.tif ， *.jpg ， *.png ， *.gif</param>
            <param name="bminfo"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Utils.GdiPlus.CreateDibStream(System.String,System.IntPtr,System.Int32)">
            <summary>
            创建Windows Dib图像的数据流
            </summary>
            <param name="picFormat">*.bmp ， *.tif ， *.jpg ， *.png ， *.gif</param>
            <param name="bminfo"></param>
            <param name="compressLevel">保存格式对图像数据估计压缩倍数，0=不做估计，1=Bmp图像原始大小</param>
            <returns></returns>
        </member>
        <member name="T:PengeSoft.Utils.ComStream">
            <summary>
            将系统 COM 流 IStream 封装成 C# 的流 Stream 类
            </summary>
        </member>
        <member name="T:PengeSoft.Data.MDTable">
            <summary>
            MDTable 的摘要说明。
            </summary>
            <remarks>
            需在派生类中手工修改MasterTable,DetailTable的初始化 
            </remarks>
        </member>
        <member name="M:PengeSoft.Data.MDTable.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.MDTable.CreateDetailTable">
            <summary>
            创建主表实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.MDTable.CreateMasterTable">
            <summary>
            创建从表实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.MDTable.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.MDTable.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.MDTable.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.MDTable.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.MDTable.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.MDTable.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.MDTable.MasterTable">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.MDTable.DetailTable">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.MDTable.SpSize">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.Auther.AutherCache">
            <summary>
            在找不到发生异常时，异常处理速度极慢, 不能使用在1.6G的笔记本上约4ms,完全不能用
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.AutherCache.FindItem(System.Object)">
            <summary>
            
            </summary>
            <remarks>
            只能用TryGetValue(),不能使用在找不到发生异常时，异常处理速度极慢
            </remarks>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PengeSoft.Auther.IRightCheck">
            <summary>
            用户认证接口
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.Login(System.String,System.String,System.String)">
            <summary>
            用户登录
            </summary>
            <param name="Host">认证服务主机IP地址</param>
            <param name="LoginID">用户登录</param>
            <param name="Password">用户口令</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.LoginEx(System.String,System.String,System.String,System.String)">
            <summary>
            用户登录, 带自定义验证信息
            </summary>
            <param name="Host">认证服务主机IP地址</param>
            <param name="LoginID">用户登录</param>
            <param name="Password">用户口令</param>
            <param name="UserDefTag">用户写定义验证标识</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.Logout">
            <summary>
            注销用户登录
            </summary>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.ChangePass(System.String,System.String)">
            <summary>
            修改口令,需原有口令
            </summary>
            <param name="OldPwd">原口令</param>
            <param name="NewPwd">新口令</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.CheckRight(System.Int32)">
            <summary>
            根据操作码检查用户权限
            </summary>
            <param name="Action">操作码</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.CheckRightByName(System.String)">
            <summary>
            根据操作名称检查用户权限
            </summary>
            <param name="ActionName">操作名称</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.CheckRightEx(System.String,System.Int32,System.String@,System.String@)">
            <summary>
            根据操作码检查指定用户权限，主要用于服务中，需知道指定用户登录后的安全标识
            </summary>
            <param name="UserID">指定用户登录后的安全标识</param>
            <param name="Action">操作码</param>
            <param name="UName">操作成功返回指定用户的登录名</param>
            <param name="ULAttrib">操作成功返回指定用户的加密字</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.CheckRightExMask(System.String,System.Int32,System.Int64,System.String@,System.String@)">
            <summary>
            根据操作码检查指定用户权限，主要用于服务中，需知道指定用户登录后的安全标识
            </summary>
            <param name="UserID">指定用户登录后的安全标识</param>
            <param name="Action">操作码</param>
            <param name="UName">操作成功返回指定用户的登录名</param>
            <param name="ULAttrib">操作成功返回指定用户的加密字</param>
            <param name="mask">权限掩码</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.CheckRightByNameEx(System.String,System.String,System.String@,System.String@)">
            <summary>
            根据操作操作名称检查指定用户权限，主要用于服务中，需知道指定用户登录后的安全标识
            </summary>
            <param name="UserID">指定用户登录后的安全标识</param>
            <param name="ActionName">操作名称</param>
            <param name="UName">操作成功返回指定用户的登录名</param>
            <param name="ULAttrib">操作成功返回指定用户的加密字</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.CheckRightByNameExMask(System.String,System.String,System.Int64,System.String@,System.String@)">
            <summary>
            根据操作操作名称检查指定用户权限，主要用于服务中，需知道指定用户登录后的安全标识
            </summary>
            <param name="UserID">指定用户登录后的安全标识</param>
            <param name="ActionName">操作名称</param>
            <param name="UName">操作成功返回指定用户的登录名</param>
            <param name="ULAttrib">操作成功返回指定用户的加密字</param>
            <param name="mask">权限掩码</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.LoginUser(System.String,System.String,System.String,System.String,System.Int32,System.String@,System.String@)">
            <summary>
            登录指定用户，但不影响现在登录，并取得相关登录信息，主要用于从网页登录。
            </summary>
            <param name="LoginID">登录名称</param>
            <param name="PassWord">口令(MD5值)</param>
            <param name="UIP">用户IP地址</param>
            <param name="Limits">登录限制相关信息，硬盘序号+'\n'+网卡Mac+'\n'+锁号+'\n'+用户自定义标记</param>
            <param name="Action">权限码</param>
            <param name="UTag">操作成功返回指定用户的安全标识</param>
            <param name="UKey">操作成功返回指定用户的加密字</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.LoginUser(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String@,System.String@)">
            <summary>
            登录指定用户，但不影响现在登录，并取得相关登录信息，主要用于从网页登录。
            </summary>
            <param name="LoginID">登录名称</param>
            <param name="PassWord">口令(MD5值)</param>
            <param name="UHost">用户主机名称</param>
            <param name="UIP">用户IP地址</param>
            <param name="Limits">登录限制相关信息，硬盘序号+'\n'+网卡Mac+'\n'+锁号+'\n'+用户自定义标记</param>
            <param name="Action">权限码</param>
            <param name="UTag">操作成功返回指定用户的安全标识</param>
            <param name="UKey">操作成功返回指定用户的加密字</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.GetRights(System.Int32,System.Int64,System.Int32,System.String@)">
            <summary>
            取指定用户权限表
            </summary>
            <param name="level">
              取用户权限级别
                GURT_NORMAL    : 结果为常用格式, 结果权限以ID表示，多个权限以','隔开;
                GURT_GROUP     : 考虑组权限
                GURT_DETAIL    : 结果为详细, 结果为 <see cref="T:PengeSoft.WorkZoneData.UserActs"/> 的 Xml 序列。
            </param>
            <param name="Mask">权限掩码</param>
            <param name="Inhe">考虑继承关系</param>
            <param name="Rights">权限表，格式由 level 确定</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.GetUserRights(System.String,System.Int32,System.Int64,System.Int32,System.String@)">
            <summary>
            取指定用户权限表
            </summary>
            <param name="LoginId">登录名称</param>
            <param name="level">
              取用户权限级别
                GURT_NORMAL    : 结果为常用格式, 结果权限以ID表示，多个权限以','隔开;
                GURT_GROUP     : 考虑组权限
                GURT_DETAIL    : 结果为详细, 结果为 <see cref="T:PengeSoft.WorkZoneData.UserActs"/> 的 Xml 序列。
            </param>
            <param name="Mask">权限掩码</param>
            <param name="Inhe">考虑继承关系</param>
            <param name="Rights">权限表，格式由 level 确定</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.LogoutUser(System.String)">
            <summary>
            注销指定用户登录，但不影响现在登录，主要用于从网页注销。
            </summary>
            <param name="UTag">指定用户登录后的安全标识</param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.ValidUser(System.String,System.String)">
            <summary>
            验证用户的有效性
            </summary>
            <param name="LoginID">登录名称</param>
            <param name="Password">口令的Hash值</param>
            <returns>用户的SID, > 0 表示成功 </returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.RegNewUser(System.String,System.String,System.String,System.String)">
            <summary>
            注册新用户
            </summary>
            <param name="UserName">用户名称</param>
            <param name="FullName">用户全名</param>
            <param name="UserPWD">口令</param>
            <param name="LimitDate">安全限制内容,如有效期等</param>
            <returns>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.GetUserList(System.Int32,System.Int32,System.Int32,System.Int32,PengeSoft.Data.DataList)">
            <summary>
            取用户列表
            </summary>
            <param name="level">
            取列表的级别，有以下方面:
                    UATL_DETAIL, UATL_MID, UATL_LITTLE, UTAL_ONLYID
            和下面两个可或上的选项
                    UATL_ONLINESTAT,UATL_INCLUDESID;
            
            </param>
            <param name="Tag">0：所有用户，指定只取指定Tag的用户, Tag 可用的值有 UAT_HAVEMOB </param>
            <param name="start">结果起始记录号, 从 0 开始</param>
            <param name="count">结果记录条数, -1 表示全部</param>
            <param name="list">用于存贮返回值的列表，元素类型为 <see cref="T:PengeSoft.WorkZoneData.PersonRec"/> 或 <see cref="T:PengeSoft.WorkZoneData.SimPersonRec"/> </param>
            <returns>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.GetUserAttrib(System.String,PengeSoft.WorkZoneData.PersonRec@)">
            <summary>
            取用户属性
            </summary>
            <param name="LoginID">登录名称</param>
            <param name="Attrib">用户属性</param>
            <returns>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.UpdateUserAttrib(System.String,PengeSoft.WorkZoneData.PersonRec)">
            <summary>
            更新用户属性
            </summary>
            <param name="LoginID">登录名称</param>
            <param name="Attrib">用户属性</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.GenUserKey(System.String,System.Int32,System.Int32@,System.String@)">
            <summary>
            生成一次性登录标识
            </summary>
            <param name="UserID">指定用户登录后的安全标识</param>
            <param name="expire">标识有效时间</param>
            <param name="sn">标识序号</param>
            <param name="Key">标识</param>
            <returns>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.SimpleCheck(System.Int32,System.String,System.Int32,System.String@,System.String@)">
            <summary>
            根据一次性标识取得登录用户用安全标识，用于从Client自动登录网页。
            </summary>
            <param name="KeySN">标识序号</param>
            <param name="ID">用于验证的标识</param>
            <param name="AppID">应用程序标识</param>
            <param name="UTag">操作成功返回指定用户的安全标识</param>
            <param name="UKey">操作成功返回指定用户的加密字</param>
            <returns>操作成功返回指定用户的登录名，否则返回空串。</returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.GetUserSecID(System.String,PengeSoft.Auther.UserSecID@)">
            <summary>
            返回用户安全相关信息，返回的SecID为 <see cref="T:PengeSoft.Auther.UserSecID"/> 的 Xml 序列。
            </summary>
            <param name="LoginId">用户登录名</param>
            <param name="secId">返回的用户安全标识<see cref="T:PengeSoft.Auther.UserSecID"/></param>
            <returns>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.GetGroupList(System.Int32,System.Int32,System.Int32,System.Int32,PengeSoft.Data.DataList)">
            <summary>
            取组列表
            </summary>
            <param name="level">
            取列表的级别，有以下方面:
                      GATL_DETAIL,GATL_LITTLE
            和下面可或上的选项
                    GATL_GETDEPT
                    GATL_GETByID        取 Tag 指定组号的组信息
                    GATL_IncludeUID     信息中含用户LoginID表
                    GATL_IncludeChilds  取 Tag 指定组及下一级组信息
                    GATL_OnlyChilds     取 Tag 指定组号的下一级组信息
                    GATL_AllChilds      递归取出所有子组
                    GATL_IncludeSys     取出系统组
            GROUP_ADMI, GROUP_POWER, GROUP_USER 用户组的用户才能有 GATL_DETAIL 权限
            </param>
            <param name="Tag">level具有GATL_GETByID位时，为组号, 其他情况为组的最大级次(deep)取到树的第几级, -1 表示全部</param>
            <param name="start">结果起始记录号, 从 0 开始</param>
            <param name="count">结果记录条数, -1 表示全部</param>
            <param name="list">用于存贮返回值的列表，元素类型为 <see cref="T:PengeSoft.WorkZoneData.UserRole"/> </param>
            <returns>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.GetAction(System.String,PengeSoft.WorkZoneData.ActionRec@)">
            <summary>
            取权限信息
            </summary>
            <param name="actName">权限名称</param>
            <param name="action">权限对象,取不成功时为null</param>
            <returns>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.SetAction(PengeSoft.WorkZoneData.ActionRec)">
            <summary>
            修改权限信息
            </summary>
            <param name="action">权限对象</param>
            <returns>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.GetIdNames(System.String,System.String@)">
            <summary>
            取用户/组标识(Id)对应的名称
            </summary>
            <param name="IDs">标识表，用','号分开</param>
            <param name="Names">返回值名称表，用','号分开</param>
            <returns>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.GetGroupUsers(System.String,System.Int32,System.String@)">
            <summary>
            取组（可以多个）中所含的用户，
            </summary>
            <remarks>
              // Option for GetGroupUsers
              GGUL_LEVELMASK  = 0x00FF;
              // 以下为字符串输出格式 ','号分隔
              GGUL_ONLYID   = 0;
              GGUL_ONLYSID  = 1;
              GGUL_ONLYNAME = 2;
              GGUL_ONLYMOB  = 3;
              GGUL_ONLYMAIL = 4;
              // 以下为Xml输出格式, PersonRec 的 DataList
              GGUL_TINY     = 5;
              GGUL_LITTLE   = 6;
              GGUL_MID      = 7;
              GGUL_DETAIL   = 8;
              // 掩码
              GGUL_INCLUDESID = 0x0100;    // 对 GGUL_TINY,GGUL_LITTLE,GGUL_MID 有效
              GGUL_MIXNAMES   = 0x0200;    // 对所有输出方式有效，输入接收混合格式 '_User' , '@Group'
              GGUL_GroupInherited = 0x0400;    // 组继承
            </remarks>
            <param name="GroupNames">组名称表，用','号分开</param>
            <param name="Option">选项，</param>
            <param name="ans">返回用户名称表，用','号分开</param>
            <returns>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.SetUserPwd(System.String,System.String)">
            <summary>
            修改指定用户口令
            </summary>
            <param name="LoginID">用户登录名</param>
            <param name="NewPwd">新口令hash值</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.GetGroup(System.String,PengeSoft.WorkZoneData.GroupRec@)">
            <summary>
            取组数据
            </summary>
            <param name="GroupName">组名称</param>
            <param name="group">返回的组数据对象,不成功返回null</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.SetGroup(PengeSoft.WorkZoneData.GroupRec)">
            <summary>
            设组数据
            </summary>
            <param name="group">组数据对象</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheck.GetActionUsers(System.String,System.String@)">
            <summary>
            返回有指定权限的用户名称表
            </summary>
            <param name="actName">权限名称</param>
            <param name="users">用户名称表，用','号分开</param>
            <returns></returns>
        </member>
        <member name="P:PengeSoft.Auther.IRightCheck.Host">
            <summary>
            获取或设置用户认证服务器IP
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.IRightCheck.LoginID">
            <summary>
            获取或设置用户的登录名,登录后设定并不影响已有登录。
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.IRightCheck.Password">
            <summary>
            获取或设置用户的登录口令,登录后设定并不影响已有登录。
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.IRightCheck.UserSID">
            <summary>
            获取用户登录后的安全标识, 登录成功后才能取得。
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.IRightCheck.EncodeKey">
            <summary>
            获取用户登录后的加密字, 登录成功后才能取得。
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.IRightCheck.UniqueID">
            <summary>
            获取用户的的唯一标识（GUID）, 登录成功后才能取得。
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.IRightCheck.Active">
            <summary>
            获取或设置登录状态, 设置该属性会产生Login(),Logout()操作。
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.IRightCheck.KeepConnect">
            <summary>
            获取或设置是否自动保持与认证服务器的连接, 以防因长时不操作而超时。
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.IRightCheck.MaxIdleTime">
            <summary>
            获取或设置最大空闲时间(分钟)，如果超过该时间则自动断开联接。设为0则不处理空闲。
            KeepConnect为false时也不处理空闲，但会因不操作而产生服务端自动断开。
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.IRightCheckCache.ClearCache">
            <summary>
            清空Cache
            </summary>
            <returns></returns>
        </member>
        <member name="P:PengeSoft.Auther.IRightCheckCache.Auther">
            <summary>
            被Cache的权限接口
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.IRightCheckCache.EnableCache">
            <summary>
            存取Cache有效状态
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.IRightCheckCache.ValidTime">
            <summary>
            Cache有效时间,单位s
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.RightCache.UpdateUserAttrib(System.String,PengeSoft.WorkZoneData.PersonRec)">
            <summary>
            更新用户属性
            </summary>
            <param name="LoginID">登录名称</param>
            <param name="Attrib">用户属性</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.RightCache.GetAction(System.String,PengeSoft.WorkZoneData.ActionRec@)">
            <summary>
            取权限信息
            </summary>
            <param name="actName">权限名称</param>
            <param name="action">权限对象,取不成功时为null</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.RightCache.SetAction(PengeSoft.WorkZoneData.ActionRec)">
            <summary>
            修改权限信息
            </summary>
            <param name="action">权限对象</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.RightCache.GetIdNames(System.String,System.String@)">
            <summary>
            取用户/组标识(Id)对应的名称
            </summary>
            <param name="IDs">标识表，用','号分开</param>
            <param name="Names">返回值名称表，用','号分开</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.RightCache.GetGroupUsers(System.String,System.Int32,System.String@)">
            <summary>
            取组（可以多个）中所含的用户，
            </summary>
            <param name="GroupNames">组名称表，用','号分开</param>
            <param name="Option">选项，</param>
            <param name="ans">返回用户名称表，用','号分开</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.RightCache.SetUserPwd(System.String,System.String)">
            <summary>
            修改指定用户口令
            </summary>
            <param name="LoginID">用户登录名</param>
            <param name="NewPwd">新口令hash值</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.RightCache.GetGroup(System.String,PengeSoft.WorkZoneData.GroupRec@)">
            <summary>
            取组数据
            </summary>
            <param name="GroupName">组名称</param>
            <param name="group">返回的组数据对象,不成功返回null</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.RightCache.SetGroup(PengeSoft.WorkZoneData.GroupRec)">
            <summary>
            设组数据
            </summary>
            <param name="group">组数据对象</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.RightCache.GetActionUsers(System.String,System.String@)">
            <summary>
            返回有指定权限的用户名称表
            </summary>
            <param name="actName">权限名称</param>
            <param name="users">用户名称表，用','号分开</param>
            <returns></returns>
        </member>
        <member name="T:PengeSoft.Core.Thread.ThreadWorkSvr">
            <summary>
            服务类线程基类，由Interval属性决定处理间隔，在等待时可用Active()激活处理。
            </summary>
        </member>
        <member name="F:PengeSoft.Core.Thread.ThreadWorkSvr.Work_Sucess">
            <summary>成功完成</summary>
        </member>
        <member name="F:PengeSoft.Core.Thread.ThreadWorkSvr.Work_Break">
            <summary>用户中断</summary>
        </member>
        <member name="M:PengeSoft.Core.Thread.ThreadWorkSvr.DoWorkMain">
            <summary>
            线程入口
            </summary>
        </member>
        <member name="M:PengeSoft.Core.Thread.ThreadWorkSvr.CreateNewThread">
            <summary>
            创建一个新的线程实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Core.Thread.ThreadWorkSvr.Shutdown">
            <summary>
            请求中止处理，执行该功能并不会立即中止线程，只是在当前DoWork()完成后结束线程运行。
            </summary>
        </member>
        <member name="M:PengeSoft.Core.Thread.ThreadWorkSvr.Active">
            <summary>
            激活处理
            </summary>
        </member>
        <member name="M:PengeSoft.Core.Thread.ThreadWorkSvr.Initial">
            <summary>
            运行前初始化过程，虚函数。
            </summary>
        </member>
        <member name="M:PengeSoft.Core.Thread.ThreadWorkSvr.finished">
            <summary>
            线程运行完成时被自动调用。
            </summary>
        </member>
        <member name="M:PengeSoft.Core.Thread.ThreadWorkSvr.DoWork">
            <summary>
            实际处理程序，虚函数，必须重载。
            </summary>
            <returns>运行完成状态</returns>
        </member>
        <member name="P:PengeSoft.Core.Thread.ThreadWorkSvr.Interval">
            <summary>
            运行间格，两次 DoWork() 处理中间的间隔时间。
            </summary>
        </member>
        <member name="P:PengeSoft.Core.Thread.ThreadWorkSvr.Busy">
            <summary>
            正在执行
            </summary>
        </member>
        <member name="P:PengeSoft.Core.Thread.ThreadWorkSvr.RetValue">
            <summary>
            处理完成后的返回值
            </summary>
        </member>
        <member name="P:PengeSoft.Core.Thread.ThreadWorkSvr.ShouldStop">
            <summary>
            保护类属性，告知线程中止工作
            </summary>
        </member>
        <member name="T:PengeSoft.Net.CmdHead">
            <summary>
            消息头
            </summary>
        </member>
        <member name="T:PengeSoft.Net.CmdMessageBase">
             <summary>
             CmdMessageBase 消息基类
             <remarks>
             使用该类应注意, 应将生成器生成的 Clear() 函数改为 EmptyPara(),如有必要还应重载 ErrorMsg 属性.
             <code>
                public override void EmptyPara()
                {
                    base.EmptyPara();
            
                    ...
                }
             </code>
             </remarks>
             </summary>
        </member>
        <member name="M:PengeSoft.Net.ICmdMessage.SaveHeadToCmdStream(System.IO.Stream)">
            <summary>
            二阶段数据保存,保存消息头部份
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:PengeSoft.Net.ICmdMessage.SaveDataToCmdStream(System.IO.Stream)">
            <summary>
            二阶段数据保存,保存数据部份
            </summary>
            <param name="stream"></param>
        </member>
        <member name="P:PengeSoft.Net.ICmdMessage.PkType">
            <summary>
            数据包类型
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBase.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBase.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBase.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBase.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBase.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBase.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBase.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBase.LoadDataFromCmdStream(System.IO.Stream)">
            <summary>
            从流中两段式消息读取的读消息数据函数
            </summary>
            <remarks>
            如果读取没有预先读Head的数据包，必须下正确设置 PkType = PKType.DATA, DataSize 必须清0以按流长度读取。
            <code>
                CmdMsg.PkType = PKType.DATA;
                CmdMsg.DataSize = 0;
                CmdMsg.LoadDataFromCmdStream(stream);
                ...
            </code>
            </remarks>
            <param name="stream"></param>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBase.Head">
            <summary>
            消息头 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBase.MsgID">
            <summary>
            数据包序号
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBase.PkType">
            <summary>
            数据包类型
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBase.UTag">
            <summary>
            用户标识 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBase.Cmd">
            <summary>
            命令码 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBase.ResCode">
            <summary>
            返回值 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBase.EnCodeType">
            <summary>
            加密方式 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBase.CompressType">
            <summary>
            压缩方式 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBase.DataSize">
            <summary>
            消息长度 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBase.EnCodeKey">
            <summary>
            加密字
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBase.EnCoded">
            <summary>
            是否加密
            </summary>
        </member>
        <member name="T:PengeSoft.Net.GenCmdMessage">
            <summary>
            GenCmdMessage 通用的消息类，具有P1-P5五个整型参数，SP1-SP5五个字符串参数。
            </summary>
        </member>
        <member name="M:PengeSoft.Net.GenCmdMessage.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.GenCmdMessage.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.GenCmdMessage.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Net.GenCmdMessage.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Net.GenCmdMessage.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Net.GenCmdMessage.P1">
            <summary>
            整数参数1 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.GenCmdMessage.P2">
            <summary>
            整数参数2 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.GenCmdMessage.P3">
            <summary>
            整数参数3 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.GenCmdMessage.P4">
            <summary>
            整数参数4 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.GenCmdMessage.P5">
            <summary>
            整数参数5 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.GenCmdMessage.SP1">
            <summary>
            字符参数1 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.GenCmdMessage.SP2">
            <summary>
            字符参数2 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.GenCmdMessage.SP3">
            <summary>
            字符参数3 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.GenCmdMessage.SP4">
            <summary>
            字符参数4 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.GenCmdMessage.SP5">
            <summary>
            字符参数5 
            </summary>
        </member>
        <member name="T:PengeSoft.Net.CmdMessageStr">
            <summary>
            CmdMessageStr 数据包只有一字符串，没有采用 DataPacket 格式。
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStr.EmptyPara">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStr.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStr.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStr.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStr.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStr.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageStr.DataStr">
            <summary>
            数据包 
            </summary>
        </member>
        <member name="T:PengeSoft.Net.CmdMessageXml">
            <summary>
            CmdMessageXml 数据包采用DataPacket的Xml值。
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageXml.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageXml.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="T:PengeSoft.Net.CmdHeadAsc1">
            <summary>
            消息头 ASCII 表示, 不支持 DataEnCodeType，DataCompressType
            </summary>
        </member>
        <member name="T:PengeSoft.Net.CmdMessageBaseAsc1">
             <summary>
             CmdMessageBaseAsc1 消息基类, ASCII 表示 
             <remarks>
             使用该类应注意, 应将生成器生成的 Clear() 函数改为 EmptyPara(),如有必要还应重载 ErrorMsg 属性.
             <code>
                public override void EmptyPara()
                {
                    base.EmptyPara();
            
                    ...
                }
             </code>
             </remarks>
             </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc1.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc1.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc1.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc1.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc1.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc1.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc1.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc1.LoadDataFromCmdStream(System.IO.Stream)">
            <summary>
            从流中两段式消息读取的读消息数据函数
            </summary>
            <remarks>
            如果读取没有预先读Head的数据包，必须下正确设置 PkType = PKType.DATA, DataSize 必须清0以按流长度读取。
            <code>
                CmdMsg.PkType = PKType.DATA;
                CmdMsg.DataSize = 0;
                CmdMsg.LoadDataFromCmdStream(stream);
                ...
            </code>
            </remarks>
            <param name="stream"></param>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc1.Head">
            <summary>
            消息头 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc1.MsgID">
            <summary>
            数据包序号
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc1.PkType">
            <summary>
            数据包类型
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc1.UTag">
            <summary>
            用户标识 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc1.Cmd">
            <summary>
            命令码 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc1.ResCode">
            <summary>
            返回值 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc1.EnCodeType">
            <summary>
            加密方式 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc1.CompressType">
            <summary>
            压缩方式 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc1.DataSize">
            <summary>
            消息长度 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc1.EnCodeKey">
            <summary>
            加密字
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc1.EnCoded">
            <summary>
            是否加密
            </summary>
        </member>
        <member name="T:PengeSoft.Net.CmdMessageStrAsc1">
            <summary>
            CmdMessageStrAsc1 消息头采用 ASCII 标准, 数据包只有一字符串，没有采用 DataPacket 格式。
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStrAsc1.EmptyPara">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStrAsc1.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStrAsc1.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStrAsc1.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStrAsc1.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStrAsc1.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageStrAsc1.DataStr">
            <summary>
            数据包 
            </summary>
        </member>
        <member name="T:PengeSoft.Logging.Impl.TraceLoggerFA">
            <summary>
            Trace输出日志类工厂适配器
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.TraceLoggerFA.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.TraceLoggerFA.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            构造函数, 并传入参数。
            </summary>
            <param name="properties">属性表，属性有level,showDateTime,showLogName,dateTimeFormat</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.TraceLoggerFA.CreateNewLogger(System.String,PengeSoft.Logging.LogLevel,System.Boolean,System.Boolean,System.String)">
            <summary>
            创建新的日志接口。
            </summary>
            <param name="logName">日志名称</param>
            <param name="logLevel">日志级别</param>
            <param name="showDateTime">是否在日志中显示时间</param>
            <param name="showLogName">是否在日志中显示日志名称</param>
            <param name="dateTimeFormat">日期格式</param>
            <returns>日志实例接口</returns>
        </member>
        <member name="T:PengeSoft.Logging.Impl.TraceLogger">
            <summary>
            Trace输出日志类
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.TraceLogger.#ctor(System.String,PengeSoft.Logging.LogLevel,System.Boolean,System.Boolean,System.String)">
            <summary>
            构造函数,创建文件输出日志实例。
            </summary>
            <param name="logName">日志名称</param>
            <param name="logLevel">日志级别</param>
            <param name="showDateTime">在日志中包括当前时间</param>
            <param name="showLogName">在日志中包括当前日志名称</param>
            <param name="dateTimeFormat">日志中的日期时间格式</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.TraceLogger.OutputLog(System.String)">
            <summary>
            将日志信息写入Trace。
            </summary>
            <param name="message">日志信息</param>
        </member>
        <member name="T:PengeSoft.Logging.LogLevel">
            <summary>
            定义日志记录的 7 个级别。 
            </summary>
        </member>
        <member name="F:PengeSoft.Logging.LogLevel.All">
            <summary>
            所有均记录
            </summary>
        </member>
        <member name="F:PengeSoft.Logging.LogLevel.Debug">
            <summary>
            调试信息
            </summary>
        </member>
        <member name="F:PengeSoft.Logging.LogLevel.Info">
            <summary>
            Info类信息
            </summary>
        </member>
        <member name="F:PengeSoft.Logging.LogLevel.Warn">
            <summary>
            警告类信息
            </summary>
        </member>
        <member name="F:PengeSoft.Logging.LogLevel.Error">
            <summary>
            出错信息
            </summary>
        </member>
        <member name="F:PengeSoft.Logging.LogLevel.Fatal">
            <summary>
            致命错误
            </summary>
        </member>
        <member name="F:PengeSoft.Logging.LogLevel.Off">
            <summary>
            不做记录
            </summary>
        </member>
        <member name="T:PengeSoft.Data.SplitParam">
            <summary>
            SplitParam 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SplitParam.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SplitParam.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.SplitParam.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.SplitParam.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.SplitParam.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.SplitParam.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.SplitParam.ParentID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.SplitParam.ID1">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.SplitParam.ID2">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.SplitParam.Align">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.SplitParam.Size">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.SplitParam.Sizeable">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.SplitParam.Table1">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.SplitParam.Table2">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.Encryption.Blowfish">
            <summary>
            Class that provides blowfish encryption.
            </summary>
        </member>
        <member name="M:PengeSoft.Encryption.Blowfish.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Constructs and initializes a blowfish instance with the supplied key.
            </summary>
            <param name="key">The key to cipher with.</param>
        </member>
        <member name="M:PengeSoft.Encryption.Blowfish.F(System.UInt32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Encryption.Blowfish.Encipher(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encrypts a byte array in place.
            </summary>
            <param name="data">The array to encrypt.</param>
            <param name="length">The amount to encrypt.</param>
        </member>
        <member name="M:PengeSoft.Encryption.Blowfish.Encipher(System.UInt32@,System.UInt32@)">
            <summary>
            Encrypts 8 bytes of data (1 block)
            </summary>
            <param name="xl">The left part of the 8 bytes.</param>
            <param name="xr">The right part of the 8 bytes.</param>
        </member>
        <member name="M:PengeSoft.Encryption.Blowfish.Decipher(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decrypts a byte array in place.
            </summary>
            <param name="data">The array to decrypt.</param>
            <param name="length">The amount to decrypt.</param>
        </member>
        <member name="M:PengeSoft.Encryption.Blowfish.Decipher(System.UInt32@,System.UInt32@)">
            <summary>
            Decrypts 8 bytes of data (1 block)
            </summary>
            <param name="xl">The left part of the 8 bytes.</param>
            <param name="xr">The right part of the 8 bytes.</param>
        </member>
        <member name="M:PengeSoft.Encryption.BlowfishStream.Flush">
            <summary>
            Flushes the stream.
            </summary>
        </member>
        <member name="M:PengeSoft.Encryption.BlowfishStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read data from the stream and encrypt it.
            </summary>
            <param name="buffer">The buffer to read into.</param>
            <param name="offset">The offset in the buffer to begin storing data.</param>
            <param name="count">The number of bytes to read.</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Encryption.BlowfishStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write data to the stream after decrypting it.
            </summary>
            <param name="buffer">The buffer containing the data to write.</param>
            <param name="offset">The offset in the buffer where the data begins.</param>
            <param name="count">The number of bytes to write.</param>
        </member>
        <member name="M:PengeSoft.Encryption.BlowfishStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Encryption.BlowfishStream.EndRead(System.IAsyncResult)">
            <summary>
            
            </summary>
            <param name="asyncResult"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Encryption.BlowfishStream.ReadComplete(System.IAsyncResult)">
            <summary>
            The Read has completed.
            </summary>
            <param name="result">The result of the async write.</param>
        </member>
        <member name="M:PengeSoft.Encryption.BlowfishStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Encryption.BlowfishStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Move the current stream posistion to the specified location.
            </summary>
            <param name="offset">The offset from the origin to seek.</param>
            <param name="origin">The origin to seek from.</param>
            <returns>The new position.</returns>
        </member>
        <member name="M:PengeSoft.Encryption.BlowfishStream.SetLength(System.Int64)">
            <summary>
            Set the stream length.
            </summary>
            <param name="value">The length to set.</param>
        </member>
        <member name="P:PengeSoft.Encryption.BlowfishStream.CanRead">
            <summary>
            Returns true if the stream support reads.
            </summary>
        </member>
        <member name="P:PengeSoft.Encryption.BlowfishStream.CanSeek">
            <summary>
            Returns true is the stream supports seeks.
            </summary>
        </member>
        <member name="P:PengeSoft.Encryption.BlowfishStream.CanWrite">
            <summary>
            Returns true if the stream supports writes.
            </summary>
        </member>
        <member name="P:PengeSoft.Encryption.BlowfishStream.Length">
            <summary>
            Returns the length of the stream.
            </summary>
        </member>
        <member name="P:PengeSoft.Encryption.BlowfishStream.Position">
            <summary>
            Gets or Sets the posistion of the stream.
            </summary>
        </member>
        <member name="M:ExpertLib.IO.Storage.StorageHelper.ValidateStorageName(System.String)">
             <summary>
             验证Storage或Stream的命名是否正确
             </summary>
             <param name="name"></param>
             <remarks>
             复合文档的流及存储的命名规则
            （1）名称不能超过31字符的长度。
            （2）名称中不能包含！、：、/、\、这些字符。
            （3）不能使用任何Ord(char)小于32的字符作为首字符
             (4) . 和..名称被保留
             </remarks>
        </member>
        <member name="T:PengeSoft.Net.CmdHeadAsc">
            <summary>
            消息头 ASCII 表示 
            </summary>
        </member>
        <member name="T:PengeSoft.Net.CmdMessageBaseAsc">
             <summary>
             CmdMessageBaseAsc 消息基类, ASCII 表示 
             <remarks>
             使用该类应注意, 应将生成器生成的 Clear() 函数改为 EmptyPara(),如有必要还应重载 ErrorMsg 属性.
             <code>
                public override void EmptyPara()
                {
                    base.EmptyPara();
            
                    ...
                }
             </code>
             </remarks>
             </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageBaseAsc.LoadDataFromCmdStream(System.IO.Stream)">
            <summary>
            从流中两段式消息读取的读消息数据函数
            </summary>
            <remarks>
            如果读取没有预先读Head的数据包，必须下正确设置 PkType = PKType.DATA, DataSize 必须清0以按流长度读取。
            <code>
                CmdMsg.PkType = PKType.DATA;
                CmdMsg.DataSize = 0;
                CmdMsg.LoadDataFromCmdStream(stream);
                ...
            </code>
            </remarks>
            <param name="stream"></param>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc.Head">
            <summary>
            消息头 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc.MsgID">
            <summary>
            数据包序号
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc.PkType">
            <summary>
            数据包类型
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc.UTag">
            <summary>
            用户标识 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc.Cmd">
            <summary>
            命令码 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc.ResCode">
            <summary>
            返回值 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc.EnCodeType">
            <summary>
            加密方式 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc.CompressType">
            <summary>
            压缩方式 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc.DataSize">
            <summary>
            消息长度 
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc.EnCodeKey">
            <summary>
            加密字
            </summary>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageBaseAsc.EnCoded">
            <summary>
            是否加密
            </summary>
        </member>
        <member name="T:PengeSoft.Net.CmdMessageStrAsc">
            <summary>
            CmdMessageStrAsc 消息头采用 ASCII 标准, 数据包只有一字符串，没有采用 DataPacket 格式。
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStrAsc.EmptyPara">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStrAsc.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStrAsc.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStrAsc.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStrAsc.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Net.CmdMessageStrAsc.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Net.CmdMessageStrAsc.DataStr">
            <summary>
            数据包 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.TableCompareBase">
            <summary>
            TableCompareBase 的摘要说明。
            </summary>
            <remarks>
            需修改 
            </remarks>
        </member>
        <member name="M:PengeSoft.Data.TableCompareBase.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.TableCompareBase.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.TableCompareBase.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.TableCompareBase.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.TableCompareBase.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.TableCompareBase.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.TableCompareBase.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.TableCompareBase.SynType">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.TableCompareBase.MTblAddAtrs">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.TableCompareBase.DTblAddAtrs">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.UserAction">
            <summary>
            UserAction 用户操作记录的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserAction.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserAction.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserAction.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.UserAction.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserAction.DataVersion">
            <summary>
            数据版本 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserAction.Action">
            <summary>
            操作 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserAction.OpTime">
            <summary>
            操作时间 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.UserAction.LoginId">
            <summary>
            登录名 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.DataAlign">
            <summary>
            数据对齐方式
            </summary>
        </member>
        <member name="F:PengeSoft.Data.DataAlign.tdaLeft">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataAlign.tdaMid">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataAlign.tdaRight">
            <summary></summary>
        </member>
        <member name="T:PengeSoft.Data.DataShow">
            <summary>
            数据显示状态
            </summary>
        </member>
        <member name="F:PengeSoft.Data.DataShow.dsNone">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataShow.dsNormal">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataShow.dsHide">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataShow.dsDelete">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataShow.dsClose">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataShow.dsExpand">
            <summary></summary>
        </member>
        <member name="T:PengeSoft.Data.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="F:PengeSoft.Data.DataType.dtNone">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataType.dtEmpty">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataType.dtSpace">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataType.dtData">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataType.dtSubData">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataType.dtSubTotal">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataType.dtTotal">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataType.dtEnd">
            <summary></summary>
        </member>
        <member name="T:PengeSoft.Data.DataEdit">
            <summary>
            数据编辑标方式
            </summary>
        </member>
        <member name="F:PengeSoft.Data.DataEdit.deNone">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataEdit.deEdit">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DataEdit.deCalc">
            <summary></summary>
        </member>
        <member name="T:PengeSoft.Data.DisplayType">
            <summary>
            数据显示类型
            </summary>
        </member>
        <member name="F:PengeSoft.Data.DisplayType.dstNormal">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DisplayType.dstTree">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DisplayType.dstGraphic">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Data.DisplayType.dstCheck">
            <summary></summary>
        </member>
        <member name="T:PengeSoft.Data.TableField1">
            <summary>
            TableField 为与 Delphi TStrTable 兼容。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.TableField1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:PengeSoft.Data.TableField1.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:PengeSoft.Data.TableField1.XMLEncode(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:PengeSoft.Data.TableField1.XMLDecode(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:PengeSoft.Data.TableField1.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            
            </summary>
            <param name="sou"></param>
        </member>
        <member name="P:PengeSoft.Data.TableField1.Name">
            <summary></summary>
        </member>
        <member name="P:PengeSoft.Data.TableField1.Displaylabel">
            <summary></summary>
        </member>
        <member name="P:PengeSoft.Data.TableField1.Show">
            <summary></summary>
        </member>
        <member name="P:PengeSoft.Data.TableField1.DisplayType">
            <summary></summary>
        </member>
        <member name="P:PengeSoft.Data.TableField1.Align">
            <summary></summary>
        </member>
        <member name="P:PengeSoft.Data.TableField1.DecNum">
            <summary></summary>
        </member>
        <member name="P:PengeSoft.Data.TableField1.Edit">
            <summary></summary>
        </member>
        <member name="P:PengeSoft.Data.TableField1.Width">
            <summary></summary>
        </member>
        <member name="P:PengeSoft.Data.TableField1.FrontColor">
            <summary></summary>
        </member>
        <member name="P:PengeSoft.Data.TableField1.BackColor">
            <summary></summary>
        </member>
        <member name="P:PengeSoft.Data.TableField1.Deep">
            <summary></summary>
        </member>
        <member name="T:PengeSoft.Data.TableField">
            <summary>
            TableField 的摘要说明。
            </summary>
            <remarks>
            TableField 为与 Delphi TStrTable 兼容。 
            </remarks>
        </member>
        <member name="M:PengeSoft.Data.TableField.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.TableField.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.TableField.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.TableField.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.TableField.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.TableField.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.TableField.Name">
            <summary>
            名称 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.TableField.Displaylabel">
            <summary>
            显示标签 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.TableField.Show">
            <summary>
            显示状态 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.TableField.DisplayType">
            <summary>
            显示类型,用于特殊显示 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.TableField.Align">
            <summary>
            对齐方式 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.TableField.DecNum">
            <summary>
            小数位数 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.TableField.Edit">
            <summary>
            修改状态 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.TableField.Width">
            <summary>
            宽度 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.TableField.FrontColor">
            <summary>
            前景 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.TableField.BackColor">
            <summary>
            背景 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.TableField.Deep">
            <summary>
            表头层次 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.GridTable">
            <summary>
            GridTable 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GridTable.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GridTable.Get_StatusSetSet(System.Int32)">
            <summary>
            设位集: 状态 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.Data.GridTable.Set_StatusSetSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 状态 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.Data.GridTable.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GridTable.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GridTable.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GridTable.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.GridTable.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.GridTable.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.GridTable.StatusSet">
            <summary>
            状态 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GridTable.Fields">
            <summary>
            字段表 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.StrTable">
            <summary>
            StrTable 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StrTable.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StrTable.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StrTable.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.StrTable.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.StrTable.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.StrTable.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.StrTable.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.StrTable.recs">
            <summary>
            记录表 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.StrTableN">
            <summary>
            StrTableN 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StrTableN.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StrTableN.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StrTableN.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.StrTableN.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.StrTableN.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.StrTableN.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.StrTableN.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.StrTableN.recs">
            <summary>
            记录表 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.StrTable1">
            <summary>
            StrTable 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StrTable1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StrTable1.NewChild">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.StrTable1.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:PengeSoft.Data.StrTable1.XMLEncode(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:PengeSoft.Data.StrTable1.XMLDecode(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:PengeSoft.Data.StrTable1.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            
            </summary>
            <param name="sou"></param>
        </member>
        <member name="M:PengeSoft.Data.StrTable1.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.StrTable1.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.StrTable1.Recs">
            <summary></summary>
        </member>
        <member name="T:PengeSoft.Data.AdvStrTbl">
            <summary>
            AdvStrTbl 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.AdvStrTbl.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.AdvStrTbl.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.AdvStrTbl.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.AdvStrTbl.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.AdvStrTbl.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.AdvStrTbl.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTbl.ExpandIndex">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTbl.CloseIndex">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTbl.NoChildIndex">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTbl.ExpandIndexs">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTbl.CloseIndexs">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTbl.NoChildIndexs">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTbl.VirtualLine">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.Data.AdvStrTblN">
            <summary>
            AdvStrtblN 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.AdvStrTblN.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.AdvStrTblN.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.AdvStrTblN.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.AdvStrTblN.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.AdvStrTblN.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.AdvStrTblN.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTblN.ExpandIndex">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTblN.CloseIndex">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTblN.NoChildIndex">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTblN.ExpandIndexs">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTblN.CloseIndexs">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTblN.NoChildIndexs">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AdvStrTblN.VirtualLine">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.Data.ParaCell">
            <summary>
            ParaCell 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.ParaCell.Get_TypeSet(System.Int32)">
            <summary>
            设位集: 表达式类型 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.Data.ParaCell.Set_TypeSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 表达式类型 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.Data.ParaCell.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.ParaCell.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.ParaCell.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.ParaCell.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.ParaCell.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.ParaCell.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.ParaCell.Express">
            <summary>
            表达式 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.ParaCell.Value">
            <summary>
            数值 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.ParaCell.Type">
            <summary>
            表达式类型 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.ParaList">
            <summary>
            ParaList 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.ParaList.CreateNewItem">
            <summary>
            创建新Item实例
            </summary>
            <returns></returns>
        </member>
        <member name="T:PengeSoft.Data.GenStrRec">
            <summary>
            GenStrRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GenStrRec.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GenStrRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GenStrRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GenStrRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GenStrRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.GenStrRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.GenStrRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.RowType">
            <summary>
            行类型 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.IData">
            <summary>
            整型参数 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.RData">
            <summary>
            实型参数 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.Srow">
            <summary>
            显示行号 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.xh">
            <summary>
            序号 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.xmmc1">
            <summary>
            项目名称1 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.xmmc2">
            <summary>
            项目名称2 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.jss">
            <summary>
            计算式 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.zje">
            <summary>
            总金额 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.cs1">
            <summary>
            参数1 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.cs2">
            <summary>
            参数2 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.bz">
            <summary>
            备注 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.Cols">
            <summary>
            列参数列表 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.ColCount">
            <summary>
            列数 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.BkColor">
            <summary>
            背景 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrRec.FrColor">
            <summary>
            前景 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.GenStrtbl">
            <summary>
            GenStrtbl 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GenStrtbl.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GenStrtbl.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GenStrtbl.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GenStrtbl.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GenStrtbl.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.GenStrtbl.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.GenStrtbl.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.GenStrtbl.FixCols">
            <summary>
            固定列数 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrtbl.RemS">
            <summary>
            保留 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrtbl.RemD">
            <summary>
            保留 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GenStrtbl.StyleRec">
            <summary>
            风格记录 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SaveDataPage.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.SaveDataPage.LoadDataStream(System.IO.Stream,System.Int32)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="T:PengeSoft.Data.ObjManager">
            <summary>
            预算通数据对象管理，所有AllDoc、Doc、表格对象、需动态调入的数据对象均要注册。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.ObjManager.#ctor">
            <summary>
            构造函数，设为私有不允许实例化。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.ObjManager.Registe(System.Int32,System.Type)">
            <summary>
            注册对象，不允许重复
            </summary>
            <param name="typeid"></param>
            <param name="type"></param>
        </member>
        <member name="M:PengeSoft.Data.ObjManager.RegisteEx(System.Int32,System.Type)">
            <summary>
            注册对象，允许重复注册。
            </summary>
            <param name="typeid"></param>
            <param name="type"></param>
        </member>
        <member name="M:PengeSoft.Data.ObjManager.UnRegiste(System.Int32)">
            <summary>
            取消注册
            </summary>
            <param name="typeid"></param>
        </member>
        <member name="M:PengeSoft.Data.ObjManager.ClearRegistes">
            <summary>
            清除注册
            </summary>
        </member>
        <member name="P:PengeSoft.Data.ObjManager.EnabledCreateTable">
            <summary>
            允许 LoadTableFromStream 函数在 CreateTable 时使用表格类型号(TableType), 将此属性置为 false 后，所有调入的表格均为 <see cref="T:PengeSoft.Data.SaveDataPage"/> 。
            该属性缺省值为 True, 修改该属性后一定要改回缺省值，放到 try...finally 中。
            </summary>
        </member>
        <member name="T:PengeSoft.Data.Doc">
            <summary>
            Doc 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.Doc.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.Doc.Get_StatusSetSet(System.Int32)">
            <summary>
            设位集: 状态字 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.Data.Doc.Set_StatusSetSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 状态字 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.Data.Doc.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.Doc.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.Doc.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.Doc.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.Doc.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.Doc.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.Doc.DocType">
            <summary>
            文档类型(不保存) 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.FileID">
            <summary>
            表格标识 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.Name">
            <summary>
            名称 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.Attrib">
            <summary>
            属性 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.Level">
            <summary>
            层次 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.CurPageNo">
            <summary>
            当前表格号 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.CurGroupNo">
            <summary>
            当前组号 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.DocID">
            <summary>
            文档标识 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.StatusSet">
            <summary>
            状态字 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.IncludeTables">
            <summary>
            含表格 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.ShowStatus">
            <summary>
            显示状态 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.AttribsText">
            <summary>
            属性 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.Remi">
            <summary>
            保留 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.CompressType">
            <summary>
            压缩类型 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.Tables">
            <summary>
            表格列表 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Doc.LoadedTables">
            <summary>
            表格以调入(Runtime) 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.AllDoc">
            <summary>
            AllDoc 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.AllDoc.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.AllDoc.Get_StatusSetSet(System.Int32)">
            <summary>
            设位集: 状态字 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.Data.AllDoc.Set_StatusSetSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 状态字 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.Data.AllDoc.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.AllDoc.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.AllDoc.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.AllDoc.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.AllDoc.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.AllDoc.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.AllDoc.TypeID">
            <summary>
            文档类型(不保存) 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AllDoc.AllDocID">
            <summary>
            AllDoc标识 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AllDoc.StatusSet">
            <summary>
            状态字 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AllDoc.AttribsText">
            <summary>
            属性 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AllDoc.Remi">
            <summary>
            保留 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AllDoc.SysDoc">
            <summary>
            系统Doc 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AllDoc.Docs">
            <summary>
            文档列表 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.AllDoc.IncludeTables">
            <summary>
            含表格 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.GcSysInfo">
            <summary>
            GcSysInfo 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GcSysInfo.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GcSysInfo.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GcSysInfo.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GcSysInfo.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GcSysInfo.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.GcSysInfo.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.GcSysInfo.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.GcSysInfo.GcID">
            <summary>
            工程标识 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GcSysInfo.gcmc">
            <summary>
            工程名称 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GcSysInfo.pwd">
            <summary>
            口令 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GcSysInfo.pwd1">
            <summary>
            口令1 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GcSysInfo.Status">
            <summary>
            状态 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.SjDoc">
            <summary>
            SjDoc 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SjDoc.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SjDoc.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SjDoc.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.SjDoc.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.SjDoc.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.SjDoc.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.SjDoc.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.SjDoc.Gcsys">
            <summary>
            工程系统信息 
            </summary>
        </member>
        <member name="T:PengeSoft.Common.GenCacheItem`1">
            <summary>
            通用资源Cache的缓冲对象
            </summary>
        </member>
        <member name="M:PengeSoft.Common.GenCacheItem`1.#ctor(System.Double,`0)">
            <summary>
            构造函数，生成Cache项实例
            </summary>
            <param name="validtime"></param>
            <param name="val"></param>
        </member>
        <member name="M:PengeSoft.Common.GenCacheItem`1.SetValidtime(System.Double)">
            <summary>
            修改有效时间
            </summary>
            <param name="validtime"></param>
        </member>
        <member name="T:PengeSoft.Common.ResoureManager`1">
            <summary>
            带Cache的资源管类, 使用该类需注意，当管理的资源为C#对象，为引用类型时，
            任何对取出资源的修改均会影响Cache，除非重载 GetResourceCopy() 。
            添加的到Cache 中的资源也为引用，除非重载 GetCacheItem() 添加的到Cache中的资源复制为附本。
            </summary>
        </member>
        <member name="M:PengeSoft.Common.ResoureManager`1.#ctor">
            <summary>
            构造函数，缺省资源有效时间为600秒
            </summary>
        </member>
        <member name="M:PengeSoft.Common.ResoureManager`1.#ctor(System.Double)">
            <summary>
            构造函数，指定资源有效时间，单位秒
            </summary>
            <param name="validtime"></param>
        </member>
        <member name="M:PengeSoft.Common.ResoureManager`1.#ctor(System.Double,System.Boolean)">
            <summary>
            构造函数，指定资源有效时间，单位秒
            </summary>
            <param name="validtime"></param>
            <param name="extendvalid"></param>
        </member>
        <member name="M:PengeSoft.Common.ResoureManager`1.LoadResource(System.String,`0@)">
            <summary>
            根据key调入资源
            </summary>
            <param name="key">关键字</param>
            <param name="value">资源值</param>
            <returns>是否成功调入</returns>
        </member>
        <member name="M:PengeSoft.Common.ResoureManager`1.AddCache(System.String,`0)">
            <summary>
            向Cache中添加资源
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:PengeSoft.Common.ResoureManager`1.GetCacheItem(`0)">
            <summary>
            形成Cache条目
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Common.ResoureManager`1.GetResourceCopy(`0@)">
            <summary>
            取得资源附本，本函数没有实现附本功能。
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PengeSoft.Common.ResoureManager`1.FindResource(System.String,`0@)">
            <summary>
            查找资源
            </summary>
            <param name="key">关键字</param>
            <param name="value">资源值</param>
            <returns>成功与否</returns>
        </member>
        <member name="M:PengeSoft.Common.ResoureManager`1.GetResource(System.String,`0@)">
            <summary>
            取资源，与FindResource()的差另在于如果找不到，会调用LoadResource()
            </summary>
            <param name="key">关键字</param>
            <param name="value">资源值</param>
            <returns>成功与否</returns>
        </member>
        <member name="M:PengeSoft.Common.ResoureManager`1.AddResource(System.String,`0)">
            <summary>
            添加资源
            </summary>
            <param name="key">关键字</param>
            <param name="value">资源值</param>
        </member>
        <member name="M:PengeSoft.Common.ResoureManager`1.ReleaseResource(System.String)">
            <summary>
            释放资源
            </summary>
            <param name="key">关键字</param>
        </member>
        <member name="M:PengeSoft.Common.ResoureManager`1.ReleaseAll">
            <summary>
            释放全部资源
            </summary>
        </member>
        <member name="M:PengeSoft.Common.ResoureManager`1.ClearTimeout">
            <summary>
            释放超时资源
            </summary>
        </member>
        <member name="P:PengeSoft.Common.ResoureManager`1.Validtime">
            <summary>
            资源有效时间
            </summary>
        </member>
        <member name="P:PengeSoft.Common.ResoureManager`1.Extendvalid">
            <summary>
            访问资源时自动延长有效时间
            </summary>
        </member>
        <member name="P:PengeSoft.Common.ResoureManager`1.AutoCheckInv">
            <summary>
            自动检查资源有效时间间隔
            </summary>
        </member>
        <member name="P:PengeSoft.Common.ResoureManager`1.AutoCheck">
            <summary>
            自动检查资源有效时间
            </summary>
        </member>
        <member name="P:PengeSoft.Common.ResoureManager`1.AlawysValid">
            <summary>
            访问时资源始终有效, 不受 Validtime 影响。
            </summary>
        </member>
        <member name="E:PengeSoft.Common.ResoureManager`1.OnLoadResource">
            <summary>
            找不到时调入资源
            </summary>
        </member>
        <member name="T:PengeSoft.Common.SysUtils">
            <summary>
            常用共用函数
            </summary>
        </member>
        <member name="M:PengeSoft.Common.SysUtils.ID15T18(System.String)">
            <summary>
            将15位身份证号转为18位
            </summary>
            <param name="strTemp">将15位身份证号</param>
            <returns>18位身份证号</returns>
        </member>
        <member name="M:PengeSoft.Common.SysUtils.GetPasswordHash(System.String)">
            <summary>
            取得口令的Hash值，与RightCheckTCP配套。
            </summary>
            <param name="Password"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Common.SysUtils.GetObjProperty(System.Object,System.String,System.Object@)">
            <summary>
            访问对象公共属性或字段值
            </summary>
            <param name="obj"></param>
            <param name="propName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Common.SysUtils.GetObjProperty(System.Object,System.String,System.Object[],System.Object@)">
            <summary>
            访问对象公共属性或字段值,可访问索引
            </summary>
            <param name="obj"></param>
            <param name="propName"></param>
            <param name="index"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Common.SysUtils.GetIntArray(System.Byte[])">
            <summary>
            将buf中的二进制方式数据转为int数组
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Common.SysUtils.MakeFullPath(System.String)">
            <summary>
            返回指定目录字符串的绝对路径。并确保最后一字符为'\'
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Common.SysUtils.EncodeBase64(System.String)">
            <summary>
            Base64加码, 二进制为 UTF-8
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Common.SysUtils.DecodeBase64(System.String)">
            <summary>
            Base64解码, 二进制为 UTF-8
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:ExpertLib.DateTimeConvert">
            <summary>
            时间转换类
            </summary>
            <remarks>用于FILETIME与DateTime的转换</remarks>
        </member>
        <member name="M:ExpertLib.DateTimeConvert.ToFILETIME(System.DateTime)">
            <summary>
            将DateTime转换成FILETIME结构
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:ExpertLib.DateTimeConvert.ToDateTime(System.Runtime.InteropServices.ComTypes.FILETIME)">
            <summary>
            将FILETIME转换成DateTime
            </summary>
            <param name="ft"></param>
            <returns></returns>
        </member>
        <member name="T:ExpertLib.ValueConvert">
            <summary>
            常见的数值转换，就是内存表示相同，而可能各表示的值不一样
            </summary>
            <remarks>
            如int 型与uint型在内存空间里是一样大小，而可能表示的值是不一样的，但是我们可以
            通过以下的函数进行转换，而不需要用到CopyMemory之类的函数
            </remarks>
        </member>
        <member name="M:ExpertLib.ValueConvert.ToInt32(System.UInt32)">
            <summary>
            uint 转成内存表示相同的int
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:ExpertLib.HRESULT">
            <summary>
            一些用于HRESULT类型的常用值
            </summary>
        </member>
        <member name="F:ExpertLib.HRESULT.S_OK">
            <summary>
            表示成功
            </summary>
        </member>
        <member name="F:ExpertLib.HRESULT.S_FALSE">
            <summary>
            表示失败
            </summary>
        </member>
        <member name="T:ExpertLib.ArgumentValidation">
            <summary>
            参数验证类
            </summary>
        </member>
        <member name="M:ExpertLib.ArgumentValidation.CheckForEmptyString(System.String,System.String)">
            <summary>
            检查是否空字符
            </summary>
            <param name="variable"></param>
            <param name="variableName"></param>
        </member>
        <member name="M:ExpertLib.ArgumentValidation.CheckForNullReference(System.Object,System.String)">
            <summary>
            检查参数是否NULL引用
            </summary>
            <param name="variable"></param>
            <param name="variableName"></param>
        </member>
        <member name="M:ExpertLib.ArgumentValidation.CheckForZeroBytes(System.Byte[],System.String)">
            <summary>
            验证所传的字节数组是否为空或零长
            </summary>
            <param name="bytes"></param>
            <param name="variableName"></param>
        </member>
        <member name="M:ExpertLib.ArgumentValidation.CheckForZeroArray``1(``0[],System.String)">
            <summary>
            检查参数是否零长的数组或空值，如是则抛出一个异常
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="paraName"></param>
        </member>
        <member name="M:ExpertLib.ArgumentValidation.CheckExpectedType(System.Object,System.Type)">
            <summary>
            验证一个值是否期待的类型
            </summary>
            <param name="variable">对象值</param>
            <param name="type">期待的类型</param>
        </member>
        <member name="M:ExpertLib.ArgumentValidation.CheckEnumeration(System.Type,System.Object,System.String)">
            <summary>
            验证一个值是不是枚举类型的可选值
            </summary>
            <param name="enumType">枚举类型</param>
            <param name="variable">验证的变量</param>
            <param name="variableName">变量的名称</param>
        </member>
        <member name="M:ExpertLib.ArgumentValidation.CheckValueLimit``1(``0,System.String,``0,``0)">
            <summary>
            检测一个值是否在合理的数据范围内
            </summary>
            <typeparam name="T">只支持具有IComparable接口的对象</typeparam>
            <param name="value">要检可的值</param>
            <param name="paraName">参数名称</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:ExpertLib.ArgumentValidation.CheckValueMinLimit``1(``0,System.String,``0)">
            <summary>
            检测一个值是否小于最小值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="paraName"></param>
            <param name="min">最小充许值</param>
        </member>
        <member name="M:ExpertLib.ArgumentValidation.CheckValueMaxLimit``1(``0,System.String,``0)">
            <summary>
            检测一个值是否大于最大值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="paraName"></param>
            <param name="max">最大值</param>
        </member>
        <member name="M:ExpertLib.ArgumentValidation.CheckRegExpression(System.String,System.String)">
            <summary>
            测试一个字符串是否合法的正达表达式.
            </summary>
            <param name="expression">需要测试的表达式</param>
            <param name="paramName">参数名称</param>
        </member>
        <member name="T:PengeSoft.db.QueryDataList">
            <summary>
            QueryDataList 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.db.QueryDataList.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.db.QueryDataList.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.db.QueryDataList.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.db.QueryDataList.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.db.QueryDataList.TotalCount">
            <summary>
            总记录数 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.GroupTableRec">
            <summary>
            GroupTableRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GroupTableRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GroupTableRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GroupTableRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GroupTableRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.GroupTableRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.GroupTableRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.GroupTableRec.TableName">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GroupTableRec.Deep">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.MsgQueue">
            <summary>
            MsgQueue 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.MsgQueue.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.MsgQueue.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.MsgQueue.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.MsgQueue.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.MsgQueue.MsgID">
            <summary>
            消息ID 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.MsgQueue.Status">
            <summary>
            状态 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.DataEndeCoding">
            <summary>
            与Delphi兼容的编码/解码
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DataEndeCoding.IdEncoder64(System.String)">
            <summary>
            与Delphi兼容的Base64(IdEncoder64)编码
            </summary>
            <param name="Str"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataEndeCoding.IdDecoder64(System.String)">
            <summary>
            与Delphi兼容的Base64(IdDecoder64)解码
            </summary>
            <param name="Str"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataEndeCoding.EncodeStr(System.String,System.String)">
            <summary>
            字符串加码
            </summary>
            <param name="Key"></param>
            <param name="Str"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataEndeCoding.DecodeStr(System.String,System.String)">
            <summary>
            字符串解码
            </summary>
            <param name="Key"></param>
            <param name="Str"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataEndeCoding.EncodeDataStr(System.String,System.String,System.Boolean)">
            <summary>
            字符串加码
            </summary>
            <param name="Key"></param>
            <param name="Str"></param>
            <param name="Compress"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataEndeCoding.EncodeDataStr(System.String,System.String)">
            <summary>
            字符串加码
            </summary>
            <param name="Key"></param>
            <param name="Str"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.DataEndeCoding.DecodeDataStr(System.String,System.String)">
            <summary>
            字符串解码
            </summary>
            <param name="Key"></param>
            <param name="Str"></param>
            <returns></returns>
        </member>
        <member name="T:PengeSoft.Data.PsCoreException">
            <summary>
            核心代码异常定义
            </summary>
        </member>
        <member name="M:PengeSoft.Data.PsCoreException.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:PengeSoft.Data.PsCoreException.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            <param name="message">异常消息</param>
        </member>
        <member name="M:PengeSoft.Data.PsCoreException.#ctor(System.String,System.Exception)">
            <summary>
            构造方法
            </summary>
            <param name="message">异常消息</param>
            <param name="inner">引发此异常的异常</param>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.RIGHT_READ">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.RIGHT_WRITE">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.RIGHT_READWRITE">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.RIGHT_ADMIN">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.UserId_Admini">
            <summary>管理员标识</summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.UserName_Admini">
            <summary>管理员登录名称</summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GROUP_ID">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GROUP_ADMI">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GROUP_SVR">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GROUP_POWER">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GROUP_USER">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GROUP_GUEST">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GROUP_USERSTART">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GPName_Admi">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GPName_Servers">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GPName_Powers">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GPName_Users">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GPName_Guests">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.UATL_DETAIL">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.UATL_MID">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.UATL_LITTLE">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.UTAL_ONLYID">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.UTAL_LEVELMASK">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.UATL_ONLINESTAT">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.UATL_INCLUDESID">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.UATL_INCLUDEHIDE">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GATL_DETAIL">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GATL_LITTLE">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GATL_LEVELMASK">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GATL_GETDEPT">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GATL_GETByID">
            <summary>取 Tag 指定组号的组信息</summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GATL_IncludeUID">
            <summary>信息中含用户LoginID表</summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GATL_IncludeChilds">
            <summary>取 Tag 指定组及下一级组信息</summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GATL_OnlyChilds">
            <summary>仅取 Tag 指定组号的下一级组信息</summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GATL_AllChilds">
            <summary>递归取出所有子组</summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GATL_IncludeSys">
            <summary>取出系统组</summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.ACTL_DETAIL">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.ACTL_LITTLE">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.ACTL_LEVELMASK">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.ACTL_GETBYNODE">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.ACTL_INPARNODE">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GURT_NORMAL">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GURT_GROUP">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GURT_DETAIL">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.UST_ONLINE">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.ISAS_AUTOLOGOUT">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GUPOP_UserExclusive">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.ACTGR_Inherited">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.ACTGR_GetRightMask">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GSID_ID">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.GSID_NAME">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.DTAO_AddSub">
            <summary></summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherConst.DTAO_Insert">
            <summary></summary>
        </member>
        <member name="T:PengeSoft.Auther.RightCheck.AutherCheckResult">
            <summary>
            权限管理程序出错码定义
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_SUCESS">
            <summary>
            操作成功
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_FAULT">
            <summary>
            操作失败
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_NOTFIND">
            <summary>
            未找到数据
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_NOTLOGIN">
            <summary>
            用户未注册
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_NORIGHT">
            <summary>
            用户没有该权限
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_USEREXISTS">
            <summary>
            用户帐户已存在
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_LOGINED">
            <summary>
            已经登陆
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_OVERTIME">
            <summary>
            失效
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_OLDPWDINCORRECT">
            <summary>
            密码不正确。密码必须正确的大小写。
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_SEVERNOTSRART">
            <summary>
            服务器没有启动
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_NOACTION">
            <summary>
            权限不存在
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_EXPIRE">
            <summary>
            功能到期
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_ACCOUNTLEST">
            <summary>
            帐户余额不足
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_INVALIDIP">
            <summary>
            无效IP地址
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_INVALIDMAC">
            <summary>
            无效MAC地址
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_INVALIDSN">
            <summary>
            无效锁号
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_INVALIDHDID">
            <summary>
            无效HDD标识
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_INVALIDUID">
            <summary>
            无效用户标识
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_INVALIDDATE">
            <summary>
            无效日期
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_OVERMAXCNT">
            <summary>
            超过最大用户数
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_UNKNOW">
            <summary>
            未知错误
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_NET">
            <summary>
            网络通讯错
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_LOGINFAIL">
            <summary>
            用户名称或口令不正确
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_UNKNOWINTF">
            <summary>
            未知接口
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_UNKNOWCMD">
            <summary>
            未知命令
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_UNSUPPORT">
            <summary>
            不支持命令
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_BUSY">
            <summary>
            没有空TCP线程
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_TIMEOUT">
            <summary>
            操作超时
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_ERRSERVER">
            <summary>
            联接服务器错
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_DBFAIL">
            <summary>
            数据库操作错
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_ATRSECRET">
            <summary>
            属性保密
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_NONEWDATA">
            <summary>
            没有新数据
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_USERNOTEXISTS">
            <summary>
            用户不存在
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_InvalidPath">
            <summary>
            无效路径
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_VerWrong">
            <summary>
            文件版本冲突
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_DataExists">
            <summary>
            数据已存在
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_WrongParam">
            <summary>
            错误的参数
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_NoServer">
            <summary>
            没找到服务器
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_WrongKeySN">
            <summary>
            锁号错误
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_InvalidPassword">
            <summary>
            无效口令
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_WrongEMail">
            <summary>
            无效的EMail地址
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_OverPwdLimit">
            <summary>
            申请口令超过每日限制
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_OptionException">
            <summary>
            操作发生异常
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_ActExists">
            <summary>
            权限已存在
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_ServerBusy">
            <summary>
            服务器忙
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_FileLocked">
            <summary>
            文件被其他用户锁定
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_OffLine">
            <summary>
            用户离线
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_NotFindNode">
            <summary>
            未找到节点
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_HaveChild">
            <summary>
            有子节点，不能删除
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_ServerException">
            <summary>
            服务调用出错
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_ServerRegistered">
            <summary>
            服务已被其他用户注册
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_OptionBreak">
            <summary>
            操作被中断
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_IMStartFail">
            <summary>
            IM启动失败
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_CopyFile">
            <summary>
            复制文件失败
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_ReceiveAttach">
            <summary>
            接收附件失败
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_AttachCache">
            <summary>
            附件Cache失败
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_NotOpenService">
            <summary>
            服务未开通
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_NOOPENRIGHT">
            <summary>
            没开通服务的权限
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_UnactivedAccount">
            <summary>
            未激活帐号
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_NotSysAutherServer">
            <summary>
            系统权限服务未定义
            </summary>
        </member>
        <member name="F:PengeSoft.Auther.RightCheck.AutherCheckResult.OP_SysAutherNotActive">
            <summary>
            系统权限服务未登录
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.RightCheck.AutherCheckResult.GetOptionMessage(System.Int32)">
            <summary>
            得到操作出错信息
            </summary>
            <param name="retCode">返回代码</param>
            <returns>成功返空，否则返回错误信息</returns>
        </member>
        <member name="M:PengeSoft.Auther.RightCheck.AutherCheckResult.GetErrorMessage(System.Int32)">
            <summary>
            得到错误消息
            </summary>
            <param name="exceptionNumber">错误代码</param>
            <returns>错误消息</returns>
        </member>
        <member name="M:PengeSoft.Auther.RightCheck.AutherCheckResult.CheckResult(System.Int32)">
            <summary>
            检返回值，如果是出错则产生<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckException"/>异常。
            </summary>
            <param name="n">操作返回值</param>
        </member>
        <member name="M:PengeSoft.Auther.RightCheck.AutherCheckResult.CheckResult(System.Int32,System.String)">
            <summary>
            检返回值，如果是出错则产生<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckException"/>异常, 并指定异常出错信息
            </summary>
            <param name="n">操作返回值</param>
            <param name="errMsg">出错时的出错信息</param>
        </member>
        <member name="T:PengeSoft.Auther.RightCheck.AutherCheckException">
            <summary>
            权限操作过程中产生的异常
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.RightCheck.AutherCheckException.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.RightCheck.AutherCheckException.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            <param name="message">异常消息</param>
        </member>
        <member name="M:PengeSoft.Auther.RightCheck.AutherCheckException.#ctor(System.String,System.Exception)">
            <summary>
            构造方法
            </summary>
            <param name="message">异常消息</param>
            <param name="inner">引发此异常的异常</param>
        </member>
        <member name="M:PengeSoft.Auther.RightCheck.AutherCheckException.#ctor(System.Int32,System.Exception)">
            <summary>
            构造方法
            </summary>
            <param name="exceptionNumber">自定义的异常编号</param>
            <param name="inner">引发此异常的异常</param>
        </member>
        <member name="M:PengeSoft.Auther.RightCheck.AutherCheckException.#ctor(System.Int32)">
            <summary>
            构造方法
            </summary>
            <param name="exceptionNumber">自定义的异常编号</param>
        </member>
        <member name="M:PengeSoft.Auther.RightCheck.AutherCheckException.#ctor(System.Int32,System.String)">
            <summary>
            构造方法
            </summary>
            <param name="exceptionNumber">自定义的异常编号</param>
            <param name="message">异常消息</param>
        </member>
        <member name="M:PengeSoft.Auther.RightCheck.AutherCheckException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            使用指定错误信息和对作为此异常原因的内部异常的引用来初始化 AutherCheckException 类的新实例。
            </summary>
            <param name="info">保存序列化对象数据的对象。</param>
            <param name="context">有关源或目标的上下文信息。<see cref="T:System.Runtime.Serialization.StreamingContext"/></param>
        </member>
        <member name="P:PengeSoft.Auther.RightCheck.AutherCheckException.ExceptionNumber">
            <summary>
            自定义错误编号
            </summary>
        </member>
        <member name="F:PengeSoft.Data.SL.DataPacket.PS_DATANODE_ID">
            <summary>
            DataPacketSL序列化时的节点名称
            </summary>
        </member>
        <member name="F:PengeSoft.Data.SL.DataPacket.StringArraySplit">
            <summary>
            StringArray序列化时的分隔符 (char)10
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.DataPacket.XmlEncodeElement(System.Xml.XmlWriter)">
            <summary>
            序列化实体类属性，重载该函数必须返回 true 以取消用反射序列化。
            </summary>
            <param name="writer">XmlWriter对象</param>
            <returns>返回 true 以取消用反射序列化。</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataPacket.XmlEncodeAttrib(System.Xml.XmlWriter)">
            <summary>
            序列化属性类属性，重载该函数必须返回 true 以取消用反射序列化。
            </summary>
            <param name="writer">XmlWriter对象</param>
            <returns>返回 true 以取消用反射序列化。</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataPacket.XmlSetElement(System.Xml.XmlReader,System.String)">
            <summary>
            反列化实体类属性，重载可用非反射方式处理。
            </summary>
            <param name="writer">XmlWriter对象</param>
            <returns>返回 true 表示该节点被处理。</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataPacket.AssignFrom(PengeSoft.Data.SL.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacketSL继承</param>
        </member>
        <member name="T:PengeSoft.Data.SL.DataList">
            <summary>
            从DataPacketSL派生，实现数据集合管理。此类为虚类，不能实例化。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.Clear">
            <summary>
            清除DataListSL中所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.AssignFrom(PengeSoft.Data.SL.DataPacket)">
            <summary>
            将一个 PengeSoft.Data.DataListSL 中元素附本复制到现有集合, 元素必须是 DataPacketSL 。
            </summary>
            <param name="sou">被复制的 PengeSoft.Data.DataListSL</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.Add(PengeSoft.Data.SL.DataPacket)">
            <summary>
            将元素添加到 PengeSoft.Data.DataListSL 中。如果 AutoGenID 属性为 true, 则产生RID,并自动增加。
            </summary>
            <param name="item">要添加到集合的 DataPacketSL 元素</param>
            <returns>新元素的插入位置</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.AddNew">
            <summary>
            创建一个 ItemType 指定的新元素并添加到 PengeSoft.Data.ObjList 中， 要求 ItemType 必须不为 null。
            如果 AutoGenID 属性为 true, 则产生RID,并自动增加。
            </summary>
            <returns>新元素的插入位置</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.Insert(System.Int32,PengeSoft.Data.SL.DataPacket)">
            <summary>
             将一个新元素插入指定索引处的 PengeSoft.Data.DataListSL。
            如果 AutoGenID 属性为 true, 则产生RID,并自动增加。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="item">要插入 PengeSoft.Data.DataListSL 中的 DataPacketSL 元素。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.AddFrom(System.Collections.ICollection)">
            <summary>
            从一个集合中添加元素引用，并不复制元素。要求元素必须是 DataPacketSL
            </summary>
            <param name="c">源集合</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.AddCopyFrom(System.Collections.ICollection)">
            <summary>
            从一个集合中添加元素附本(复制元素)。要求元素必须是 DataPacketSL
            </summary>
            <param name="c">源集合</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.Sort(System.Collections.IComparer)">
            <summary>
            使用指定的比较器对整个 PengeSoft.Data.DataListSL 中的字符串进行排序。
            </summary>
            <param name="comparer">比较元素时要使用的 System.Collections.IComparer 实现。若为 null，则使用则使用每个元素的 System.IComparable</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            使用指定的比较器对 PengeSoft.Data.DataListSL 中某个范围内的元素进行排序。
            </summary>
            <param name="index">要排序的范围的从零开始的起始索引。</param>
            <param name="count">要排序的范围的长度。</param>
            <param name="comparer">比较元素时要使用的 System.Collections.IComparer 实现。若为 null，则使用则使用每个元素的 System.IComparable</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.CreateNewItem">
            <summary>
            根据ItemType创建一个新 DataPacketSL 元素
            </summary>
            <returns>新 DataPacketSL 元素, 如果 ItemType 为 null 则返回 null。</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.GetItemType">
            <summary>
            取得ItemType的虚函数, 如果未设ItemType且有元素存在，则取第一个元素类型
            </summary>
            <returns>ItemType</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.GetItems(System.Int32)">
            <summary>
             获取指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的 DataPacketSL 元素。</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.SetItems(System.Int32,PengeSoft.Data.SL.DataPacket)">
            <summary>
             设置指定索引处的元素。
            </summary>
            <param name="Index">要获得或设置的元素从零开始的索引。</param>
            <param name="value">指定的 DataPacketSL 元素。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.GetCount">
            <summary>
            获取 PengeSoft.Data.DataListSL 中实际包含的元素数。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.ClearItems">
            <summary>
            清除 PengeSoft.Data.DataListSL 中的所有元素。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.AddItem(PengeSoft.Data.SL.DataPacket)">
            <summary>
            将元素添加到 PengeSoft.Data.DataListSL 中。
            </summary>
            <param name="item">要添加到集合的 DataPacketSL 元素</param>
            <returns>新元素的插入位置</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.InsertItem(System.Int32,PengeSoft.Data.SL.DataPacket)">
            <summary>
             将一个新元素插入指定索引处的 PengeSoft.Data.DataListSL。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="item">要插入 PengeSoft.Data.DataListSL 中的 DataPacketSL 元素。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.Delete(System.Int32)">
            <summary>
            移除指定索引处的 PengeSoft.Data.DataListSL 项。
            </summary>
            <param name="index">从零开始的索引（属于要移除的项）。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.UpdateItem(PengeSoft.Data.SL.DataPacket)">
            <summary>
             更新 PengeSoft.Data.DataListSL 中的元素。如元素不存在，则添加新元素(Add方式)。
            </summary>
            <param name="item">要更新的 DataPacketSL 元素。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.IndexOf(PengeSoft.Data.SL.DataPacket)">
            <summary>
            确定 PengeSoft.Data.DataListSL 中特定元素的索引。
            </summary>
            <param name="item">要在 PengeSoft.Data.DataListSL 中查找的 DataPacketSL 元素。</param>
            <returns>如果在列表中找到，则为 item 的索引；否则为 -1。</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.Move(System.Int32,System.Int32)">
            <summary>
            移动指定索引处的 PengeSoft.Data.DataListSL 项到新位置。
            </summary>
            <param name="CurIndex">从零开始的索引（要移动的项）。</param>
            <param name="NewIndex">从零开始的索引（新位置）。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.Remove(PengeSoft.Data.SL.DataPacket)">
            <summary>
            从 PengeSoft.Data.DataListSL 中移除特定元素的第一个匹配项。
            </summary>
            <param name="item">要从 PengeSoft.Data.DataListSL 移除的 DataPacketSL 元素。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.GetEnumerator">
            <summary>
            返回一个循环访问集合的枚举数。
            </summary>
            <returns>可用于循环访问集合的 System.Collections.IEnumerator 对象。</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.Add(System.Object)">
            <summary>
            IList成员，将某项添加到 DataListSL 中。
            </summary>
            <param name="value">要添加到 DataListSL 的 System.Object。必须从 DataPacketSL 继承</param>
            <returns>新元素的插入位置。</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.Contains(System.Object)">
            <summary>
            IList成员，确定 DataListSL 是否包含特定值。
            </summary>
            <param name="value">要在 DataListSL 中查找的 System.Object。</param>
            <returns>如果在 DataListSL 中找到 System.Object，则为 true；否则为 false。</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.IndexOf(System.Object)">
            <summary>
            IList成员，确定 DataListSL 中特定项的索引。
            </summary>
            <param name="value">要在 DataListSL 中查找的 System.Object。</param>
            <returns>如果在列表中找到，则为 value 的索引；否则为 -1。</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.Insert(System.Int32,System.Object)">
            <summary>
            IList成员，将一个项插入指定索引处的 DataListSL。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 value。</param>
            <param name="value">要插入 DataListSL 中的 System.Object。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.Remove(System.Object)">
            <summary>
            IList成员，从 DataListSL 中移除特定对象的第一个匹配项。
            </summary>
            <param name="value">要从 DataListSL 移除的 System.Object。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.RemoveAt(System.Int32)">
            <summary>
            IList成员，移除指定索引处的 DataListSL 项。
            </summary>
            <param name="index">从零开始的索引（属于要移除的项）。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.DoCopyTo(System.Array,System.Int32)">
            <summary>
            用于实现ICollection.CopyTo()的虚函数，需重载。
            </summary>
            <param name="array">作为从 System.Collections.ICollection 复制的元素的目标位置的一维 System.Array。System.Array 必须具有从零开始的索引。</param>
            <param name="index">array 中从零开始的索引，从此处开始复制。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.GetIsSynchronized">
            <summary>
            用于实现ICollection.IsSynchronized的虚函数，需重载。
            </summary>
            <returns>如果对 System.Collections.ICollection 的访问是同步的（线程安全），则为 true；否则为 false。</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.GetSyncRoot">
            <summary>
            用于实现ICollection.SyncRoot的虚函数，需重载。
            </summary>
            <returns>可用于同步对 System.Collections.ICollection 的访问的对象。</returns>
        </member>
        <member name="M:PengeSoft.Data.SL.DataList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            ICollection 成员,从特定的 System.Array 索引处开始，将 System.Collections.ICollection 的元素复制到一个 System.Array 中。
            </summary>
            <param name="array">作为从 System.Collections.ICollection 复制的元素的目标位置的一维 System.Array。System.Array 必须具有从零开始的索引。</param>
            <param name="index">array 中从零开始的索引，从此处开始复制。</param>
        </member>
        <member name="P:PengeSoft.Data.SL.DataList.Item(System.Int32)">
            <summary>
             获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:PengeSoft.Data.SL.DataList.Count">
            <summary>
            获取 PengeSoft.Data.DataListSL 中实际包含的元素数。
            </summary>
        </member>
        <member name="P:PengeSoft.Data.SL.DataList.ItemType">
            <summary>
            设置或获取被管理元素的缺省类型，可以为 null。如果要从Xml中恢复，必须指定该属性。
            </summary>
        </member>
        <member name="P:PengeSoft.Data.SL.DataList.IsFixedSize">
            <summary>
            IList成员，获取一个值，该值指示 DataListSL 是否具有固定大小。
            </summary>
        </member>
        <member name="P:PengeSoft.Data.SL.DataList.IsReadOnly">
            <summary>
            IList成员，获取一个值，该值指示 DataListSL 是否为只读。
            </summary>
        </member>
        <member name="P:PengeSoft.Data.SL.DataList.System#Collections#IList#Item(System.Int32)">
            <summary>
            IList成员，获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:PengeSoft.Data.SL.DataList.System#Collections#ICollection#IsSynchronized">
            <summary>
            ICollection 成员,获取一个值，该值指示是否同步对 System.Collections.ICollection 的访问（线程安全）。
            <remarks>如果对 System.Collections.ICollection 的访问是同步的（线程安全），则为 true；否则为 false。</remarks>
            </summary>
        </member>
        <member name="P:PengeSoft.Data.SL.DataList.System#Collections#ICollection#SyncRoot">
            <summary>
            ICollection 成员,获取可用于同步 System.Collections.ICollection 访问的对象。
            <remarks>返回可用于同步对 System.Collections.ICollection 的访问的对象。</remarks>
            </summary>
        </member>
        <member name="T:PengeSoft.Data.SL.NorDataList">
            <summary>
            DataListSL 的 ArrayList 实现。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.#ctor">
            <summary>
            初始化 PengeSoft.Data.NorDataList 类的新实例，该实例为空并且具有默认初始容量。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.#ctor(System.Int32)">
            <summary>
            初始化 System.Collections.ArrayList 类的新实例，该实例为空并且具有指定的初始容量。
            </summary>
            <param name="capacity">新列表最初可以存储的元素数。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.#ctor(System.Collections.ICollection)">
            <summary>
            初始化 PengeSoft.Data.NorDataList 类的新实例，该实例包含从指定集合复制的元素并且具有与所复制的元素数相同的初始容量。
            </summary>
            <param name="c">System.Collections.ICollection，它的元素被复制到新列表中。该表中元素必须是 DataPacketSL 的派生类。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.GetItems(System.Int32)">
            <summary>
            DataListSL虚函数实现
            </summary>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.SetItems(System.Int32,PengeSoft.Data.SL.DataPacket)">
            <summary>
            DataListSL虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.GetCount">
            <summary>
            DataListSL虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.ClearItems">
            <summary>
            DataListSL虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.AddItem(PengeSoft.Data.SL.DataPacket)">
            <summary>
            DataListSL虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.InsertItem(System.Int32,PengeSoft.Data.SL.DataPacket)">
            <summary>
            DataListSL虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.Delete(System.Int32)">
            <summary>
            DataListSL虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.UpdateItem(PengeSoft.Data.SL.DataPacket)">
            <summary>
            DataListSL虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.IndexOf(PengeSoft.Data.SL.DataPacket)">
            <summary>
            DataListSL虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.Move(System.Int32,System.Int32)">
            <summary>
            DataListSL虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.Remove(PengeSoft.Data.SL.DataPacket)">
            <summary>
            DataListSL虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.DoCopyTo(System.Array,System.Int32)">
            <summary>
            DataListSL虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.GetIsSynchronized">
            <summary>
            DataListSL虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.GetSyncRoot">
            <summary>
            DataListSL虚函数实现
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.Sort(System.Collections.Generic.IComparer{PengeSoft.Data.SL.DataPacket})">
            <summary>
            使用指定的比较器对整个 PengeSoft.Data.DataListSL 中的字符串进行排序。
            </summary>
            <param name="comparer">比较元素时要使用的 System.Collections.IComparer 实现。若为 null，则使用则使用每个元素的 System.IComparable</param>
        </member>
        <member name="M:PengeSoft.Data.SL.NorDataList.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{PengeSoft.Data.SL.DataPacket})">
            <summary>
            使用指定的比较器对 PengeSoft.Data.DataListSL 中某个范围内的元素进行排序。
            </summary>
            <param name="index">要排序的范围的从零开始的起始索引。</param>
            <param name="count">要排序的范围的长度。</param>
            <param name="comparer">比较元素时要使用的 System.Collections.IComparer 实现。若为 null，则使用则使用每个元素的 System.IComparable</param>
        </member>
        <member name="T:PengeSoft.Data.SL.ObjList">
            <summary>
            ObjList 实现。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.ObjList.#ctor">
            <summary>
            初始化 PengeSoft.Data.NorDataList 类的新实例，该实例为空并且具有默认初始容量。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.SL.ObjList.#ctor(System.Int32)">
            <summary>
            初始化 System.Collections.ArrayList 类的新实例，该实例为空并且具有指定的初始容量。
            </summary>
            <param name="capacity">新列表最初可以存储的元素数。</param>
        </member>
        <member name="M:PengeSoft.Data.SL.ObjList.#ctor(System.Collections.ICollection)">
            <summary>
            初始化 PengeSoft.Data.NorDataList 类的新实例，该实例包含从指定集合复制的元素并且具有与所复制的元素数相同的初始容量。
            </summary>
            <param name="c">System.Collections.ICollection，它的元素被复制到新列表中。该表中元素必须是 DataPacketSL 的派生类。</param>
        </member>
        <member name="T:ExpertLib.IO.Storage.StorageStream">
            <summary>
            存储流类
            </summary>
        </member>
        <member name="T:PengeSoft.Logging.Impl.NoOpLoggerFA">
            <summary>
            不做实际输出日志类工厂适配器
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLoggerFA.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLoggerFA.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLoggerFA.GetLogger(System.Type)">
            <summary>
            Get a ILog instance by type 
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLoggerFA.PengeSoft#Logging#ILoggerFactoryAdapter#GetLogger(System.String)">
            <summary>
            Get a ILog instance by type name 
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:PengeSoft.Logging.Impl.NoOpLogger">
            <summary>
            Summary description for NoOpLogger.
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.#ctor">
            <summary>
            A NOP implementation.
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.Debug(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.Debug(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.Error(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.Error(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.Fatal(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.Fatal(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.Info(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.Info(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.Trace(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.Trace(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.Warn(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.Warn(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.LevelWrite(PengeSoft.Logging.LogLevel,System.Object)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <param name="message"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.LevelWrite(PengeSoft.Logging.LogLevel,System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.NoOpLogger.IsLevelEnabled(PengeSoft.Logging.LogLevel)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="P:PengeSoft.Logging.Impl.NoOpLogger.IsDebugEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.NoOpLogger.IsErrorEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.NoOpLogger.IsFatalEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.NoOpLogger.IsInfoEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.NoOpLogger.IsTraceEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.Logging.Impl.NoOpLogger.IsWarnEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="T:PengeSoft.Common.Exceptions.ConfigurationException">
            <summary>
            定义与配置相关的异常。 发生异常时请检查 .xml 或 .config 文件。
            </summary>
        </member>
        <member name="M:PengeSoft.Common.Exceptions.ConfigurationException.#ctor">
            <summary>
            用缺省消息创建配置异常实例 <see cref="T:PengeSoft.Common.Exceptions.ConfigurationException"/>
            </summary>
            <remarks>
            用于不能确定异常消息时。 
            </remarks>
        </member>
        <member name="M:PengeSoft.Common.Exceptions.ConfigurationException.#ctor(System.Exception)">
            <summary>
            根据引起异常的内部异常创建配置异常实例  <see cref="T:PengeSoft.Common.Exceptions.ConfigurationException"/> 
            </summary>
            <param name="ex">引起异常的内部异常</param>
        </member>
        <member name="M:PengeSoft.Common.Exceptions.ConfigurationException.#ctor(System.String)">
            <summary>
            使用指定出错信息创建配置异常实例  <see cref="T:PengeSoft.Common.Exceptions.ConfigurationException"/> 
            </summary>
            <param name="message">指定出错信息</param>
        </member>
        <member name="M:PengeSoft.Common.Exceptions.ConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            使用指定出错信息和引起异常的内部异常创建配置异常实例  <see cref="T:PengeSoft.Common.Exceptions.ConfigurationException"/> 
            </summary>
            <param name="message">指定出错信息</param>
            <param name="inner">引起异常的内部异常</param>
        </member>
        <member name="M:PengeSoft.Common.Exceptions.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            使用指定错误信息和对作为此异常原因的内部异常的引用来初始化 ConfigurationException 类的新实例。
            </summary>
            <param name="info">保存序列化对象数据的对象。</param>
            <param name="context">有关源或目标的上下文信息。<see cref="T:System.Runtime.Serialization.StreamingContext"/></param>
        </member>
        <member name="T:PengeSoft.WorkZoneData.ProgMessage">
            <summary>
            ProgMessage 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgMessage.Get_OptionSet(System.Int32)">
            <summary>
            设位集: 选项 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgMessage.Set_OptionSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 选项 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgMessage.Get_StatusSet(System.Int32)">
            <summary>
            设位集: 状态字 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgMessage.Set_StatusSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 状态字 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgMessage.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgMessage.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgMessage.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgMessage.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.MsgID">
            <summary>
            消息标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.UserSecTag">
            <summary>
            安全标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.FromUser">
            <summary>
            发送者 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.FromProg">
            <summary>
            发送程序 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.ToServer">
            <summary>
            接收消息服务 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.ToServerType">
            <summary>
            接收消息服务类型 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.MsgType">
            <summary>
            消息类型 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.MsgCmd">
            <summary>
            消息命令 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.Option">
            <summary>
            选项 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.NotifyProg">
            <summary>
            通知程序 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.RetryCnt">
            <summary>
            重试次数 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.Priority">
            <summary>
            优先级 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.Status">
            <summary>
            状态字 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.Msg">
            <summary>
            消息 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgMessage.Attachment">
            <summary>
            附件 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.DefsmRec">
            <summary>
            DefsmRec 的摘要说明。
            </summary>
            <remarks>
            需修改Stream相关代码 
            </remarks>
        </member>
        <member name="M:PengeSoft.Data.DefsmRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DefsmRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.DefsmRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.DefsmRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.DefsmRec.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.DefsmRec.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.DefsmRec.n1">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DefsmRec.defSm">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.DataMemberRec">
            <summary>
            DataMemberRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataMemberRec.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataMemberRec.Get_OptionSet(System.Int32)">
            <summary>
            设位集: 选项 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataMemberRec.Set_OptionSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 选项 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataMemberRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataMemberRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataMemberRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.DataMemberRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.DataMemberRec.MName">
            <summary>
            变量名称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.DataMemberRec.MType">
            <summary>
            变量类型, <see cref="T:PengeSoft.WorkZoneData.ServerDef"/>  DMTP_* 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.DataMemberRec.Option">
            <summary>
            选项 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.DataMemberRec.Title">
            <summary>
            标题 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.DataMemberRec.DecNum">
            <summary>
            小数位 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.DataMemberRec.DefaultVal">
            <summary>
            缺省值 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.DataMemberRec.OptValue">
            <summary>
            可选值 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.DataMemberRec.Description">
            <summary>
            描述 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.DataMemberRec.Childs">
            <summary>
            子项 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.SMSRec">
            <summary>
            SMSRec 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SMSRec.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SMSRec.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SMSRec.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.SMSRec.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SMSRec.tagtype">
            <summary>
            目标类别 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SMSRec.Tags">
            <summary>
            号码 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SMSRec.Msg">
            <summary>
            消息 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SMSRec.Time">
            <summary>
            发送时间 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.SMSRec.NickName">
            <summary>
            呢称 
            </summary>
        </member>
        <member name="T:PengeSoft.db.QueryParameter">
            <summary>
            查询参数表Hashtable
            </summary>
        </member>
        <member name="F:PengeSoft.db.QueryParameter.PS_DATANODE_ID">
            <summary>
            DataPacket序列化时的节点名称
            </summary>
        </member>
        <member name="M:PengeSoft.db.QueryParameter.XmlEncode(System.Xml.XmlNode)">
            <summary>
            将对象写入Xml节点, 表中每项以Key做为节点名，以子元素写入到节点中。
            </summary>
            <remarks>
            节点元素类型只能是 string, int, long, double, decimal, DateTime, bool 等简单类型。 
            </remarks>
            <param name="node">Xml节点</param>
        </member>
        <member name="M:PengeSoft.db.QueryParameter.XmlDecode(System.Xml.XmlNode)">
            <summary>
            从Xml节点中读出对象
            </summary>
            <param name="node">Xml节点</param>
        </member>
        <member name="M:PengeSoft.db.QueryParameter.AddDateRange(System.String,System.DateTime,System.DateTime)">
            <summary>
            在条件表中加入日期条件, 当只有StartDate有值(不为DateTime.MinValue)时时以该日期为条件，
            当StartDate和EndDate均有值时,表示一个日期范围。
            </summary>
            <remarks>
            为<see cref="T:PengeSoft.db.IDataProvider"/>的QueryLis(),QueryCount()准备。
            </remarks>
            <param name="atrName">属性名称</param>
            <param name="StartDate">开始日期</param>
            <param name="EndDate">结束日期</param>
        </member>
        <member name="M:PengeSoft.db.QueryParameter.AddCondition(System.String,System.DateTime)">
            <summary>
            在条件表中加入日期条件
            </summary>
            <param name="atrName">属性名称</param>
            <param name="value">日期条件值</param>
        </member>
        <member name="M:PengeSoft.db.QueryParameter.AddCondition(System.String,System.String)">
            <summary>
            在条件表中加入 string 条件
            </summary>
            <param name="atrName">属性名称</param>
            <param name="value">string 条件值</param>
        </member>
        <member name="M:PengeSoft.db.QueryParameter.AddCondition(System.String,System.Guid)">
            <summary>
            在条件表中加入 Guid 条件
            </summary>
            <param name="atrName">属性名称</param>
            <param name="value">Guid 条件值</param>
        </member>
        <member name="M:PengeSoft.db.QueryParameter.AddConditionNonzero(System.String,System.Int32)">
            <summary>
            在条件表中加入数值非0条件
            </summary>
            <param name="atrName">属性名称</param>
            <param name="value">数值条件值</param>
        </member>
        <member name="M:PengeSoft.db.QueryParameter.AddConditionNonzero(System.String,System.Int64)">
            <summary>
            在条件表中加入数值非0条件
            </summary>
            <param name="atrName">属性名称</param>
            <param name="value">数值条件值</param>
        </member>
        <member name="M:PengeSoft.db.QueryParameter.AddConditionNonzero(System.String,System.Double)">
            <summary>
            在条件表中加入数值非0条件
            </summary>
            <param name="atrName">属性名称</param>
            <param name="value">数值条件值</param>
        </member>
        <member name="M:PengeSoft.db.QueryParameter.AddConditionNonzero(System.String,System.Decimal)">
            <summary>
            在条件表中加入数值非0条件
            </summary>
            <param name="atrName">属性名称</param>
            <param name="value">数值条件值</param>
        </member>
        <member name="M:PengeSoft.db.QueryParameter.AddCondition(System.String,System.Object)">
            <summary>
            在条件表中加入 Object 条件, 用于添加未处理的类型。目前处理了 string , Guid, DateTime 。
            </summary>
            <param name="atrName">属性名称</param>
            <param name="value">Guid 条件值</param>
        </member>
        <member name="M:PengeSoft.db.QueryParameter.AddRangeCondition(System.String,System.Object,System.Object)">
            <summary>
            在条件表中加入 Object 的 Range 条件, 用于添加未处理的类型，只用于处理了string, int, double, decmial等简单类型 。
            </summary>
            <param name="atrName">属性名称</param>
            <param name="low">下限</param>
            <param name="high">上限</param>
        </member>
        <member name="M:PengeSoft.db.QueryParameter.SelectChildNode(System.Xml.XmlNode,System.String)">
            <summary>
            返回子节点
            </summary>
            <param name="node"></param>
            <param name="mc"></param>
            <returns></returns>
        </member>
        <member name="P:PengeSoft.db.QueryParameter.XmlText">
            <summary>
            设置或获取对象的Xml序列。
            </summary>
        </member>
        <member name="T:PengeSoft.Net.ConnectEventDelegate">
            <summary>
            联接事件定义
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:PengeSoft.Net.TcpService">
            <summary>
            Tcp服务基类，使用线程执行服务，联接处理使用缺省线程池。
            </summary>
        </member>
        <member name="M:PengeSoft.Net.TcpService.CreateServiceWork(System.Net.Sockets.TcpClient,PengeSoft.Logging.ILog)">
            <summary>
            创建处理连接的服务对象实例。实例类型由 <see cref="P:PengeSoft.Net.TcpService.ThreadWorkType"/> 指定，该类型必须是 <see cref="T:PengeSoft.Net.TcpConnectThreakWork"/> 的派生类，并具有 
                public (TcpClient, ILog)
            的构造函数。没有指定服务对象，则使用 <see cref="T:PengeSoft.Net.TcpConnectThreakWork"/>
            </summary>
            <param name="client"></param>
            <param name="logger"></param>
            <returns></returns>
        </member>
        <member name="P:PengeSoft.Net.TcpService.ThreadWorkType">
            <summary>
            连接处理线程对象类型，不设定用 <see cref="T:PengeSoft.Net.TcpConnectThreakWork"/>
            </summary>
        </member>
        <member name="P:PengeSoft.Net.TcpService.TimeOut">
            <summary>
            超时间隔，单位ms
            </summary>
        </member>
        <member name="P:PengeSoft.Net.TcpService.Active">
            <summary>
            获取或设置服务活动状态
            </summary>
        </member>
        <member name="T:PengeSoft.Net.TcpConnectThreakWork">
            <summary>
            Tcp联接处理基类
            </summary>
        </member>
        <member name="M:PengeSoft.Net.TcpConnectThreakWork.CreateCmdMsg">
            <summary>
            创建消息对象实例。实例类型由 <see cref="P:PengeSoft.Net.TcpConnectThreakWork.CmdMsgType"/> 指定，该类型必须实现 <see cref="T:PengeSoft.Net.ICmdMessage"/> 接口. 
            没有指定消息对象，则使用 <see cref="T:PengeSoft.Net.GenCmdMessage"/>
            </summary>
        </member>
        <member name="M:PengeSoft.Net.TcpConnectThreakWork.GetUserEnCodeKey(System.String)">
            <summary>
            用户验证接口，返回用户加密密码。采用共用密码时直接返回密码即可。
            </summary>
            <param name="UTag"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Net.TcpConnectThreakWork.ThreadPoolCallback(System.Object)">
            <summary>
            线程入口函数
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:PengeSoft.Net.TcpConnectThreakWork.Stop">
            <summary>
            中止处理线程
            </summary>
        </member>
        <member name="P:PengeSoft.Net.TcpConnectThreakWork.CmdMsgType">
            <summary>
            设置或获数据包的类型，数据类型必须实现了 ICmdMessage 接口
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.LoginAction">
            <summary>
            LoginAction 登录记录的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginAction.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginAction.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginAction.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginAction.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginAction.Action">
            <summary>
            操作 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginAction.OpTime">
            <summary>
            操作时间 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginAction.Sid">
            <summary>
            安全标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.LoginAction.LoginId">
            <summary>
            登录名 
            </summary>
        </member>
        <member name="T:PengeSoft.Data.DzTableBase">
            <summary>
            DzTableBase 的摘要说明。
            </summary>
            <remarks>
            需在派生类中手工修改CompareBase的初始化 
            </remarks>
        </member>
        <member name="M:PengeSoft.Data.DzTableBase.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DzTableBase.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.DzTableBase.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.DzTableBase.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.DzTableBase.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.DzTableBase.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.DzTableBase.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.DzTableBase.DzTableName">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.DzTableBase.CompareBase">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.LoginActionList">
            <summary>
            LoginActionList 登录记录表的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginActionList.#ctor">
            <summary>
            初始化新实例 
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.LoginActionList.#ctor(System.Collections.ICollection)">
            <summary>
            初始化新实例，该实例包含从指定集合复制的元素并且具有与所复制的元素数相同的初始容量。
            </summary>
            <param name="c"></param>
        </member>
        <member name="T:PengeSoft.db.PaginatedArrayList">
            <summary>
            分页的ArrayList, 在 IList 上充，实现分页。允许创建实例后对元素进行修改。每次修改均会重计算分页。
            尽量不要创建实例后对元素进行增删。
            </summary>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.#ctor(System.Int32)">
            <summary>
            创建PaginatedArrayList实例，并指定页面大小。
            </summary>
            <param name="pageSize">页面大小</param>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.#ctor(System.Int32,System.Int32)">
            <summary>
            创建PaginatedArrayList实例，并指定初始容量和页面大小。
            </summary>
            <param name="initialCapacity">List初始容量</param>
            <param name="pageSize">页面大小</param>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.#ctor(System.Collections.ICollection,System.Int32,System.Int32)">
            <summary>
            创建PaginatedArrayList实例，从指定集合中复制（引用）元素，并指定页面大小及起始页面。
            </summary>
            <param name="c">源集合</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">起始页面号</param>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.#ctor(System.Collections.ICollection,System.Int32)">
            <summary>
            创建PaginatedArrayList实例，从指定集合中复制（引用）元素，并指定页面大小。
            </summary>
            <param name="c">源集合</param>
            <param name="pageSize">页面大小</param>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.Repaginate">
            <summary>
            重计算分页
            </summary>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.SubList(System.Collections.IList,System.Int32,System.Int32)">
            <summary>
            Provides a view of the IList pramaeter 
            from the specified position <paramref name="fromIndex"/> 
            to the specified position <paramref name="toIndex"/>. 
            </summary>
            <param name="list">The IList elements.</param>
            <param name="fromIndex">Starting position for the view of elements. </param>
            <param name="toIndex">Ending position for the view of elements. </param>
            <returns> A view of list.
            </returns>
            <remarks>
            The list that is returned is just a view, it is still backed
            by the orignal list.  Any changes you make to it will be 
            reflected in the orignal list.
            </remarks>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.NextPage">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.PreviousPage">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.GotoPage(System.Int32)">
            <summary>
            
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.Insert(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.Remove(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.Contains(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.IndexOf(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.Add(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.CopyTo(System.Array,System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:PengeSoft.db.PaginatedArrayList.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.IsEmpty">
            <summary>
            返回当前页面是否为空。
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.TotalSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.PageCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.PageSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.IsFirstPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.IsMiddlePage">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.IsLastPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.IsNextPageAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.IsPreviousPageAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.PageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.IsFixedSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.IsSynchronized">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:PengeSoft.db.PaginatedArrayList.SyncRoot">
            <summary>
            
            </summary>
        </member>
        <member name="T:ExpertLib.IO.Storage.StorageShareMode">
            <summary>
            存储的共享模式
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StorageShareMode.ShareDenyNone">
            <summary>
            共享存取操作
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StorageShareMode.ShareDenyRead">
            <summary>
            拒绝共享的读操作
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StorageShareMode.ShareDenyWrite">
            <summary>
            拒绝共享的写操作
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StorageShareMode.ShareExclusive">
            <summary>
            独占的存取模式
            </summary>
        </member>
        <member name="T:ExpertLib.IO.Storage.StorageCreateMode">
            <summary>
            存储创建模式
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StorageCreateMode.Create">
            <summary>
            如果已经存在一个流/存储，它将被删除；如果没有已存在的流/存储，就创建一个新的
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StorageCreateMode.Convert">
            <summary>
            保留原来的数据，并将数据保存在CONTENTS流对象中，且该流位于当前存储对象下
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StorageCreateMode.FailIfThere">
            <summary>
            如果已经存在了一个留或存储，调用失败
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StorageCreateMode.DeleteOnRelease">
            <summary>
            当带有这个标识的复合文档中的流或存储的父存储被释放时，它会被自动释放
            </summary>
        </member>
        <member name="T:ExpertLib.IO.Storage.StorageTransactedMode">
            <summary>
            存储事务模式
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StorageTransactedMode.Direct">
            <summary>
            所有对复合文档的修改立即生效
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StorageTransactedMode.Transacted">
            <summary>
            直到提交被调用修改才被写入到复合文档，类似于数据库操作中的提交和回滚
            </summary>
        </member>
        <member name="T:ExpertLib.IO.Storage.StorageReadWriteMode">
            <summary>
            存储读写方式
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StorageReadWriteMode.Read">
            <summary>
            只读模式
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StorageReadWriteMode.Write">
            <summary>
            只写模式
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StorageReadWriteMode.ReadWrite">
            <summary>
            读写模式
            </summary>
        </member>
        <member name="T:ExpertLib.IO.Storage.StgcMode">
            <summary>
            提交方式
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StgcMode.Default">
            <summary>
            默认的
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StgcMode.OverWrite">
            <summary>
            覆盖
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StgcMode.OnlyIfCurrent">
            <summary>
            当前提交
            </summary>
        </member>
        <member name="F:ExpertLib.IO.Storage.StgcMode.DangerouslyCommitmerelyToDiskCache">
            <summary>
            提交到Cache中
            </summary>
        </member>
        <member name="T:ExpertLib.IO.Storage.StorageFile">
            <summary>
            结构化存储文件类
            </summary>
        </member>
        <member name="M:ExpertLib.IO.Storage.StorageFile.IsStorageFile(System.String)">
            <summary>
            测试一个文件是否结构化文件
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:ExpertLib.IO.Storage.StorageFile.CreateTempStorageFile">
            <summary>
            创建一个临时的结构化存储文档
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExpertLib.IO.Storage.StorageFile.CreateStorageFile(System.String)">
            <summary>
            总是创建一个结构化文档不管原来有没有存在,并返回根存储（可读写、不启用事务、拒绝共享写方式）
            </summary>
            <param name="storageFile"></param>
            <returns>根存储</returns>
        </member>
        <member name="M:ExpertLib.IO.Storage.StorageFile.OpenStorageFile(System.String)">
            <summary>
            打开一个复合文档，并返回根目录的Storage对象
            </summary>
            <param name="storageFile"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:ExpertLib.IO.Storage.StorageFile.CleanCopyStorageFile(System.String,System.String)">
            <summary>
            复制一个存储文件到另一个存储文件，并把无效的空间去除
            </summary>
            <param name="sourceFileName"></param>
            <param name="dectFileName"></param>
        </member>
        <member name="T:ExpertLib.IO.Storage.Storage">
            <summary>
            存储类
            </summary>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.CreateStorage(System.String)">
            <summary>
            创建一个存储 用直接模式打开
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.OpenStorage(System.String)">
            <summary>
            打开一个子存储
            </summary>
            <param name="name">存储名称</param>
            <returns></returns>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.CopyTo(ExpertLib.IO.Storage.Storage)">
            <summary>
            将这个存储复制到另一个存储，可以实现空间清理
            </summary>
            <param name="destinationStorage"></param>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.RecurOpenStorage(System.String)">
            <summary>
            用路径的方式定位一个存储
            </summary>
            <param name="name">类于于路径的字符串如ABC\DEF\JJJ</param>
            <returns></returns>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.CreateStream(System.String)">
            <summary>
            创建一个流
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.OpenStream(System.String)">
            <summary>
            打开一个流
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.Commit">
            <summary>
            提交,包括子对象
            </summary>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.Revert">
            <summary>
            取消自打开以来或上次提交以来的所有修改
            </summary>
            <remarks>
            仅在事务模式下有效，注意此函数调用后，所有的子存储和流对象不再有效。
            </remarks>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.GetChildElementsInfo">
            <summary>
            取子元素信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.MoveElement(System.String,ExpertLib.IO.Storage.Storage)">
            <summary>
            将本存储对象下指定的存储或流对象移动到指定的流或存储里
            </summary>
            <param name="elementName">存储或流名</param>
            <param name="destStorage">目标存储</param>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.CopyElement(System.String,ExpertLib.IO.Storage.Storage)">
            <summary>
            将本存储对象下指定的存储或流对象复制到指定的流或存储里
            </summary>
            <param name="elementName">存储或流名</param>
            <param name="destStorage">目标存储</param>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.DeleteElement(System.String)">
            <summary>
            删除指定的子元素
            </summary>
            <param name="elementName"></param>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.RenameElement(System.String,System.String)">
            <summary>
            重命名子元素
            </summary>
            <param name="elementName"></param>
            <param name="newName"></param>
        </member>
        <member name="M:ExpertLib.IO.Storage.Storage.IsElementExist(System.String)">
            <summary>
            检查是否存有指定名称的子对象
            </summary>
            <param name="elementName">对象名称</param>
            <returns></returns>
            <remarks>忽略大小写比较名称</remarks>
        </member>
        <member name="P:ExpertLib.IO.Storage.Storage.CLSID">
            <summary>
            读取或设置存储对应的CLSID值
            </summary>
        </member>
        <member name="P:ExpertLib.IO.Storage.Storage.Name">
            <summary>
            读取存储的名字
            </summary>
        </member>
        <member name="P:ExpertLib.IO.Storage.Storage.StateBits">
            <summary>
            读写状态码
            </summary>
        </member>
        <member name="P:ExpertLib.IO.Storage.Storage.StorageInfo">
            <summary>
            读取存储属性
            </summary>
        </member>
        <member name="T:ExpertLib.IO.Storage.StorageConst">
            <summary>
            一些库内部使用的常量
            </summary>
            <remarks>源定义于WTypes.h</remarks>
        </member>
        <member name="T:ExpertLib.IO.Storage.StorageNativeMethods">
            <summary>
            结构化存储相关函数包装类
            </summary>
        </member>
        <member name="M:ExpertLib.IO.Storage.StorageNativeMethods.IsStorageFile(System.String)">
            <summary>
            测试一个文件是否结构化文档
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:ExpertLib.IO.Storage.IEnumSTATSTG">
            <summary>
            IEnumSTATSTG 接口
            </summary>
        </member>
        <member name="T:ExpertLib.IO.Storage.IStorage">
            <summary>
            IStorage 接口
            </summary>
        </member>
        <member name="T:ExpertLib.IO.Storage.IStream">
            <summary>
            IStream 接口 
            </summary>
            <remarks>
            实际上Microsoft.CLRAdmin空间里定义了同样的接口
            </remarks>
        </member>
        <member name="T:PengeSoft.Configuration.AppConfigData">
            <summary>
            配置数据对象
            </summary>
        </member>
        <member name="M:PengeSoft.Configuration.AppConfigData.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Configuration.AppConfigData.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Configuration.AppConfigData.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Configuration.AppConfigData.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.Configuration.AppConfigData.Settings">
            <summary>
            设置表
            </summary>
        </member>
        <member name="T:PengeSoft.Configuration.DefaultSectionHandler">
            <summary>
            配置处理缺省 DefaultSectionHandler(), 处理config中的节。实现IConfigurationSectionHandler接口。
            </summary>
        </member>
        <member name="M:PengeSoft.Configuration.DefaultSectionHandler.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PengeSoft.Configuration.DefaultSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            创建配置节处理程序。
            </summary>
            <param name="parent">父对象。</param>
            <param name="configContext">配置上下文对象。</param>
            <param name="section">节 XML 节点。</param>
            <returns>创建的节处理程序对象。</returns>
        </member>
        <member name="M:PengeSoft.Configuration.DefaultSectionHandler.CreateAppConfigData">
            <summary>
            可重载函数，用于创建自己的配置数据对象，从 <see cref="T:PengeSoft.Configuration.AppConfigData"/> 中继承。
            </summary>
            <returns></returns>
        </member>
        <member name="T:PengeSoft.Logging.Impl.ConsoleOutLoggerFA">
            <summary>
            控制台输出日志类工厂适配器
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.ConsoleOutLoggerFA.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.ConsoleOutLoggerFA.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            构造函数, 并传入参数。
            </summary>
            <param name="properties">属性表，属性有level,showDateTime,showLogName,dateTimeFormat</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.ConsoleOutLoggerFA.CreateNewLogger(System.String,PengeSoft.Logging.LogLevel,System.Boolean,System.Boolean,System.String)">
            <summary>
            创建新的日志接口。
            </summary>
            <param name="logName">日志名称</param>
            <param name="logLevel">日志级别</param>
            <param name="showDateTime">是否在日志中显示时间</param>
            <param name="showLogName">是否在日志中显示日志名称</param>
            <param name="dateTimeFormat">日期格式</param>
            <returns>日志实例接口</returns>
        </member>
        <member name="T:PengeSoft.Logging.Impl.ConsoleOutLogger">
            <summary>
            控制台输出日志类
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.ConsoleOutLogger.#ctor(System.String,PengeSoft.Logging.LogLevel,System.Boolean,System.Boolean,System.String)">
            <summary>
            构造函数,创建文件输出日志实例。
            </summary>
            <param name="logName">日志名称</param>
            <param name="logLevel">日志级别</param>
            <param name="showDateTime">在日志中包括当前时间</param>
            <param name="showLogName">在日志中包括当前日志名称</param>
            <param name="dateTimeFormat">日志中的日期时间格式</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.ConsoleOutLogger.OutputLog(System.String)">
            <summary>
            将日志信息写入文件。
            </summary>
            <param name="message">日志信息</param>
        </member>
        <member name="T:PengeSoft.Logging.ConfigurationSectionHandler">
            <summary>
            日志配置处理SectionHandler(), 处理config中的节。实现IConfigurationSectionHandler接口。
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.ConfigurationSectionHandler.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.ConfigurationSectionHandler.ReadConfiguration(System.Xml.XmlNode)">
            <summary>
            从Xml节点中读出配置。
            </summary>
            <param name="section">Xml节点</param>
            <returns>LogSetting</returns>
        </member>
        <member name="M:PengeSoft.Logging.ConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            创建配置节处理程序。
            </summary>
            <param name="parent">父对象。</param>
            <param name="configContext">配置上下文对象。</param>
            <param name="section">节 XML 节点。</param>
            <returns>创建的节处理程序对象。</returns>
        </member>
        <member name="T:PengeSoft.Data.GroupTabSheet">
            <summary>
            GroupTabSheet 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GroupTabSheet.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.GroupTabSheet.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GroupTabSheet.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.GroupTabSheet.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="M:PengeSoft.Data.GroupTabSheet.SaveToStream(System.IO.Stream)">
            <summary>
            将对象写入到流
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="M:PengeSoft.Data.GroupTabSheet.LoadFromStream(System.IO.Stream)">
            <summary>
            从流中读出对象
            </summary>
            <param name="stream">I/O流</param>
        </member>
        <member name="P:PengeSoft.Data.GroupTabSheet.HeadPos">
            <summary>
             
            </summary>
        </member>
        <member name="P:PengeSoft.Data.GroupTabSheet.TabStyle">
            <summary>
             
            </summary>
        </member>
        <member name="T:PengeSoft.Data.Service.Error_Result">
            <summary>
            Error_Result 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.Service.Error_Result.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Data.Service.Error_Result.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.Service.Error_Result.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Data.Service.Error_Result.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.Data.Service.Error_Result.Code">
            <summary>
            出错代码 
            </summary>
        </member>
        <member name="P:PengeSoft.Data.Service.Error_Result.Msg">
            <summary>
            出错消息 
            </summary>
        </member>
        <member name="T:PengeSoft.Auther.IObjectRightCheck">
            <summary>
            对象权限认证
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.IObjectRightCheck.CheckRight(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="UTag"></param>
            <param name="ObjId"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IObjectRightCheck.CheckRight(System.String,PengeSoft.Auther.UserRightDef)">
            <summary>
            
            </summary>
            <param name="UTag"></param>
            <param name="rightDef"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IObjectRightCheck.CreateRightDef(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="UTag"></param>
            <param name="Id"></param>
        </member>
        <member name="M:PengeSoft.Auther.IObjectRightCheck.GetRightDef(System.String,System.String,PengeSoft.Auther.UserRightDef@)">
            <summary>
            
            </summary>
            <param name="UTag"></param>
            <param name="Id"></param>
            <param name="def"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IObjectRightCheck.RemoveRightDef(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="UTag"></param>
            <param name="Id"></param>
        </member>
        <member name="M:PengeSoft.Auther.IObjectRightCheck.UpdateRightDef(System.String,System.String,PengeSoft.Auther.UserRightDef)">
            <summary>
            
            </summary>
            <param name="UTag"></param>
            <param name="Id"></param>
            <param name="rightDef"></param>
        </member>
        <member name="M:PengeSoft.Auther.IObjectRightCheck.GetRightDefList(System.String,System.Int32,System.Int32)">
            <summary>
            有权限的记录表
            </summary>
            <param name="UTag"></param>
            <param name="Start"></param>
            <param name="PageSize"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IObjectRightCheck.GetRightDefCount(System.String)">
            <summary>
            有权限的记录总数
            </summary>
            <param name="UTag"></param>
            <returns></returns>
        </member>
        <member name="T:PengeSoft.WebService.WebSrvNameAttribute">
            <summary>
            WebService服务属性定义，此属性用于对服务类进行说明，指明服务需用WebService发布。
            </summary>
        </member>
        <member name="M:PengeSoft.WebService.WebSrvNameAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="name">WebService服务名称,此名称可与服务类名称不一样</param>
        </member>
        <member name="P:PengeSoft.WebService.WebSrvNameAttribute.Name">
            <summary>
            WebService服务名称
            </summary>
        </member>
        <member name="P:PengeSoft.WebService.WebSrvNameAttribute.Type">
            <summary>
            服务类别，说明字段，现还未指定意义。
            </summary>
        </member>
        <member name="T:PengeSoft.WebService.WebSrvMethodAttribute">
            <summary>
            WebService方法属性定义，用于指明服务类中什么方法需用WebService发布。
            </summary>
        </member>
        <member name="M:PengeSoft.WebService.WebSrvMethodAttribute.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PengeSoft.WebService.WebSrvMethodAttribute.EnCodeFields">
            <summary>
            需编码的参数名称表，参数名称间用‘，’号分格，参数名称前加‘@’表示需加密。编码和加密同Delphi兼容。
            可以为一个方法指定多个定义。
            </summary>
        </member>
        <member name="T:PengeSoft.Logging.Impl.FileLoggerFA">
            <summary>
            文件输出日志类工厂适配器, 可接收logFileName属性指定日志文件名。
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.FileLoggerFA.#ctor">
            <summary>
            构造函数,创建实例。
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.FileLoggerFA.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            构造函数,创建实例。并指定参数。
            参数属性有level,showDateTime,showLogName,dateTimeFormat,logFileName
            </summary>
            <param name="properties">属性表</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.FileLoggerFA.CreateNewLogger(System.String,PengeSoft.Logging.LogLevel,System.Boolean,System.Boolean,System.String)">
            <summary>
            创建新的日志接口。
            </summary>
            <param name="logName">日志名称</param>
            <param name="logLevel">日志级别</param>
            <param name="showDateTime">是否在日志中显示时间</param>
            <param name="showLogName">是否在日志中显示日志名称</param>
            <param name="dateTimeFormat">日期格式</param>
            <returns>日志实例接口</returns>
        </member>
        <member name="T:PengeSoft.Logging.Impl.FileLogger">
            <summary>
            文件输出日志类工厂适配器
            </summary>
        </member>
        <member name="M:PengeSoft.Logging.Impl.FileLogger.#ctor(System.String,PengeSoft.Logging.LogLevel,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            构造函数,创建文件输出日志实例。实际日志文件名称为 日志文件名+日期
            </summary>
            <param name="logName">日志名称</param>
            <param name="logLevel">日志级别</param>
            <param name="showDateTime">在日志中包括当前时间</param>
            <param name="showLogName">在日志中包括当前日志名称</param>
            <param name="dateTimeFormat">日志中的日期时间格式</param>
            <param name="logFileName">日志文件名称，未指定时用日志名称</param>
        </member>
        <member name="M:PengeSoft.Logging.Impl.FileLogger.OutputLog(System.String)">
            <summary>
            将日志信息写入文件。
            </summary>
            <param name="message">日志信息</param>
        </member>
        <member name="T:PengeSoft.Common.Exceptions.IPSFNetException">
            <summary>
            定义与框架相关的异常。 发生异常时请检查 .xml 或 .config 文件。
            </summary>
        </member>
        <member name="M:PengeSoft.Common.Exceptions.IPSFNetException.#ctor">
            <summary>
            用缺省消息创建框架异常实例 <see cref="T:PengeSoft.Common.Exceptions.IPSFNetException"/>
            </summary>
            <remarks>
            用于不能确定异常消息时。 
            </remarks>
        </member>
        <member name="M:PengeSoft.Common.Exceptions.IPSFNetException.#ctor(System.Exception)">
            <summary>
            根据引起异常的内部异常创建配置异常实例  <see cref="T:PengeSoft.Common.Exceptions.IPSFNetException"/> 
            </summary>
            <param name="ex">引起异常的内部异常</param>
        </member>
        <member name="M:PengeSoft.Common.Exceptions.IPSFNetException.#ctor(System.String)">
            <summary>
            使用指定出错信息创建配置异常实例  <see cref="T:PengeSoft.Common.Exceptions.IPSFNetException"/> 
            </summary>
            <param name="message">指定出错信息</param>
        </member>
        <member name="M:PengeSoft.Common.Exceptions.IPSFNetException.#ctor(System.String,System.Int32)">
            <summary>
            使用指定出错信息创建配置异常实例  <see cref="T:PengeSoft.Common.Exceptions.IPSFNetException"/> 
            </summary>
            <param name="message">指定出错信息</param>
        </member>
        <member name="M:PengeSoft.Common.Exceptions.IPSFNetException.#ctor(System.String,System.Exception)">
            <summary>
            使用指定出错信息和引起异常的内部异常创建配置异常实例  <see cref="T:PengeSoft.Common.Exceptions.IPSFNetException"/> 
            </summary>
            <param name="message">指定出错信息</param>
            <param name="inner">引起异常的内部异常</param>
        </member>
        <member name="M:PengeSoft.Common.Exceptions.IPSFNetException.#ctor(System.Int32,System.Exception)">
            <summary>
            使用指定出错误编号和引起异常的内部异常创建配置异常实例  <see cref="T:PengeSoft.Common.Exceptions.IPSFNetException"/> 
            </summary>
            <param name="exceptionNumber">自定义的错误编号</param>
            <param name="inner">引发此异常的异常</param>
        </member>
        <member name="M:PengeSoft.Common.Exceptions.IPSFNetException.#ctor(System.Int32)">
            <summary>
            使用指定出错误编号创建配置异常实例  <see cref="T:PengeSoft.Common.Exceptions.IPSFNetException"/> 
            </summary>
            <param name="exceptionNumber">自定义的错误编号</param>
        </member>
        <member name="M:PengeSoft.Common.Exceptions.IPSFNetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            使用指定错误信息和对作为此异常原因的内部异常的引用来初始化 IPSFNetException 类的新实例。
            </summary>
            <param name="info">保存序列化对象数据的对象。</param>
            <param name="context">有关源或目标的上下文信息。<see cref="T:System.Runtime.Serialization.StreamingContext"/></param>
        </member>
        <member name="T:PengeSoft.WorkZoneData.ProgFilePara">
            <summary>
            ProgFilePara 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgFilePara.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgFilePara.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgFilePara.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgFilePara.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgFilePara.FileName">
            <summary>
            数据文件名称 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgFilePara.Pwd1">
            <summary>
            打开口令 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgFilePara.Pwd2">
            <summary>
            写口令 
            </summary>
        </member>
        <member name="T:PengeSoft.WorkZoneData.ProgRunPara">
            <summary>
            ProgRunPara 的摘要说明。
            </summary>
            <remarks>
            程序起动参数 
            </remarks>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgRunPara.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgRunPara.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgRunPara.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.WorkZoneData.ProgRunPara.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgRunPara.CommType">
            <summary>
            通讯口类型 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgRunPara.PanelNum">
            <summary>
            频道号 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgRunPara.Host">
            <summary>
            主机 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgRunPara.Port">
            <summary>
            端口 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgRunPara.UTag">
            <summary>
            用户标识 
            </summary>
        </member>
        <member name="P:PengeSoft.WorkZoneData.ProgRunPara.EnCodeKey">
            <summary>
            加密字 
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.IDataManager.DoVerb(System.Int32,System.String,System.String@)">
            <summary>
            执行操作
            </summary>
            <param name="Action">操作号</param>
            <param name="Data"></param>
            <param name="ans"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IDataManager.Update(PengeSoft.Data.DataPacket,System.Object@)">
            <summary>
            更新数据
            </summary>
            <param name="Data"></param>
            <param name="KeyID"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IDataManager.GetData(PengeSoft.Data.DataPacket,System.String@)">
            <summary>
            取数据
            </summary>
            <param name="Data">条件数据</param>
            <param name="ansXml"></param>
            <returns></returns>
        </member>
        <member name="T:PengeSoft.Auther.IUserManager">
            <summary>
            权限中的用户管理
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.IUserManager.GetUserList(System.Int32,System.Int32,System.Int32,System.Int32,System.String@)">
            <summary>
            取用户列表
            </summary>
            <param name="level">
            取列表的级别，有以下方面:
                    UATL_DETAIL, UATL_MID, UATL_LITTLE, UTAL_ONLYID
            和下面两个可或上的选项
                    UATL_ONLINESTAT,UATL_INCLUDESID;
            
            </param>
            <param name="Tag">0：所有用户，指定只取指定Tag的用户, Tag 可用的值有 UAT_HAVEMOB </param>
            <param name="start">结果起始记录号, 从 0 开始</param>
            <param name="count">结果记录条数, -1 表示全部</param>
            <param name="list">用于存贮返回值的列表，元素类型为 <see cref="T:PengeSoft.WorkZoneData.PersonRec"/> 或 <see cref="T:PengeSoft.WorkZoneData.SimPersonRec"/> </param>
            <returns>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/></returns>
        </member>
        <member name="M:PengeSoft.Auther.IUserManager.ModifyUserLimitKey(System.String,PengeSoft.Data.StringList,PengeSoft.Data.StringList,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            修改用户安全选项, 特别注意：IP,IPRange,SN,HddSN,Mac,UserDef等在用 null 作参数时，表示不修改，用相应对象的空时表清除。
            </summary>
            <param name="LoginID">登录名称</param>
            <param name="IP">IP限制</param>
            <param name="IPRange">IP范围</param>
            <param name="SN">锁号</param>
            <param name="HddSN"> 硬盘序列号</param>
            <param name="CPU">CPU标识</param>
            <param name="Mac">Mac地址</param>
            <param name="UserDef">用户自定义标识</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IUserManager.GetDetail(System.String,PengeSoft.WorkZoneData.UserRec@)">
            <summary>
            取用户详细信息
            </summary>
            <param name="LoginID"></param>
            <param name="ans">返回用户数据 <see cref="T:PengeSoft.WorkZoneData.UserRec"/> </param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IUserManager.QueryUserList(PengeSoft.WorkZoneData.PersonRec,System.Int32,System.Int32,System.Int32,PengeSoft.WorkZoneData.Users@)">
            <summary>
            查询取用户列表
            </summary>
            <param name="para">
            查询条件，可使用字段有
              NickName : 查询 loginId, 只能全匹配
              FullName : 查询 FullName, 可使用通配符‘%’
              Unit     : 查询 Unit, 可使用通配符‘%’
              Dept     : 查询 Dept, 可使用通配符‘%’
              Addr     : 查询 Addr, 可使用通配符‘%’
              Contact  : 查询 Contact, 可使用通配符‘%’
              Tel1     : 查询 Tel1,Tel2, 可使用通配符‘%’
              Mob1     : 查询 Mob1,_Mob2, 可使用通配符‘%’
              EMail    : 查询 Addr, 只能全匹配
            </param>
            <param name="level">
            取列表的级别，有以下方面:
                    UATL_DETAIL, UATL_MID, UATL_LITTLE, UTAL_ONLYID
            和下面两个可或上的选项
                    UATL_ONLINESTAT,UATL_INCLUDESID;
            
            </param>
            <param name="start">结果起始记录号, 从 0 开始</param>
            <param name="count">结果记录条数, -1 表示全部</param>
            <param name="list">用于存贮返回值的列表，元素类型为<see cref="T:PengeSoft.WorkZoneData.UserRec"/> </param>
            <returns>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码<see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/></returns>
        </member>
        <member name="M:PengeSoft.Auther.IGroupManager.Add(System.String,System.String,System.String,System.Int32,System.Int32@)">
            <summary>
            
            </summary>
            <param name="ParentID"></param>
            <param name="ID"></param>
            <param name="Detail"></param>
            <param name="Option">
              DTAO_AddSub = $0001;
              DTAO_Insert = $0002;
            </param>
            <param name="SID"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IGroupManager.UpdateGroup(System.String,System.Int32,System.String@)">
            <summary>
            更新组/部门数据
            </summary>
            <param name="Data">组/部门数据的xml值 <see cref="T:PengeSoft.WorkZoneData.UserGroupRec"/></param>
            <param name="Option">
               GUPOP_UserExclusive = 0x0001;           // 用户只出现在一个部门中（该选项对组无效）
               GUPOP_UseUserIds    = 0x0002;           // 使用 UserGroupRec.UserIds 参数确定组/部门成员
            </param>
            <param name="KeyID">组/部门的SID(整数)</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IGroupManager.UpdateGroup(PengeSoft.WorkZoneData.UserGroupRec,System.Int32,System.Int32@)">
            <summary>
            更新组/部门数据
            </summary>
            <param name="rec">组/部门数据 <see cref="T:PengeSoft.WorkZoneData.UserGroupRec"/></param>
            <param name="Option">
               GUPOP_UserExclusive = 0x0001;           // 用户只出现在一个部门中（该选项对组无效）
               GUPOP_UseUserIds    = 0x0002;           // 使用 UserGroupRec.UserIds 参数确定组/部门成员
            </param>
            <param name="SID">组/部门的SID(整数)</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IGroupManager.GetGroupList(System.Int32,System.Int32,System.Int32,System.Int32,PengeSoft.WorkZoneData.UserRoles@)">
            <summary>
            
            </summary>
            <param name="level">
               GATL_LEVELMASK  = $00FF;
               GATL_GETDEPT    = $0100;
               GATL_GETByID    = $0200;    // 取 Tag 指定组号的组信息
               GATL_IncludeUID = $0400;    // 信息中含用户LoginID表
            </param>
            <param name="Tag"></param>
            <param name="start"></param>
            <param name="len"></param>
            <param name="ans"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IGroupManager.GetUserGroupDefs(System.Int32,System.String,System.Int32,PengeSoft.WorkZoneData.UserGroupDefs@)">
            <summary>
            取用户组定义
            </summary>
            <param name="userSid"></param>
            <param name="ignoreGroups"></param>
            <param name="option">暂未定义</param>
            <param name="defs"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IGroupManager.UpdateUserGroupDefs(System.Int32,System.Int32,PengeSoft.WorkZoneData.UserGroupDefs)">
            <summary>
            更新用户组定义
            </summary>
            <param name="userSid"></param>
            <param name="option">暂未定义</param>
            <param name="defs"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.Add(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32@)">
            <summary>
            添加一新权限
            <remarks>
            Option选项:
              DTAO_AddSub : 添加子项目(不指定则添加或插入同级项目，会跳过已有子项目)
              DTAO_Insert : 在PosAct后插入项目
            </remarks>
            </summary>
            <param name="PosAct">添加位置的权限标识，找不到则为根节点</param>
            <param name="ActID">给定权限标识，0则自动选取</param>
            <param name="Option">添加选项
            <remarks>
            Option选项:
              DTAO_AddSub : 添加子项目(不指定则添加或插入同级项目，会跳过已有子项目)
              DTAO_Insert : 在PosAct后插入项目
            </remarks>
            </param>
            <param name="ActName">权限名称</param>
            <param name="Detail">权限描述</param>
            <param name="ID">返回添后成功后的标识</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.RemoveAct(System.Int32)">
            <summary>
            删除权限
            </summary>
            <param name="ActID">权限标识</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.GetDetail(System.Int32,System.String@)">
            <summary>
            取权限详细信息，成功返回 <see cref="T:PengeSoft.WorkZoneData.UserActionRec"/> 的Xml描述
            </summary>
            <param name="ActID">权限标识</param>
            <param name="ans">返回值， <see cref="T:PengeSoft.WorkZoneData.UserActionRec"/> 的Xml描述</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.GetListNode(System.String,System.Int32,System.Int32,System.String@)">
            <summary>
            
            </summary>
            <param name="Node"></param>
            <param name="start"></param>
            <param name="len"></param>
            <param name="ans">UserActionRec List</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.UpdateListNode(System.String,System.String)">
            <summary>
            更新
            </summary>
            <param name="Node"></param>
            <param name="Data"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.GetRightListActID(System.Int32,PengeSoft.WorkZoneData.RightDefs@)">
            <summary>
            取指定权限号的相关用户/组, 考虑继承关系, 如不考虑继承，用GetDetail()即可。
            </summary>
            <param name="ActID">权限标识</param>
            <param name="ans"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.GetRightListUSID(System.Int32,System.Int64,System.Int32,System.Int32[]@)">
            <summary>
            取指定安全标识的用户/组所有相关权限表
            </summary>
            <param name="USID">用户/组的安全标识</param>
            <param name="Mask">需检查的权限掩码,只要有一位成立就会返回相应权限号</param>
            <param name="Option">选项</param>
            <param name="ans"></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.GetActList(System.Int32,System.Int32,System.Int32,System.Int32,System.String@)">
            <summary>
            取权限列表
            </summary>
            <param name="level">
            取列表的级别，有以下方面:
                    ACTL_DETAIL  : 取详细信息
                    ACTL_LITTLE  : 取少量信息
            和下面两个可或上的选项(可或在一起)
                    ACTL_GETBYNODE : 按 Tag 指定节点取
                    ACTL_INPARNODE : 包括 Tag 指定节点本身
            </param>
            <param name="Tag">指定节点的标识(权限号)</param>
            <param name="start">结果起始记录号, 从 0 开始</param>
            <param name="count">结果记录条数, -1 表示全部</param>
            <param name="ansXml">结果的Xml序列值, 存贮的 UserRightRec 的 DataList </param>
            <returns><see cref="T:PengeSoft.Auther.RightCheck.AutherCheckResult"/>成功返回PengeSoft.Auther.RightCheck.OP_SUCESS,否则返回出错码</returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.GetActDefs(System.Int32,System.Int32,System.Int32,PengeSoft.WorkZoneData.ActRights@)">
            <summary>
            取用户权限定义数据，不考虑任何继承关系
            </summary>
            <param name="Sid">用户安全标识号</param>
            <param name="node">起始权限节点号，0表示全部节点，取该节点及子节点</param>
            <param name="option"></param>
            <param name="defs">返回值 <see cref="T:PengeSoft.WorkZoneData.ActRights"/></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.UpdateActDefs(System.Int32,System.Int32,PengeSoft.WorkZoneData.ActRights)">
            <summary>
            更新用户权限定义数据，不考虑任何继承关系
            </summary>
            <param name="Sid">用户标识</param>
            <param name="option">选项,暂时未用</param>
            <param name="defs">权限定义数据 <see cref="T:PengeSoft.WorkZoneData.ActRights"/></param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.GetUserActionRight(System.Int32,System.Int32,System.UInt64@)">
            <summary>
            取用户权限掩码
            </summary>
            <param name="sid">用户标识</param>
            <param name="actId">权限标识</param>
            <param name="rightMask">输出的权限掩码</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.GetRoleActionRight(System.Int32,System.Int32,System.UInt64@)">
            <summary>
            取角色权限掩码
            </summary>
            <param name="roleId">角色标识</param>
            <param name="actId">权限标识</param>
            <param name="rightMask">输出的权限掩码</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.GetUserActionRight(System.String,System.String,System.UInt64@)">
            <summary>
            取用户权限掩码，使用用户及权限名称
            </summary>
            <param name="loginId">用户登录名称</param>
            <param name="actName">权限名称</param>
            <param name="rightMask">输出的权限掩码</param>
            <returns></returns>
        </member>
        <member name="M:PengeSoft.Auther.IActionManager.GetRoleActionRight(System.String,System.String,System.UInt64@)">
            <summary>
            取角色权限掩码，使用角色及权限名称
            </summary>
            <param name="roleName">角色名称</param>
            <param name="actName">权限名称</param>
            <param name="rightMask">输出的权限掩码</param>
            <returns></returns>
        </member>
        <member name="T:PengeSoft.Auther.UserRightDef">
            <summary>
            UserRightDef 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.UserRightDef.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.UserRightDef.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.UserRightDef.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Auther.UserRightDef.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Auther.UserRightDef.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.Auther.UserRightDef.OpLevel">
            <summary>
            操作员级别 
            </summary>
        </member>
        <member name="T:PengeSoft.Auther.UserRightGroup">
            <summary>
            UserRightGroup 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.UserRightGroup.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.UserRightGroup.CreateNewItem">
            <summary>
            根据创建一个新 <see cref="T:PengeSoft.Auther.UserRight"/> 元素实例
            </summary>
            <returns>元素实例</returns>
        </member>
        <member name="M:PengeSoft.Auther.UserRightGroup.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.UserRightGroup.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Auther.UserRightGroup.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Auther.UserRightGroup.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.Auther.UserRightGroup.OpLevel">
            <summary>
            操作员级别 
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.UserRightGroup.Action">
            <summary>
            权限号 
            </summary>
        </member>
        <member name="T:PengeSoft.Auther.UserRight">
            <summary>
            UserRight 的摘要说明。
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.UserRight.Get_RightMaskSet(System.Int32)">
            <summary>
            设位集: 权限掩码 
            </summary>
            <param name="n">属性序号</param>
            <returns>属性值</returns>
        </member>
        <member name="M:PengeSoft.Auther.UserRight.Set_RightMaskSet(System.Int32,System.Boolean)">
            <summary>
            取位集: 权限掩码 
            </summary>
            <param name="n">属性序号</param>
            <param name="v">属性值</param>
        </member>
        <member name="M:PengeSoft.Auther.UserRight.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.UserRight.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Auther.UserRight.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Auther.UserRight.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.Auther.UserRight.RealId">
            <summary>
            用户或组标识 
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.UserRight.IsUser">
            <summary>
            是用户权限
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.UserRight.IsGroup">
            <summary>
            是组权限
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.UserRight.UId">
            <summary>
            用户或组标识 
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.UserRight.RightMask">
            <summary>
            权限掩码 
            </summary>
        </member>
        <member name="T:PengeSoft.Auther.UserSecID">
            <summary>
            UserSecID 的摘要说明。
            </summary>
            <remarks>
            用户安全标识 
            </remarks>
        </member>
        <member name="M:PengeSoft.Auther.UserSecID.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.UserSecID.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Auther.UserSecID.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Auther.UserSecID.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.Auther.UserSecID.UId">
            <summary>
            用户标识 
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.UserSecID.LoginID">
            <summary>
            用户名称 
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.UserSecID.OpLevel">
            <summary>
            安全级别 
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.UserSecID.GroupIds">
            <summary>
            所属组表 
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.UserSecID.GroupNames">
            <summary>
            所属组名称表 
            </summary>
        </member>
        <member name="T:PengeSoft.Auther.UserObjRight">
            <summary>
            UserObjRight 的摘要说明。
            </summary>
            <remarks>
            对象权限 
            </remarks>
        </member>
        <member name="M:PengeSoft.Auther.UserObjRight.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.UserObjRight.Clear">
            <summary>
            清除所有数据。
            </summary>
        </member>
        <member name="M:PengeSoft.Auther.UserObjRight.XMLEncode(System.Xml.XmlNode)">
            <summary>
            用指定节点序列化整个数据对象。
            </summary>
            <param name="node">用于序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Auther.UserObjRight.XMLDecode(System.Xml.XmlNode)">
            <summary>
            用指定节点反序列化整个数据对象。
            </summary>
            <param name="node">用于反序列化的 XmlNode 节点。</param>
        </member>
        <member name="M:PengeSoft.Auther.UserObjRight.AssignFrom(PengeSoft.Data.DataPacket)">
            <summary>
            复制数据对象
            </summary>
            <param name="sou">源对象,需从DataPacket继承</param>
        </member>
        <member name="P:PengeSoft.Auther.UserObjRight.Id">
            <summary>
            标识 
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.UserObjRight.Owner">
            <summary>
            所有者 
            </summary>
        </member>
        <member name="P:PengeSoft.Auther.UserObjRight.RightDef">
            <summary>
            权限定义 
            </summary>
        </member>
    </members>
</doc>
